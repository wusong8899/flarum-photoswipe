{"version":3,"file":"forum.js","sources":["../node_modules/.pnpm/photoswipe@5.4.4/node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","../node_modules/.pnpm/photoswipe@5.4.4/node_modules/photoswipe/dist/photoswipe.esm.js","../src/forum/utils/GlideConfig.ts","../src/forum/components/PhotoSwipeGlideComponent.tsx","../src/forum/index.ts","../node_modules/.pnpm/@glidejs+glide@3.7.1/node_modules/@glidejs/glide/dist/glide.esm.js"],"sourcesContent":["/*!\n  * PhotoSwipe Lightbox 5.4.4 - https://photoswipe.com\n  * (c) 2024 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\nfunction createElement(className, tagName, appendToEl) {\n  const el = document.createElement(tagName);\n\n  if (className) {\n    el.className = className;\n  }\n\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  }\n\n  return el;\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\n\nfunction toTransformString(x, y, scale) {\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n\n  if (scale !== undefined) {\n    propValue += ` scale3d(${scale},${scale},1)`;\n  }\n\n  return propValue;\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\n\nfunction setWidthHeight(el, w, h) {\n  el.style.width = typeof w === 'number' ? `${w}px` : w;\n  el.style.height = typeof h === 'number' ? `${h}px` : h;\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\n\nconst LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error'\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\n\nfunction specialKeyUsed(e) {\n  return 'button' in e && e.button === 1 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\n\nfunction getElementsFromOption(option, legacySelector, parent = document) {\n  /** @type {HTMLElement[]} */\n  let elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    const selector = typeof option === 'string' ? option : legacySelector;\n\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\n\nfunction isPswpClass(fn) {\n  return typeof fn === 'function' && fn.prototype && fn.prototype.goTo;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\n\nfunction isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n\n/** @typedef {import('../slide/slide.js').default} Slide */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\n\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\nclass PhotoSwipeEvent {\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\n  constructor(type, details) {\n    this.type = type;\n    this.defaultPrevented = false;\n\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\n\n\nclass Eventable {\n  constructor() {\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\n    this._listeners = {};\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\n\n    this._filters = {};\n    /** @type {PhotoSwipe | undefined} */\n\n    this.pswp = undefined;\n    /** @type {PhotoSwipeOptions | undefined} */\n\n    this.options = undefined;\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\n\n\n  addFilter(name, fn, priority = 100) {\n    var _this$_filters$name, _this$_filters$name2, _this$pswp;\n\n    if (!this._filters[name]) {\n      this._filters[name] = [];\n    }\n\n    (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.push({\n      fn,\n      priority\n    });\n    (_this$_filters$name2 = this._filters[name]) === null || _this$_filters$name2 === void 0 || _this$_filters$name2.sort((f1, f2) => f1.priority - f2.priority);\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.addFilter(name, fn, priority);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\n\n\n  removeFilter(name, fn) {\n    if (this._filters[name]) {\n      // @ts-expect-error\n      this._filters[name] = this._filters[name].filter(filter => filter.fn !== fn);\n    }\n\n    if (this.pswp) {\n      this.pswp.removeFilter(name, fn);\n    }\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\n\n\n  applyFilters(name, ...args) {\n    var _this$_filters$name3;\n\n    (_this$_filters$name3 = this._filters[name]) === null || _this$_filters$name3 === void 0 || _this$_filters$name3.forEach(filter => {\n      // @ts-expect-error\n      args[0] = filter.fn.apply(this, args);\n    });\n    return args[0];\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  on(name, fn) {\n    var _this$_listeners$name, _this$pswp2;\n\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.push(fn); // When binding events to lightbox,\n    // also bind events to PhotoSwipe Core,\n    // if it's open.\n\n    (_this$pswp2 = this.pswp) === null || _this$pswp2 === void 0 || _this$pswp2.on(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  off(name, fn) {\n    var _this$pswp3;\n\n    if (this._listeners[name]) {\n      // @ts-expect-error\n      this._listeners[name] = this._listeners[name].filter(listener => fn !== listener);\n    }\n\n    (_this$pswp3 = this.pswp) === null || _this$pswp3 === void 0 || _this$pswp3.off(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\n\n\n  dispatch(name, details) {\n    var _this$_listeners$name2;\n\n    if (this.pswp) {\n      return this.pswp.dispatch(name, details);\n    }\n\n    const event =\n    /** @type {AugmentedEvent<T>} */\n    new PhotoSwipeEvent(name, details);\n    (_this$_listeners$name2 = this._listeners[name]) === null || _this$_listeners$name2 === void 0 || _this$_listeners$name2.forEach(listener => {\n      listener.call(this, event);\n    });\n    return event;\n  }\n\n}\n\nclass Placeholder {\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\n  constructor(imageSrc, container) {\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\n    this.element = createElement('pswp__img pswp__img--placeholder', imageSrc ? 'img' : 'div', container);\n\n    if (imageSrc) {\n      const imgEl =\n      /** @type {HTMLImageElement} */\n      this.element;\n      imgEl.decoding = 'async';\n      imgEl.alt = '';\n      imgEl.src = imageSrc;\n      imgEl.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.element.tagName === 'IMG') {\n      // Use transform scale() to modify img placeholder size\n      // (instead of changing width/height directly).\n      // This helps with performance, specifically in iOS15 Safari.\n      setWidthHeight(this.element, 250, 'auto');\n      this.element.style.transformOrigin = '0 0';\n      this.element.style.transform = toTransformString(0, 0, width / 250);\n    } else {\n      setWidthHeight(this.element, width, height);\n    }\n  }\n\n  destroy() {\n    var _this$element;\n\n    if ((_this$element = this.element) !== null && _this$element !== void 0 && _this$element.parentNode) {\n      this.element.remove();\n    }\n\n    this.element = null;\n  }\n\n}\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\nclass Content {\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\n  constructor(itemData, instance, index) {\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\n\n    this.element = undefined;\n    /** @type {Placeholder | undefined} */\n\n    this.placeholder = undefined;\n    /** @type {Slide | undefined} */\n\n    this.slide = undefined;\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n    this.isAttached = false;\n    this.hasSlide = false;\n    this.isDecoding = false;\n    /** @type {LoadState} */\n\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', {\n      content: this\n    });\n  }\n\n  removePlaceholder() {\n    if (this.placeholder && !this.keepPlaceholder()) {\n      // With delay, as image might be loaded, but not rendered\n      setTimeout(() => {\n        if (this.placeholder) {\n          this.placeholder.destroy();\n          this.placeholder = undefined;\n        }\n      }, 1000);\n    }\n  }\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\n\n\n  load(isLazy, reload) {\n    if (this.slide && this.usePlaceholder()) {\n      if (!this.placeholder) {\n        const placeholderSrc = this.instance.applyFilters('placeholderSrc', // use  image-based placeholder only for the first slide,\n        // as rendering (even small stretched thumbnail) is an expensive operation\n        this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n        this.placeholder = new Placeholder(placeholderSrc, this.slide.container);\n      } else {\n        const placeholderEl = this.placeholder.element; // Add placeholder to DOM if it was already created\n\n        if (placeholderEl && !placeholderEl.parentElement) {\n          this.slide.container.prepend(placeholderEl);\n        }\n      }\n    }\n\n    if (this.element && !reload) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentLoad', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.isImageContent()) {\n      this.element = createElement('pswp__img', 'img'); // Start loading only after width is defined, as sizes might depend on it.\n      // Due to Safari feature, we must define sizes before srcset.\n\n      if (this.displayedImageWidth) {\n        this.loadImage(isLazy);\n      }\n    } else {\n      this.element = createElement('pswp__content', 'div');\n      this.element.innerHTML = this.data.html || '';\n    }\n\n    if (reload && this.slide) {\n      this.slide.updateContentSize(true);\n    }\n  }\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\n\n\n  loadImage(isLazy) {\n    var _this$data$src, _this$data$alt;\n\n    if (!this.isImageContent() || !this.element || this.instance.dispatch('contentLoadImage', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    const imageElement =\n    /** @type HTMLImageElement */\n    this.element;\n    this.updateSrcsetSizes();\n\n    if (this.data.srcset) {\n      imageElement.srcset = this.data.srcset;\n    }\n\n    imageElement.src = (_this$data$src = this.data.src) !== null && _this$data$src !== void 0 ? _this$data$src : '';\n    imageElement.alt = (_this$data$alt = this.data.alt) !== null && _this$data$alt !== void 0 ? _this$data$alt : '';\n    this.state = LOAD_STATE.LOADING;\n\n    if (imageElement.complete) {\n      this.onLoaded();\n    } else {\n      imageElement.onload = () => {\n        this.onLoaded();\n      };\n\n      imageElement.onerror = () => {\n        this.onError();\n      };\n    }\n  }\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\n\n\n  setSlide(slide) {\n    this.slide = slide;\n    this.hasSlide = true;\n    this.instance = slide.pswp; // todo: do we need to unset slide?\n  }\n  /**\r\n   * Content load success handler\r\n   */\n\n\n  onLoaded() {\n    this.state = LOAD_STATE.LOADED;\n\n    if (this.slide && this.element) {\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        content: this\n      }); // if content is reloaded\n\n      if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n        this.append();\n        this.slide.updateContentSize(true);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }\n  /**\r\n   * Content load error handler\r\n   */\n\n\n  onError() {\n    this.state = LOAD_STATE.ERROR;\n\n    if (this.slide) {\n      this.displayError();\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        isError: true,\n        content: this\n      });\n      this.instance.dispatch('loadError', {\n        slide: this.slide,\n        content: this\n      });\n    }\n  }\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\n\n\n  isLoading() {\n    return this.instance.applyFilters('isContentLoading', this.state === LOAD_STATE.LOADING, this);\n  }\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\n\n\n  isError() {\n    return this.state === LOAD_STATE.ERROR;\n  }\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\n\n\n  isImageContent() {\n    return this.type === 'image';\n  }\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.placeholder) {\n      this.placeholder.setDisplayedSize(width, height);\n    }\n\n    if (this.instance.dispatch('contentResize', {\n      content: this,\n      width,\n      height\n    }).defaultPrevented) {\n      return;\n    }\n\n    setWidthHeight(this.element, width, height);\n\n    if (this.isImageContent() && !this.isError()) {\n      const isInitialSizeUpdate = !this.displayedImageWidth && width;\n      this.displayedImageWidth = width;\n      this.displayedImageHeight = height;\n\n      if (isInitialSizeUpdate) {\n        this.loadImage(false);\n      } else {\n        this.updateSrcsetSizes();\n      }\n\n      if (this.slide) {\n        this.instance.dispatch('imageSizeChange', {\n          slide: this.slide,\n          width,\n          height,\n          content: this\n        });\n      }\n    }\n  }\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\n\n\n  isZoomable() {\n    return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== LOAD_STATE.ERROR, this);\n  }\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\n\n\n  updateSrcsetSizes() {\n    // Handle srcset sizes attribute.\n    //\n    // Never lower quality, if it was increased previously.\n    // Chrome does this automatically, Firefox and Safari do not,\n    // so we store largest used size in dataset.\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\n      return;\n    }\n\n    const image =\n    /** @type HTMLImageElement */\n    this.element;\n    const sizesWidth = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);\n\n    if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n      image.sizes = sizesWidth + 'px';\n      image.dataset.largestUsedSize = String(sizesWidth);\n    }\n  }\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\n\n\n  usePlaceholder() {\n    return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);\n  }\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\n\n\n  lazyLoad() {\n    if (this.instance.dispatch('contentLazyLoad', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.load(true);\n  }\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\n\n\n  keepPlaceholder() {\n    return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);\n  }\n  /**\r\n   * Destroy the content\r\n   */\n\n\n  destroy() {\n    this.hasSlide = false;\n    this.slide = undefined;\n\n    if (this.instance.dispatch('contentDestroy', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.remove();\n\n    if (this.placeholder) {\n      this.placeholder.destroy();\n      this.placeholder = undefined;\n    }\n\n    if (this.isImageContent() && this.element) {\n      this.element.onload = null;\n      this.element.onerror = null;\n      this.element = undefined;\n    }\n  }\n  /**\r\n   * Display error message\r\n   */\n\n\n  displayError() {\n    if (this.slide) {\n      var _this$instance$option, _this$instance$option2;\n\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\n      errorMsgEl.innerText = (_this$instance$option = (_this$instance$option2 = this.instance.options) === null || _this$instance$option2 === void 0 ? void 0 : _this$instance$option2.errorMsg) !== null && _this$instance$option !== void 0 ? _this$instance$option : '';\n      errorMsgEl =\n      /** @type {HTMLDivElement} */\n      this.instance.applyFilters('contentErrorElement', errorMsgEl, this);\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\n      this.element.appendChild(errorMsgEl);\n      this.slide.container.innerText = '';\n      this.slide.container.appendChild(this.element);\n      this.slide.updateContentSize(true);\n      this.removePlaceholder();\n    }\n  }\n  /**\r\n   * Append the content\r\n   */\n\n\n  append() {\n    if (this.isAttached || !this.element) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.state === LOAD_STATE.ERROR) {\n      this.displayError();\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppend', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    const supportsDecode = ('decode' in this.element);\n\n    if (this.isImageContent()) {\n      // Use decode() on nearby slides\n      //\n      // Nearby slide images are in DOM and not hidden via display:none.\n      // However, they are placed offscreen (to the left and right side).\n      //\n      // Some browsers do not composite the image until it's actually visible,\n      // using decode() helps.\n      //\n      // You might ask \"why dont you just decode() and then append all images\",\n      // that's because I want to show image before it's fully loaded,\n      // as browser can render parts of image while it is loading.\n      // We do not do this in Safari due to partial loading bug.\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n        this.isDecoding = true; // purposefully using finally instead of then,\n        // as if srcset sizes changes dynamically - it may cause decode error\n\n        /** @type {HTMLImageElement} */\n\n        this.element.decode().catch(() => {}).finally(() => {\n          this.isDecoding = false;\n          this.appendImage();\n        });\n      } else {\n        this.appendImage();\n      }\n    } else if (this.slide && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n  }\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\n\n\n  activate() {\n    if (this.instance.dispatch('contentActivate', {\n      content: this\n    }).defaultPrevented || !this.slide) {\n      return;\n    }\n\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\n      // add image to slide when it becomes active,\n      // even if it's not finished decoding\n      this.appendImage();\n    } else if (this.isError()) {\n      this.load(false, true); // try to reload\n    }\n\n    if (this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\n    }\n  }\n  /**\r\n   * Deactivate the content\r\n   */\n\n\n  deactivate() {\n    this.instance.dispatch('contentDeactivate', {\n      content: this\n    });\n\n    if (this.slide && this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\r\n   * Remove the content from DOM\r\n   */\n\n\n  remove() {\n    this.isAttached = false;\n\n    if (this.instance.dispatch('contentRemove', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.remove();\n    }\n\n    if (this.placeholder && this.placeholder.element) {\n      this.placeholder.element.remove();\n    }\n  }\n  /**\r\n   * Append the image content to slide container\r\n   */\n\n\n  appendImage() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppendImage', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    } // ensure that element exists and is not already appended\n\n\n    if (this.slide && this.element && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n      this.removePlaceholder();\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\nfunction getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\n\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\n\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  let paddingValue = 0;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1); // @ts-expect-error\n\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return Number(paddingValue) || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\n\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x - parsePaddingOption('left', options, viewportSize, itemData, index) - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y - parsePaddingOption('top', options, viewportSize, itemData, index) - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\n\nclass ZoomLevel {\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\n  constructor(options, itemData, index, pswp) {\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n    /** @type { Point | null } */\n\n    this.panAreaSize = null;\n    /** @type { Point | null } */\n\n    this.elementSize = null;\n    this.fit = 1;\n    this.fill = 1;\n    this.vFill = 1;\n    this.initial = 1;\n    this.secondary = 1;\n    this.max = 1;\n    this.min = 1;\n  }\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\n\n\n  update(maxWidth, maxHeight, panAreaSize) {\n    /** @type {Point} */\n    const elementSize = {\n      x: maxWidth,\n      y: maxHeight\n    };\n    this.elementSize = elementSize;\n    this.panAreaSize = panAreaSize;\n    const hRatio = panAreaSize.x / elementSize.x;\n    const vRatio = panAreaSize.y / elementSize.y;\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio); // zoom.vFill defines zoom level of the image\n    // when it has 100% of viewport vertical space (height)\n\n    this.vFill = Math.min(1, vRatio);\n    this.initial = this._getInitial();\n    this.secondary = this._getSecondary();\n    this.max = Math.max(this.initial, this.secondary, this._getMax());\n    this.min = Math.min(this.fit, this.initial, this.secondary);\n\n    if (this.pswp) {\n      this.pswp.dispatch('zoomLevelsUpdate', {\n        zoomLevels: this,\n        slideData: this.itemData\n      });\n    }\n  }\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\n\n\n  _parseZoomLevelOption(optionPrefix) {\n    const optionName =\n    /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */\n    optionPrefix + 'ZoomLevel';\n    const optionValue = this.options[optionName];\n\n    if (!optionValue) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      return optionValue(this);\n    }\n\n    if (optionValue === 'fill') {\n      return this.fill;\n    }\n\n    if (optionValue === 'fit') {\n      return this.fit;\n    }\n\n    return Number(optionValue);\n  }\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getSecondary() {\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\n\n    if (currZoomLevel) {\n      return currZoomLevel;\n    } // 3x of \"fit\" state, but not larger than original\n\n\n    currZoomLevel = Math.min(1, this.fit * 3);\n\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n    }\n\n    return currZoomLevel;\n  }\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getInitial() {\n    return this._parseZoomLevelOption('initial') || this.fit;\n  }\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getMax() {\n    // max zoom level is x4 from \"fit state\",\n    // used for zoom gesture and ctrl/trackpad zoom\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\n  }\n\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\n\nfunction lazyLoadData(itemData, instance, index) {\n  const content = instance.createContentFromData(itemData, index);\n  /** @type {ZoomLevel | undefined} */\n\n  let zoomLevel;\n  const {\n    options\n  } = instance; // We need to know dimensions of the image to preload it,\n  // as it might use srcset, and we need to define sizes\n\n  if (options) {\n    zoomLevel = new ZoomLevel(options, itemData, -1);\n    let viewportSize;\n\n    if (instance.pswp) {\n      viewportSize = instance.pswp.viewportSize;\n    } else {\n      viewportSize = getViewportSize(options, instance);\n    }\n\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n    zoomLevel.update(content.width, content.height, panAreaSize);\n  }\n\n  content.lazyLoad();\n\n  if (zoomLevel) {\n    content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n  }\n\n  return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\n\nfunction lazyLoadSlide(index, instance) {\n  const itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', {\n    index,\n    itemData\n  }).defaultPrevented) {\n    return;\n  }\n\n  return lazyLoadData(itemData, instance, index);\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\n\nclass PhotoSwipeBase extends Eventable {\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\n  getNumItems() {\n    var _this$options;\n\n    let numItems = 0;\n    const dataSource = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.dataSource;\n\n    if (dataSource && 'length' in dataSource) {\n      // may be an array or just object with length property\n      numItems = dataSource.length;\n    } else if (dataSource && 'gallery' in dataSource) {\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      if (dataSource.items) {\n        numItems = dataSource.items.length;\n      }\n    } // legacy event, before filters were introduced\n\n\n    const event = this.dispatch('numItems', {\n      dataSource,\n      numItems\n    });\n    return this.applyFilters('numItems', event.numItems, dataSource);\n  }\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\n\n\n  createContentFromData(slideData, index) {\n    return new Content(slideData, this, index);\n  }\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\n\n\n  getItemData(index) {\n    var _this$options2;\n\n    const dataSource = (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.dataSource;\n    /** @type {SlideData | HTMLElement} */\n\n    let dataSourceItem = {};\n\n    if (Array.isArray(dataSource)) {\n      // Datasource is an array of elements\n      dataSourceItem = dataSource[index];\n    } else if (dataSource && 'gallery' in dataSource) {\n      // dataSource has gallery property,\n      // thus it was created by Lightbox, based on\n      // gallery and children options\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      dataSourceItem = dataSource.items[index];\n    }\n\n    let itemData = dataSourceItem;\n\n    if (itemData instanceof Element) {\n      itemData = this._domElementToItemData(itemData);\n    } // Dispatching the itemData event,\n    // it's a legacy verion before filters were introduced\n\n\n    const event = this.dispatch('itemData', {\n      itemData: itemData || {},\n      index\n    });\n    return this.applyFilters('itemData', event.itemData, index);\n  }\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\n\n\n  _getGalleryDOMElements(galleryElement) {\n    var _this$options3, _this$options4;\n\n    if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.children || (_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.childSelector) {\n      return getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n    }\n\n    return [galleryElement];\n  }\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\n\n\n  _domElementToItemData(element) {\n    /** @type {SlideData} */\n    const itemData = {\n      element\n    };\n    const linkEl =\n    /** @type {HTMLAnchorElement} */\n    element.tagName === 'A' ? element : element.querySelector('a');\n\n    if (linkEl) {\n      // src comes from data-pswp-src attribute,\n      // if it's empty link href is used\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n      if (linkEl.dataset.pswpSrcset) {\n        itemData.srcset = linkEl.dataset.pswpSrcset;\n      }\n\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0; // support legacy w & h properties\n\n      itemData.w = itemData.width;\n      itemData.h = itemData.height;\n\n      if (linkEl.dataset.pswpType) {\n        itemData.type = linkEl.dataset.pswpType;\n      }\n\n      const thumbnailEl = element.querySelector('img');\n\n      if (thumbnailEl) {\n        var _thumbnailEl$getAttri;\n\n        // msrc is URL to placeholder image that's displayed before large image is loaded\n        // by default it's displayed only for the first slide\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n        itemData.alt = (_thumbnailEl$getAttri = thumbnailEl.getAttribute('alt')) !== null && _thumbnailEl$getAttri !== void 0 ? _thumbnailEl$getAttri : '';\n      }\n\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n        itemData.thumbCropped = true;\n      }\n    }\n\n    return this.applyFilters('domItemData', itemData, element, linkEl);\n  }\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\n\n\n  lazyLoadData(itemData, index) {\n    return lazyLoadData(itemData, this, index);\n  }\n\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/content.js').default} Content */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\n\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\n\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\n  constructor(options) {\n    super();\n    /** @type {PhotoSwipeOptions} */\n\n    this.options = options || {};\n    this._uid = 0;\n    this.shouldOpen = false;\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\n\n    this._preloadedContent = undefined;\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\n  }\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\n\n\n  init() {\n    // Bind click events to each gallery\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.addEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n  /**\r\n   * @param {MouseEvent} e\r\n   */\n\n\n  onThumbnailsClick(e) {\n    // Exit and allow default browser action if:\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\n    || window.pswp) {\n      // ... if PhotoSwipe is already open\n      return;\n    } // If both clientX and clientY are 0 or not defined,\n    // the event is likely triggered by keyboard,\n    // so we do not pass the initialPoint\n    //\n    // Note that some screen readers emulate the mouse position,\n    // so it's not the ideal way to detect them.\n    //\n\n    /** @type {Point | null} */\n\n\n    let initialPoint = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (!initialPoint.x && !initialPoint.y) {\n      initialPoint = null;\n    }\n\n    let clickedIndex = this.getClickedIndex(e);\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\n    /** @type {DataSource} */\n\n    const dataSource = {\n      gallery:\n      /** @type {HTMLElement} */\n      e.currentTarget\n    };\n\n    if (clickedIndex >= 0) {\n      e.preventDefault();\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\n    }\n  }\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\n\n\n  getClickedIndex(e) {\n    // legacy option\n    if (this.options.getClickedIndexFn) {\n      return this.options.getClickedIndexFn.call(this, e);\n    }\n\n    const clickedTarget =\n    /** @type {HTMLElement} */\n    e.target;\n    const childElements = getElementsFromOption(this.options.children, this.options.childSelector,\n    /** @type {HTMLElement} */\n    e.currentTarget);\n    const clickedChildIndex = childElements.findIndex(child => child === clickedTarget || child.contains(clickedTarget));\n\n    if (clickedChildIndex !== -1) {\n      return clickedChildIndex;\n    } else if (this.options.children || this.options.childSelector) {\n      // click wasn't on a child element\n      return -1;\n    } // There is only one item (which is the gallery)\n\n\n    return 0;\n  }\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\n\n\n  loadAndOpen(index, dataSource, initialPoint) {\n    // Check if the gallery is already open\n    if (window.pswp || !this.options) {\n      return false;\n    } // Use the first gallery element if dataSource is not provided\n\n\n    if (!dataSource && this.options.gallery && this.options.children) {\n      const galleryElements = getElementsFromOption(this.options.gallery);\n\n      if (galleryElements[0]) {\n        dataSource = {\n          gallery: galleryElements[0]\n        };\n      }\n    } // set initial index\n\n\n    this.options.index = index; // define options for PhotoSwipe constructor\n\n    this.options.initialPointerPos = initialPoint;\n    this.shouldOpen = true;\n    this.preload(index, dataSource);\n    return true;\n  }\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\n\n\n  preload(index, dataSource) {\n    const {\n      options\n    } = this;\n\n    if (dataSource) {\n      options.dataSource = dataSource;\n    } // Add the main module\n\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\n\n\n    const promiseArray = [];\n    const pswpModuleType = typeof options.pswpModule;\n\n    if (isPswpClass(options.pswpModule)) {\n      promiseArray.push(Promise.resolve(\n      /** @type {Type<PhotoSwipe>} */\n      options.pswpModule));\n    } else if (pswpModuleType === 'string') {\n      throw new Error('pswpModule as string is no longer supported');\n    } else if (pswpModuleType === 'function') {\n      promiseArray.push(\n      /** @type {() => Promise<Type<PhotoSwipe>>} */\n      options.pswpModule());\n    } else {\n      throw new Error('pswpModule is not valid');\n    } // Add custom-defined promise, if any\n\n\n    if (typeof options.openPromise === 'function') {\n      // allow developers to perform some task before opening\n      promiseArray.push(options.openPromise());\n    }\n\n    if (options.preloadFirstSlide !== false && index >= 0) {\n      this._preloadedContent = lazyLoadSlide(index, this);\n    } // Wait till all promises resolve and open PhotoSwipe\n\n\n    const uid = ++this._uid;\n    Promise.all(promiseArray).then(iterableModules => {\n      if (this.shouldOpen) {\n        const mainModule = iterableModules[0];\n\n        this._openPhotoswipe(mainModule, uid);\n      }\n    });\n  }\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\n\n\n  _openPhotoswipe(module, uid) {\n    // Cancel opening if UID doesn't match the current one\n    // (if user clicked on another gallery item before current was loaded).\n    //\n    // Or if shouldOpen flag is set to false\n    // (developer may modify it via public API)\n    if (uid !== this._uid && this.shouldOpen) {\n      return;\n    }\n\n    this.shouldOpen = false; // PhotoSwipe is already open\n\n    if (window.pswp) {\n      return;\n    }\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\n\n\n    const pswp = typeof module === 'object' ? new module.default(this.options) // eslint-disable-line\n    : new module(this.options); // eslint-disable-line\n\n    this.pswp = pswp;\n    window.pswp = pswp; // map listeners from Lightbox to PhotoSwipe Core\n\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\n\n    Object.keys(this._listeners).forEach(name => {\n      var _this$_listeners$name;\n\n      (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.forEach(fn => {\n        pswp.on(name,\n        /** @type {EventCallback<typeof name>} */\n        fn);\n      });\n    }); // same with filters\n\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\n\n    Object.keys(this._filters).forEach(name => {\n      var _this$_filters$name;\n\n      (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.forEach(filter => {\n        pswp.addFilter(name, filter.fn, filter.priority);\n      });\n    });\n\n    if (this._preloadedContent) {\n      pswp.contentLoader.addToCache(this._preloadedContent);\n      this._preloadedContent = undefined;\n    }\n\n    pswp.on('destroy', () => {\n      // clean up public variables\n      this.pswp = undefined;\n      delete window.pswp;\n    });\n    pswp.init();\n  }\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\n\n\n  destroy() {\n    var _this$pswp;\n\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.destroy();\n    this.shouldOpen = false;\n    this._listeners = {};\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","/*!\n  * PhotoSwipe 5.4.4 - https://photoswipe.com\n  * (c) 2024 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\nfunction createElement(className, tagName, appendToEl) {\n  const el = document.createElement(tagName);\n\n  if (className) {\n    el.className = className;\n  }\n\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  }\n\n  return el;\n}\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\n\nfunction equalizePoints(p1, p2) {\n  p1.x = p2.x;\n  p1.y = p2.y;\n\n  if (p2.id !== undefined) {\n    p1.id = p2.id;\n  }\n\n  return p1;\n}\n/**\r\n * @param {Point} p\r\n */\n\nfunction roundPoint(p) {\n  p.x = Math.round(p.x);\n  p.y = Math.round(p.y);\n}\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\n\nfunction getDistanceBetween(p1, p2) {\n  const x = Math.abs(p1.x - p2.x);\n  const y = Math.abs(p1.y - p2.y);\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\n\nfunction pointsEqual(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\n\nfunction clamp(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\n\nfunction toTransformString(x, y, scale) {\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n\n  if (scale !== undefined) {\n    propValue += ` scale3d(${scale},${scale},1)`;\n  }\n\n  return propValue;\n}\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\n\nfunction setTransform(el, x, y, scale) {\n  el.style.transform = toTransformString(x, y, scale);\n}\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\n\nfunction setTransitionStyle(el, prop, duration, ease) {\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\n  el.style.transition = prop ? `${prop} ${duration}ms ${ease || defaultCSSEasing}` : 'none';\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\n\nfunction setWidthHeight(el, w, h) {\n  el.style.width = typeof w === 'number' ? `${w}px` : w;\n  el.style.height = typeof h === 'number' ? `${h}px` : h;\n}\n/**\r\n * @param {HTMLElement} el\r\n */\n\nfunction removeTransitionStyle(el) {\n  setTransitionStyle(el);\n}\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\n\nfunction decodeImage(img) {\n  if ('decode' in img) {\n    return img.decode().catch(() => {});\n  }\n\n  if (img.complete) {\n    return Promise.resolve(img);\n  }\n\n  return new Promise((resolve, reject) => {\n    img.onload = () => resolve(img);\n\n    img.onerror = reject;\n  });\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\n\nconst LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error'\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\n\nfunction specialKeyUsed(e) {\n  return 'button' in e && e.button === 1 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\n\nfunction getElementsFromOption(option, legacySelector, parent = document) {\n  /** @type {HTMLElement[]} */\n  let elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    const selector = typeof option === 'string' ? option : legacySelector;\n\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\n\nfunction isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n\n// Detect passive event listener support\nlet supportsPassive = false;\n/* eslint-disable */\n\ntry {\n  /* @ts-ignore */\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n    get: () => {\n      supportsPassive = true;\n    }\n  }));\n} catch (e) {}\n/* eslint-enable */\n\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\n\n\nclass DOMEvents {\n  constructor() {\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\n    this._pool = [];\n  }\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\n\n\n  add(target, type, listener, passive) {\n    this._toggleListener(target, type, listener, passive);\n  }\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\n\n\n  remove(target, type, listener, passive) {\n    this._toggleListener(target, type, listener, passive, true);\n  }\n  /**\r\n   * Removes all bound events\r\n   */\n\n\n  removeAll() {\n    this._pool.forEach(poolItem => {\n      this._toggleListener(poolItem.target, poolItem.type, poolItem.listener, poolItem.passive, true, true);\n    });\n\n    this._pool = [];\n  }\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\n\n\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\n    if (!target) {\n      return;\n    }\n\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\n    const types = type.split(' ');\n    types.forEach(eType => {\n      if (eType) {\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\n        // so developer doesn't need to do this manually\n        if (!skipPool) {\n          if (unbind) {\n            // Remove from the events pool\n            this._pool = this._pool.filter(poolItem => {\n              return poolItem.type !== eType || poolItem.listener !== listener || poolItem.target !== target;\n            });\n          } else {\n            // Add to the events pool\n            this._pool.push({\n              target,\n              type: eType,\n              listener,\n              passive\n            });\n          }\n        } // most PhotoSwipe events call preventDefault,\n        // and we do not need browser to scroll the page\n\n\n        const eventOptions = supportsPassive ? {\n          passive: passive || false\n        } : false;\n        target[methodName](eType, listener, eventOptions);\n      }\n    });\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\nfunction getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\n\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\n\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  let paddingValue = 0;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1); // @ts-expect-error\n\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return Number(paddingValue) || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\n\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x - parsePaddingOption('left', options, viewportSize, itemData, index) - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y - parsePaddingOption('top', options, viewportSize, itemData, index) - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {Record<Axis, number>} Point */\n\n/** @typedef {'x' | 'y'} Axis */\n\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\n\nclass PanBounds {\n  /**\r\n   * @param {Slide} slide\r\n   */\n  constructor(slide) {\n    this.slide = slide;\n    this.currZoomLevel = 1;\n    this.center =\n    /** @type {Point} */\n    {\n      x: 0,\n      y: 0\n    };\n    this.max =\n    /** @type {Point} */\n    {\n      x: 0,\n      y: 0\n    };\n    this.min =\n    /** @type {Point} */\n    {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\n\n\n  update(currZoomLevel) {\n    this.currZoomLevel = currZoomLevel;\n\n    if (!this.slide.width) {\n      this.reset();\n    } else {\n      this._updateAxis('x');\n\n      this._updateAxis('y');\n\n      this.slide.pswp.dispatch('calcBounds', {\n        slide: this.slide\n      });\n    }\n  }\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\n\n\n  _updateAxis(axis) {\n    const {\n      pswp\n    } = this.slide;\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\n    const paddingProp = axis === 'x' ? 'left' : 'top';\n    const padding = parsePaddingOption(paddingProp, pswp.options, pswp.viewportSize, this.slide.data, this.slide.index);\n    const panAreaSize = this.slide.panAreaSize[axis]; // Default position of element.\n    // By default, it is center of viewport:\n\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding; // maximum pan position\n\n    this.max[axis] = elSize > panAreaSize ? Math.round(panAreaSize - elSize) + padding : this.center[axis]; // minimum pan position\n\n    this.min[axis] = elSize > panAreaSize ? padding : this.center[axis];\n  } // _getZeroBounds\n\n\n  reset() {\n    this.center.x = 0;\n    this.center.y = 0;\n    this.max.x = 0;\n    this.max.y = 0;\n    this.min.x = 0;\n    this.min.y = 0;\n  }\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\n\n\n  correctPan(axis, panOffset) {\n    // checkPanBounds\n    return clamp(panOffset, this.max[axis], this.min[axis]);\n  }\n\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\n\nclass ZoomLevel {\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\n  constructor(options, itemData, index, pswp) {\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n    /** @type { Point | null } */\n\n    this.panAreaSize = null;\n    /** @type { Point | null } */\n\n    this.elementSize = null;\n    this.fit = 1;\n    this.fill = 1;\n    this.vFill = 1;\n    this.initial = 1;\n    this.secondary = 1;\n    this.max = 1;\n    this.min = 1;\n  }\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\n\n\n  update(maxWidth, maxHeight, panAreaSize) {\n    /** @type {Point} */\n    const elementSize = {\n      x: maxWidth,\n      y: maxHeight\n    };\n    this.elementSize = elementSize;\n    this.panAreaSize = panAreaSize;\n    const hRatio = panAreaSize.x / elementSize.x;\n    const vRatio = panAreaSize.y / elementSize.y;\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio); // zoom.vFill defines zoom level of the image\n    // when it has 100% of viewport vertical space (height)\n\n    this.vFill = Math.min(1, vRatio);\n    this.initial = this._getInitial();\n    this.secondary = this._getSecondary();\n    this.max = Math.max(this.initial, this.secondary, this._getMax());\n    this.min = Math.min(this.fit, this.initial, this.secondary);\n\n    if (this.pswp) {\n      this.pswp.dispatch('zoomLevelsUpdate', {\n        zoomLevels: this,\n        slideData: this.itemData\n      });\n    }\n  }\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\n\n\n  _parseZoomLevelOption(optionPrefix) {\n    const optionName =\n    /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */\n    optionPrefix + 'ZoomLevel';\n    const optionValue = this.options[optionName];\n\n    if (!optionValue) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      return optionValue(this);\n    }\n\n    if (optionValue === 'fill') {\n      return this.fill;\n    }\n\n    if (optionValue === 'fit') {\n      return this.fit;\n    }\n\n    return Number(optionValue);\n  }\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getSecondary() {\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\n\n    if (currZoomLevel) {\n      return currZoomLevel;\n    } // 3x of \"fit\" state, but not larger than original\n\n\n    currZoomLevel = Math.min(1, this.fit * 3);\n\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n    }\n\n    return currZoomLevel;\n  }\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getInitial() {\n    return this._parseZoomLevelOption('initial') || this.fit;\n  }\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getMax() {\n    // max zoom level is x4 from \"fit state\",\n    // used for zoom gesture and ctrl/trackpad zoom\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n/**\r\n * Renders and allows to control a single slide\r\n */\n\nclass Slide {\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(data, index, pswp) {\n    this.data = data;\n    this.index = index;\n    this.pswp = pswp;\n    this.isActive = index === pswp.currIndex;\n    this.currentResolution = 0;\n    /** @type {Point} */\n\n    this.panAreaSize = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point} */\n\n    this.pan = {\n      x: 0,\n      y: 0\n    };\n    this.isFirstSlide = this.isActive && !pswp.opener.isOpen;\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\n    this.pswp.dispatch('gettingData', {\n      slide: this,\n      data: this.data,\n      index\n    });\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\n    this.container = createElement('pswp__zoom-wrap', 'div');\n    /** @type {HTMLElement | null} */\n\n    this.holderElement = null;\n    this.currZoomLevel = 1;\n    /** @type {number} */\n\n    this.width = this.content.width;\n    /** @type {number} */\n\n    this.height = this.content.height;\n    this.heavyAppended = false;\n    this.bounds = new PanBounds(this);\n    this.prevDisplayedWidth = -1;\n    this.prevDisplayedHeight = -1;\n    this.pswp.dispatch('slideInit', {\n      slide: this\n    });\n  }\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\n\n\n  setIsActive(isActive) {\n    if (isActive && !this.isActive) {\n      // slide just became active\n      this.activate();\n    } else if (!isActive && this.isActive) {\n      // slide just became non-active\n      this.deactivate();\n    }\n  }\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\n\n\n  append(holderElement) {\n    this.holderElement = holderElement;\n    this.container.style.transformOrigin = '0 0'; // Slide appended to DOM\n\n    if (!this.data) {\n      return;\n    }\n\n    this.calculateSize();\n    this.load();\n    this.updateContentSize();\n    this.appendHeavy();\n    this.holderElement.appendChild(this.container);\n    this.zoomAndPanToInitial();\n    this.pswp.dispatch('firstZoomPan', {\n      slide: this\n    });\n    this.applyCurrentZoomPan();\n    this.pswp.dispatch('afterSetContent', {\n      slide: this\n    });\n\n    if (this.isActive) {\n      this.activate();\n    }\n  }\n\n  load() {\n    this.content.load(false);\n    this.pswp.dispatch('slideLoad', {\n      slide: this\n    });\n  }\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\n\n\n  appendHeavy() {\n    const {\n      pswp\n    } = this;\n    const appendHeavyNearby = true; // todo\n    // Avoid appending heavy elements during animations\n\n    if (this.heavyAppended || !pswp.opener.isOpen || pswp.mainScroll.isShifted() || !this.isActive && !appendHeavyNearby) {\n      return;\n    }\n\n    if (this.pswp.dispatch('appendHeavy', {\n      slide: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.heavyAppended = true;\n    this.content.append();\n    this.pswp.dispatch('appendHeavyContent', {\n      slide: this\n    });\n  }\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\n\n\n  activate() {\n    this.isActive = true;\n    this.appendHeavy();\n    this.content.activate();\n    this.pswp.dispatch('slideActivate', {\n      slide: this\n    });\n  }\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\n\n\n  deactivate() {\n    this.isActive = false;\n    this.content.deactivate();\n\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\n      // allow filtering\n      this.calculateSize();\n    } // reset zoom level\n\n\n    this.currentResolution = 0;\n    this.zoomAndPanToInitial();\n    this.applyCurrentZoomPan();\n    this.updateContentSize();\n    this.pswp.dispatch('slideDeactivate', {\n      slide: this\n    });\n  }\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\n\n\n  destroy() {\n    this.content.hasSlide = false;\n    this.content.remove();\n    this.container.remove();\n    this.pswp.dispatch('slideDestroy', {\n      slide: this\n    });\n  }\n\n  resize() {\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\n      // Keep initial zoom level if it was before the resize,\n      // as well as when this slide is not active\n      // Reset position and scale to original state\n      this.calculateSize();\n      this.currentResolution = 0;\n      this.zoomAndPanToInitial();\n      this.applyCurrentZoomPan();\n      this.updateContentSize();\n    } else {\n      // readjust pan position if it's beyond the bounds\n      this.calculateSize();\n      this.bounds.update(this.currZoomLevel);\n      this.panTo(this.pan.x, this.pan.y);\n    }\n  }\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\n\n\n  updateContentSize(force) {\n    // Use initial zoom level\n    // if resolution is not defined (user didn't zoom yet)\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\n\n    if (!scaleMultiplier) {\n      return;\n    }\n\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\n\n    if (!this.sizeChanged(width, height) && !force) {\n      return;\n    }\n\n    this.content.setDisplayedSize(width, height);\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  sizeChanged(width, height) {\n    if (width !== this.prevDisplayedWidth || height !== this.prevDisplayedHeight) {\n      this.prevDisplayedWidth = width;\n      this.prevDisplayedHeight = height;\n      return true;\n    }\n\n    return false;\n  }\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\n\n\n  getPlaceholderElement() {\n    var _this$content$placeho;\n\n    return (_this$content$placeho = this.content.placeholder) === null || _this$content$placeho === void 0 ? void 0 : _this$content$placeho.element;\n  }\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\n\n\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\n    const {\n      pswp\n    } = this;\n\n    if (!this.isZoomable() || pswp.mainScroll.isShifted()) {\n      return;\n    }\n\n    pswp.dispatch('beforeZoomTo', {\n      destZoomLevel,\n      centerPoint,\n      transitionDuration\n    }); // stop all pan and zoom transitions\n\n    pswp.animations.stopAllPan(); // if (!centerPoint) {\n    //   centerPoint = pswp.getViewportCenterPoint();\n    // }\n\n    const prevZoomLevel = this.currZoomLevel;\n\n    if (!ignoreBounds) {\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\n    } // if (transitionDuration === undefined) {\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\n    // }\n\n\n    this.setZoomLevel(destZoomLevel);\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\n    roundPoint(this.pan);\n\n    const finishTransition = () => {\n      this._setResolution(destZoomLevel);\n\n      this.applyCurrentZoomPan();\n    };\n\n    if (!transitionDuration) {\n      finishTransition();\n    } else {\n      pswp.animations.startTransition({\n        isPan: true,\n        name: 'zoomTo',\n        target: this.container,\n        transform: this.getCurrentTransform(),\n        onComplete: finishTransition,\n        duration: transitionDuration,\n        easing: pswp.options.easing\n      });\n    }\n  }\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\n\n\n  toggleZoom(centerPoint) {\n    this.zoomTo(this.currZoomLevel === this.zoomLevels.initial ? this.zoomLevels.secondary : this.zoomLevels.initial, centerPoint, this.pswp.options.zoomAnimationDuration);\n  }\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\n\n\n  setZoomLevel(currZoomLevel) {\n    this.currZoomLevel = currZoomLevel;\n    this.bounds.update(this.currZoomLevel);\n  }\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\n\n\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\n\n    if (totalPanDistance === 0) {\n      return this.bounds.center[axis];\n    }\n\n    if (!point) {\n      point = this.pswp.getViewportCenterPoint();\n    }\n\n    if (!prevZoomLevel) {\n      prevZoomLevel = this.zoomLevels.initial;\n    }\n\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\n    return this.bounds.correctPan(axis, (this.pan[axis] - point[axis]) * zoomFactor + point[axis]);\n  }\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\n\n\n  panTo(panX, panY) {\n    this.pan.x = this.bounds.correctPan('x', panX);\n    this.pan.y = this.bounds.correctPan('y', panY);\n    this.applyCurrentZoomPan();\n  }\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\n\n\n  isPannable() {\n    return Boolean(this.width) && this.currZoomLevel > this.zoomLevels.fit;\n  }\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\n\n\n  isZoomable() {\n    return Boolean(this.width) && this.content.isZoomable();\n  }\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\n\n\n  applyCurrentZoomPan() {\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\n\n    if (this === this.pswp.currSlide) {\n      this.pswp.dispatch('zoomPanUpdate', {\n        slide: this\n      });\n    }\n  }\n\n  zoomAndPanToInitial() {\n    this.currZoomLevel = this.zoomLevels.initial; // pan according to the zoom level\n\n    this.bounds.update(this.currZoomLevel);\n    equalizePoints(this.pan, this.bounds.center);\n    this.pswp.dispatch('initialZoomPan', {\n      slide: this\n    });\n  }\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\n\n\n  _applyZoomTransform(x, y, zoom) {\n    zoom /= this.currentResolution || this.zoomLevels.initial;\n    setTransform(this.container, x, y, zoom);\n  }\n\n  calculateSize() {\n    const {\n      pswp\n    } = this;\n    equalizePoints(this.panAreaSize, getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index));\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\n    pswp.dispatch('calcSlideSize', {\n      slide: this\n    });\n  }\n  /** @returns {string} */\n\n\n  getCurrentTransform() {\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\n    return toTransformString(this.pan.x, this.pan.y, scale);\n  }\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\n\n\n  _setResolution(newResolution) {\n    if (newResolution === this.currentResolution) {\n      return;\n    }\n\n    this.currentResolution = newResolution;\n    this.updateContentSize();\n    this.pswp.dispatch('resolutionChanged');\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\nconst PAN_END_FRICTION = 0.35;\nconst VERTICAL_DRAG_FRICTION = 0.6; // 1 corresponds to the third of viewport height\n\nconst MIN_RATIO_TO_CLOSE = 0.4; // Minimum speed required to navigate\n// to next or previous slide\n\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\n\nfunction project(initialVelocity, decelerationRate) {\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\n}\n/**\r\n * Handles single pointer dragging\r\n */\n\n\nclass DragHandler {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n    this.pswp = gestures.pswp;\n    /** @type {Point} */\n\n    this.startPan = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  start() {\n    if (this.pswp.currSlide) {\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\n    }\n\n    this.pswp.animations.stopAll();\n  }\n\n  change() {\n    const {\n      p1,\n      prevP1,\n      dragAxis\n    } = this.gestures;\n    const {\n      currSlide\n    } = this.pswp;\n\n    if (dragAxis === 'y' && this.pswp.options.closeOnVerticalDrag && currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit && !this.gestures.isMultitouch) {\n      // Handle vertical drag to close\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\n\n      if (!this.pswp.dispatch('verticalDrag', {\n        panY\n      }).defaultPrevented) {\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\n\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\n        this.pswp.applyBgOpacity(bgOpacity);\n        currSlide.applyCurrentZoomPan();\n      }\n    } else {\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\n\n      if (!mainScrollChanged) {\n        this._panOrMoveMainScroll('y');\n\n        if (currSlide) {\n          roundPoint(currSlide.pan);\n          currSlide.applyCurrentZoomPan();\n        }\n      }\n    }\n  }\n\n  end() {\n    const {\n      velocity\n    } = this.gestures;\n    const {\n      mainScroll,\n      currSlide\n    } = this.pswp;\n    let indexDiff = 0;\n    this.pswp.animations.stopAll(); // Handle main scroll if it's shifted\n\n    if (mainScroll.isShifted()) {\n      // Position of the main scroll relative to the viewport\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX(); // Ratio between 0 and 1:\n      // 0 - slide is not visible at all,\n      // 0.5 - half of the slide is visible\n      // 1 - slide is fully visible\n\n      const currentSlideVisibilityRatio = mainScrollShiftDiff / this.pswp.viewportSize.x; // Go next slide.\n      //\n      // - if velocity and its direction is matched,\n      //   and we see at least tiny part of the next slide\n      //\n      // - or if we see less than 50% of the current slide\n      //   and velocity is close to 0\n      //\n\n      if (velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0 || velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5) {\n        // Go to next slide\n        indexDiff = 1;\n        velocity.x = Math.min(velocity.x, 0);\n      } else if (velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0 || velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5) {\n        // Go to prev slide\n        indexDiff = -1;\n        velocity.x = Math.max(velocity.x, 0);\n      }\n\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\n    } // Restore zoom level\n\n\n    if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max || this.gestures.isMultitouch) {\n      this.gestures.zoomLevels.correctZoomPan(true);\n    } else {\n      // we run two animations instead of one,\n      // as each axis has own pan boundaries and thus different spring function\n      // (correctZoomPan does not have this functionality,\n      //  it animates all properties with single timing function)\n      this._finishPanGestureForAxis('x');\n\n      this._finishPanGestureForAxis('y');\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\n\n\n  _finishPanGestureForAxis(axis) {\n    const {\n      velocity\n    } = this.gestures;\n    const {\n      currSlide\n    } = this.pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const {\n      pan,\n      bounds\n    } = currSlide;\n    const panPos = pan[axis];\n    const restoreBgOpacity = this.pswp.bgOpacity < 1 && axis === 'y'; // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\n    // Increasing this number will reduce travel distance\n\n    const decelerationRate = 0.995; // 0.99\n    // Pan position if there is no bounds\n\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\n\n    if (restoreBgOpacity) {\n      const vDragRatio = this._getVerticalDragRatio(panPos);\n\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition); // If we are above and moving upwards,\n      // or if we are below and moving downwards\n\n\n      if (vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE || vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE) {\n        this.pswp.close();\n        return;\n      }\n    } // Pan position with corrected bounds\n\n\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition); // Exit if pan position should not be changed\n    // or if speed it too low\n\n    if (panPos === correctedPanPosition) {\n      return;\n    } // Overshoot if the final position is out of pan bounds\n\n\n    const dampingRatio = correctedPanPosition === projectedPosition ? 1 : 0.82;\n    const initialBgOpacity = this.pswp.bgOpacity;\n    const totalPanDist = correctedPanPosition - panPos;\n    this.pswp.animations.startSpring({\n      name: 'panGesture' + axis,\n      isPan: true,\n      start: panPos,\n      end: correctedPanPosition,\n      velocity: velocity[axis],\n      dampingRatio,\n      onUpdate: pos => {\n        // Animate opacity of background relative to Y pan position of an image\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\n          // 0 - start of animation, 1 - end of animation\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist; // We clamp opacity to keep it between 0 and 1.\n          // As progress ratio can be larger than 1 due to overshoot,\n          // and we do not want to bounce opacity.\n\n          this.pswp.applyBgOpacity(clamp(initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio, 0, 1));\n        }\n\n        pan[axis] = Math.floor(pos);\n        currSlide.applyCurrentZoomPan();\n      }\n    });\n  }\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\n\n\n  _panOrMoveMainScroll(axis) {\n    const {\n      p1,\n      dragAxis,\n      prevP1,\n      isMultitouch\n    } = this.gestures;\n    const {\n      currSlide,\n      mainScroll\n    } = this.pswp;\n    const delta = p1[axis] - prevP1[axis];\n    const newMainScrollX = mainScroll.x + delta;\n\n    if (!delta || !currSlide) {\n      return false;\n    } // Always move main scroll if image can not be panned\n\n\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\n      mainScroll.moveTo(newMainScrollX, true);\n      return true; // changed main scroll\n    }\n\n    const {\n      bounds\n    } = currSlide;\n    const newPan = currSlide.pan[axis] + delta;\n\n    if (this.pswp.options.allowPanToNext && dragAxis === 'x' && axis === 'x' && !isMultitouch) {\n      const currSlideMainScrollX = mainScroll.getCurrSlideX(); // Position of the main scroll relative to the viewport\n\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\n      const isLeftToRight = delta > 0;\n      const isRightToLeft = !isLeftToRight;\n\n      if (newPan > bounds.min[axis] && isLeftToRight) {\n        // Panning from left to right, beyond the left edge\n        // Wether the image was at minimum pan position (or less)\n        // when this drag gesture started.\n        // Minimum pan position refers to the left edge of the image.\n        const wasAtMinPanPosition = bounds.min[axis] <= this.startPan[axis];\n\n        if (wasAtMinPanPosition) {\n          mainScroll.moveTo(newMainScrollX, true);\n          return true;\n        } else {\n          this._setPanWithFriction(axis, newPan); //currSlide.pan[axis] = newPan;\n\n        }\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\n        // Paning from right to left, beyond the right edge\n        // Maximum pan position refers to the right edge of the image.\n        const wasAtMaxPanPosition = this.startPan[axis] <= bounds.max[axis];\n\n        if (wasAtMaxPanPosition) {\n          mainScroll.moveTo(newMainScrollX, true);\n          return true;\n        } else {\n          this._setPanWithFriction(axis, newPan); //currSlide.pan[axis] = newPan;\n\n        }\n      } else {\n        // If main scroll is shifted\n        if (mainScrollShiftDiff !== 0) {\n          // If main scroll is shifted right\n          if (mainScrollShiftDiff > 0\n          /*&& isRightToLeft*/\n          ) {\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\n            return true;\n          } else if (mainScrollShiftDiff < 0\n          /*&& isLeftToRight*/\n          ) {\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\n            return true;\n          }\n        } else {\n          // We are within pan bounds, so just pan\n          this._setPanWithFriction(axis, newPan);\n        }\n      }\n    } else {\n      if (axis === 'y') {\n        // Do not pan vertically if main scroll is shifted o\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\n          this._setPanWithFriction(axis, newPan);\n        }\n      } else {\n        this._setPanWithFriction(axis, newPan);\n      }\n    }\n\n    return false;\n  } // If we move above - the ratio is negative\n  // If we move below the ratio is positive\n\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\n\n\n  _getVerticalDragRatio(panY) {\n    var _this$pswp$currSlide$, _this$pswp$currSlide;\n\n    return (panY - ((_this$pswp$currSlide$ = (_this$pswp$currSlide = this.pswp.currSlide) === null || _this$pswp$currSlide === void 0 ? void 0 : _this$pswp$currSlide.bounds.center.y) !== null && _this$pswp$currSlide$ !== void 0 ? _this$pswp$currSlide$ : 0)) / (this.pswp.viewportSize.y / 3);\n  }\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\n\n\n  _setPanWithFriction(axis, potentialPan, customFriction) {\n    const {\n      currSlide\n    } = this.pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const {\n      pan,\n      bounds\n    } = currSlide;\n    const correctedPan = bounds.correctPan(axis, potentialPan); // If we are out of pan bounds\n\n    if (correctedPan !== potentialPan || customFriction) {\n      const delta = Math.round(potentialPan - pan[axis]);\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\n    } else {\n      pan[axis] = potentialPan;\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\nconst UPPER_ZOOM_FRICTION = 0.05;\nconst LOWER_ZOOM_FRICTION = 0.15;\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\n\nfunction getZoomPointsCenter(p, p1, p2) {\n  p.x = (p1.x + p2.x) / 2;\n  p.y = (p1.y + p2.y) / 2;\n  return p;\n}\n\nclass ZoomHandler {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\n\n    this._startPan = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\n\n    this._startZoomPoint = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\n\n    this._zoomPoint = {\n      x: 0,\n      y: 0\n    };\n    /** @private */\n\n    this._wasOverFitZoomLevel = false;\n    /** @private */\n\n    this._startZoomLevel = 1;\n  }\n\n  start() {\n    const {\n      currSlide\n    } = this.gestures.pswp;\n\n    if (currSlide) {\n      this._startZoomLevel = currSlide.currZoomLevel;\n      equalizePoints(this._startPan, currSlide.pan);\n    }\n\n    this.gestures.pswp.animations.stopAllPan();\n    this._wasOverFitZoomLevel = false;\n  }\n\n  change() {\n    const {\n      p1,\n      startP1,\n      p2,\n      startP2,\n      pswp\n    } = this.gestures;\n    const {\n      currSlide\n    } = pswp;\n\n    if (!currSlide) {\n      return;\n    }\n\n    const minZoomLevel = currSlide.zoomLevels.min;\n    const maxZoomLevel = currSlide.zoomLevels.max;\n\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\n      return;\n    }\n\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\n\n    let currZoomLevel = 1 / getDistanceBetween(startP1, startP2) * getDistanceBetween(p1, p2) * this._startZoomLevel; // slightly over the zoom.fit\n\n\n    if (currZoomLevel > currSlide.zoomLevels.initial + currSlide.zoomLevels.initial / 15) {\n      this._wasOverFitZoomLevel = true;\n    }\n\n    if (currZoomLevel < minZoomLevel) {\n      if (pswp.options.pinchToClose && !this._wasOverFitZoomLevel && this._startZoomLevel <= currSlide.zoomLevels.initial) {\n        // fade out background if zooming out\n        const bgOpacity = 1 - (minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2);\n\n        if (!pswp.dispatch('pinchClose', {\n          bgOpacity\n        }).defaultPrevented) {\n          pswp.applyBgOpacity(bgOpacity);\n        }\n      } else {\n        // Apply the friction if zoom level is below the min\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\n      }\n    } else if (currZoomLevel > maxZoomLevel) {\n      // Apply the friction if zoom level is above the max\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\n    }\n\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\n    currSlide.setZoomLevel(currZoomLevel);\n    currSlide.applyCurrentZoomPan();\n  }\n\n  end() {\n    const {\n      pswp\n    } = this.gestures;\n    const {\n      currSlide\n    } = pswp;\n\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial) && !this._wasOverFitZoomLevel && pswp.options.pinchToClose) {\n      pswp.close();\n    } else {\n      this.correctZoomPan();\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\n\n\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\n    return this._zoomPoint[axis] - (this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor;\n  }\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\n\n\n  correctZoomPan(ignoreGesture) {\n    const {\n      pswp\n    } = this.gestures;\n    const {\n      currSlide\n    } = pswp;\n\n    if (!(currSlide !== null && currSlide !== void 0 && currSlide.isZoomable())) {\n      return;\n    }\n\n    if (this._zoomPoint.x === 0) {\n      ignoreGesture = true;\n    }\n\n    const prevZoomLevel = currSlide.currZoomLevel;\n    /** @type {number} */\n\n    let destinationZoomLevel;\n    let currZoomLevelNeedsChange = true;\n\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\n      destinationZoomLevel = currSlide.zoomLevels.initial; // zoom to min\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\n      destinationZoomLevel = currSlide.zoomLevels.max; // zoom to max\n    } else {\n      currZoomLevelNeedsChange = false;\n      destinationZoomLevel = prevZoomLevel;\n    }\n\n    const initialBgOpacity = pswp.bgOpacity;\n    const restoreBgOpacity = pswp.bgOpacity < 1;\n    const initialPan = equalizePoints({\n      x: 0,\n      y: 0\n    }, currSlide.pan);\n    let destinationPan = equalizePoints({\n      x: 0,\n      y: 0\n    }, initialPan);\n\n    if (ignoreGesture) {\n      this._zoomPoint.x = 0;\n      this._zoomPoint.y = 0;\n      this._startZoomPoint.x = 0;\n      this._startZoomPoint.y = 0;\n      this._startZoomLevel = prevZoomLevel;\n      equalizePoints(this._startPan, initialPan);\n    }\n\n    if (currZoomLevelNeedsChange) {\n      destinationPan = {\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\n      };\n    } // set zoom level, so pan bounds are updated according to it\n\n\n    currSlide.setZoomLevel(destinationZoomLevel);\n    destinationPan = {\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\n    }; // return zoom level and its bounds to initial\n\n    currSlide.setZoomLevel(prevZoomLevel);\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\n\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\n      // update resolution after gesture\n      currSlide._setResolution(destinationZoomLevel);\n\n      currSlide.applyCurrentZoomPan(); // nothing to animate\n\n      return;\n    }\n\n    pswp.animations.stopAllPan();\n    pswp.animations.startSpring({\n      isPan: true,\n      start: 0,\n      end: 1000,\n      velocity: 0,\n      dampingRatio: 1,\n      naturalFrequency: 40,\n      onUpdate: now => {\n        now /= 1000; // 0 - start, 1 - end\n\n        if (panNeedsChange || currZoomLevelNeedsChange) {\n          if (panNeedsChange) {\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\n          }\n\n          if (currZoomLevelNeedsChange) {\n            const newZoomLevel = prevZoomLevel + (destinationZoomLevel - prevZoomLevel) * now;\n            currSlide.setZoomLevel(newZoomLevel);\n          }\n\n          currSlide.applyCurrentZoomPan();\n        } // Restore background opacity\n\n\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\n          // We clamp opacity to keep it between 0 and 1.\n          // As progress ratio can be larger than 1 due to overshoot,\n          // and we do not want to bounce opacity.\n          pswp.applyBgOpacity(clamp(initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1));\n        }\n      },\n      onComplete: () => {\n        // update resolution after transition ends\n        currSlide._setResolution(destinationZoomLevel);\n\n        currSlide.applyCurrentZoomPan();\n      }\n    });\n  }\n\n}\n\n/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\n\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\nfunction didTapOnMainContent(event) {\n  return !!\n  /** @type {HTMLElement} */\n  event.target.closest('.pswp__container');\n}\n/**\r\n * Tap, double-tap handler.\r\n */\n\n\nclass TapHandler {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  constructor(gestures) {\n    this.gestures = gestures;\n  }\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\n\n\n  click(point, originalEvent) {\n    const targetClassList =\n    /** @type {HTMLElement} */\n    originalEvent.target.classList;\n    const isImageClick = targetClassList.contains('pswp__img');\n    const isBackgroundClick = targetClassList.contains('pswp__item') || targetClassList.contains('pswp__zoom-wrap');\n\n    if (isImageClick) {\n      this._doClickOrTapAction('imageClick', point, originalEvent);\n    } else if (isBackgroundClick) {\n      this._doClickOrTapAction('bgClick', point, originalEvent);\n    }\n  }\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\n\n\n  tap(point, originalEvent) {\n    if (didTapOnMainContent(originalEvent)) {\n      this._doClickOrTapAction('tap', point, originalEvent);\n    }\n  }\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\n\n\n  doubleTap(point, originalEvent) {\n    if (didTapOnMainContent(originalEvent)) {\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\n\n\n  _doClickOrTapAction(actionName, point, originalEvent) {\n    var _this$gestures$pswp$e;\n\n    const {\n      pswp\n    } = this.gestures;\n    const {\n      currSlide\n    } = pswp;\n    const actionFullName =\n    /** @type {AddPostfix<Actions, 'Action'>} */\n    actionName + 'Action';\n    const optionValue = pswp.options[actionFullName];\n\n    if (pswp.dispatch(actionFullName, {\n      point,\n      originalEvent\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      optionValue.call(pswp, point, originalEvent);\n      return;\n    }\n\n    switch (optionValue) {\n      case 'close':\n      case 'next':\n        pswp[optionValue]();\n        break;\n\n      case 'zoom':\n        currSlide === null || currSlide === void 0 || currSlide.toggleZoom(point);\n        break;\n\n      case 'zoom-or-close':\n        // by default click zooms current image,\n        // if it can not be zoomed - gallery will be closed\n        if (currSlide !== null && currSlide !== void 0 && currSlide.isZoomable() && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\n          currSlide.toggleZoom(point);\n        } else if (pswp.options.clickToCloseNonZoomable) {\n          pswp.close();\n        }\n\n        break;\n\n      case 'toggle-controls':\n        (_this$gestures$pswp$e = this.gestures.pswp.element) === null || _this$gestures$pswp$e === void 0 || _this$gestures$pswp$e.classList.toggle('pswp--ui-visible'); // if (_controlsVisible) {\n        //   _ui.hideControls();\n        // } else {\n        //   _ui.showControls();\n        // }\n\n        break;\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n// How far should user should drag\n// until we can determine that the gesture is swipe and its direction\n\nconst AXIS_SWIPE_HYSTERISIS = 10; //const PAN_END_FRICTION = 0.35;\n\nconst DOUBLE_TAP_DELAY = 300; // ms\n\nconst MIN_TAP_DISTANCE = 25; // px\n\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\n\nclass Gestures {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    /** @type {'x' | 'y' | null} */\n\n    this.dragAxis = null; // point objects are defined once and reused\n    // PhotoSwipe keeps track only of two pointers, others are ignored\n\n    /** @type {Point} */\n\n    this.p1 = {\n      x: 0,\n      y: 0\n    }; // the first pressed pointer\n\n    /** @type {Point} */\n\n    this.p2 = {\n      x: 0,\n      y: 0\n    }; // the second pressed pointer\n\n    /** @type {Point} */\n\n    this.prevP1 = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point} */\n\n    this.prevP2 = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point} */\n\n    this.startP1 = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point} */\n\n    this.startP2 = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point} */\n\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point}\r\n     * @private\r\n     */\n\n    this._lastStartP1 = {\n      x: 0,\n      y: 0\n    };\n    /** @type {Point}\r\n     * @private\r\n     */\n\n    this._intervalP1 = {\n      x: 0,\n      y: 0\n    };\n    /** @private */\n\n    this._numActivePoints = 0;\n    /** @type {Point[]}\r\n     * @private\r\n     */\n\n    this._ongoingPointers = [];\n    /** @private */\n\n    this._touchEventEnabled = 'ontouchstart' in window;\n    /** @private */\n\n    this._pointerEventEnabled = !!window.PointerEvent;\n    this.supportsTouch = this._touchEventEnabled || this._pointerEventEnabled && navigator.maxTouchPoints > 1;\n    /** @private */\n\n    this._numActivePoints = 0;\n    /** @private */\n\n    this._intervalTime = 0;\n    /** @private */\n\n    this._velocityCalculated = false;\n    this.isMultitouch = false;\n    this.isDragging = false;\n    this.isZooming = false;\n    /** @type {number | null} */\n\n    this.raf = null;\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\n\n    this._tapTimer = null;\n\n    if (!this.supportsTouch) {\n      // disable pan to next slide for non-touch devices\n      pswp.options.allowPanToNext = false;\n    }\n\n    this.drag = new DragHandler(this);\n    this.zoomLevels = new ZoomHandler(this);\n    this.tapHandler = new TapHandler(this);\n    pswp.on('bindEvents', () => {\n      pswp.events.add(pswp.scrollWrap, 'click',\n      /** @type EventListener */\n      this._onClick.bind(this));\n\n      if (this._pointerEventEnabled) {\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\n      } else if (this._touchEventEnabled) {\n        this._bindEvents('touch', 'start', 'end', 'cancel'); // In previous versions we also bound mouse event here,\n        // in case device supports both touch and mouse events,\n        // but newer versions of browsers now support PointerEvent.\n        // on iOS10 if you bind touchmove/end after touchstart,\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\n        // preventDefault will have no effect on touchmove and touchend.\n        // Unless you bind it previously.\n\n\n        if (pswp.scrollWrap) {\n          pswp.scrollWrap.ontouchmove = () => {};\n\n          pswp.scrollWrap.ontouchend = () => {};\n        }\n      } else {\n        this._bindEvents('mouse', 'down', 'up');\n      }\n    });\n  }\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\n\n\n  _bindEvents(pref, down, up, cancel) {\n    const {\n      pswp\n    } = this;\n    const {\n      events\n    } = pswp;\n    const cancelEvent = cancel ? pref + cancel : '';\n    events.add(pswp.scrollWrap, pref + down,\n    /** @type EventListener */\n    this.onPointerDown.bind(this));\n    events.add(window, pref + 'move',\n    /** @type EventListener */\n    this.onPointerMove.bind(this));\n    events.add(window, pref + up,\n    /** @type EventListener */\n    this.onPointerUp.bind(this));\n\n    if (cancelEvent) {\n      events.add(pswp.scrollWrap, cancelEvent,\n      /** @type EventListener */\n      this.onPointerUp.bind(this));\n    }\n  }\n  /**\r\n   * @param {PointerEvent} e\r\n   */\n\n\n  onPointerDown(e) {\n    // We do not call preventDefault for touch events\n    // to allow browser to show native dialog on longpress\n    // (the one that allows to save image or open it in new tab).\n    //\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse'; // Allow dragging only via left mouse button.\n    // http://www.quirksmode.org/js/events_properties.html\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\n\n    if (isMousePointer && e.button > 0) {\n      return;\n    }\n\n    const {\n      pswp\n    } = this; // if PhotoSwipe is opening or closing\n\n    if (!pswp.opener.isOpen) {\n      e.preventDefault();\n      return;\n    }\n\n    if (pswp.dispatch('pointerDown', {\n      originalEvent: e\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (isMousePointer) {\n      pswp.mouseDetected(); // preventDefault mouse event to prevent\n      // browser image drag feature\n\n      this._preventPointerEventBehaviour(e, 'down');\n    }\n\n    pswp.animations.stopAll();\n\n    this._updatePoints(e, 'down');\n\n    if (this._numActivePoints === 1) {\n      this.dragAxis = null; // we need to store initial point to determine the main axis,\n      // drag is activated only after the axis is determined\n\n      equalizePoints(this.startP1, this.p1);\n    }\n\n    if (this._numActivePoints > 1) {\n      // Tap or double tap should not trigger if more than one pointer\n      this._clearTapTimer();\n\n      this.isMultitouch = true;\n    } else {\n      this.isMultitouch = false;\n    }\n  }\n  /**\r\n   * @param {PointerEvent} e\r\n   */\n\n\n  onPointerMove(e) {\n    this._preventPointerEventBehaviour(e, 'move');\n\n    if (!this._numActivePoints) {\n      return;\n    }\n\n    this._updatePoints(e, 'move');\n\n    if (this.pswp.dispatch('pointerMove', {\n      originalEvent: e\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this._numActivePoints === 1 && !this.isDragging) {\n      if (!this.dragAxis) {\n        this._calculateDragDirection();\n      } // Drag axis was detected, emit drag.start\n\n\n      if (this.dragAxis && !this.isDragging) {\n        if (this.isZooming) {\n          this.isZooming = false;\n          this.zoomLevels.end();\n        }\n\n        this.isDragging = true;\n\n        this._clearTapTimer(); // Tap can not trigger after drag\n        // Adjust starting point\n\n\n        this._updateStartPoints();\n\n        this._intervalTime = Date.now(); //this._startTime = this._intervalTime;\n\n        this._velocityCalculated = false;\n        equalizePoints(this._intervalP1, this.p1);\n        this.velocity.x = 0;\n        this.velocity.y = 0;\n        this.drag.start();\n\n        this._rafStopLoop();\n\n        this._rafRenderLoop();\n      }\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\n      this._finishDrag();\n\n      this.isZooming = true; // Adjust starting points\n\n      this._updateStartPoints();\n\n      this.zoomLevels.start();\n\n      this._rafStopLoop();\n\n      this._rafRenderLoop();\n    }\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _finishDrag() {\n    if (this.isDragging) {\n      this.isDragging = false; // Try to calculate velocity,\n      // if it wasn't calculated yet in drag.change\n\n      if (!this._velocityCalculated) {\n        this._updateVelocity(true);\n      }\n\n      this.drag.end();\n      this.dragAxis = null;\n    }\n  }\n  /**\r\n   * @param {PointerEvent} e\r\n   */\n\n\n  onPointerUp(e) {\n    if (!this._numActivePoints) {\n      return;\n    }\n\n    this._updatePoints(e, 'up');\n\n    if (this.pswp.dispatch('pointerUp', {\n      originalEvent: e\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this._numActivePoints === 0) {\n      this._rafStopLoop();\n\n      if (this.isDragging) {\n        this._finishDrag();\n      } else if (!this.isZooming && !this.isMultitouch) {\n        //this.zoomLevels.correctZoomPan();\n        this._finishTap(e);\n      }\n    }\n\n    if (this._numActivePoints < 2 && this.isZooming) {\n      this.isZooming = false;\n      this.zoomLevels.end();\n\n      if (this._numActivePoints === 1) {\n        // Since we have 1 point left, we need to reinitiate drag\n        this.dragAxis = null;\n\n        this._updateStartPoints();\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _rafRenderLoop() {\n    if (this.isDragging || this.isZooming) {\n      this._updateVelocity();\n\n      if (this.isDragging) {\n        // make sure that pointer moved since the last update\n        if (!pointsEqual(this.p1, this.prevP1)) {\n          this.drag.change();\n        }\n      } else\n        /* if (this.isZooming) */\n        {\n          if (!pointsEqual(this.p1, this.prevP1) || !pointsEqual(this.p2, this.prevP2)) {\n            this.zoomLevels.change();\n          }\n        }\n\n      this._updatePrevPoints();\n\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\n    }\n  }\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\n\n\n  _updateVelocity(force) {\n    const time = Date.now();\n    const duration = time - this._intervalTime;\n\n    if (duration < 50 && !force) {\n      return;\n    }\n\n    this.velocity.x = this._getVelocity('x', duration);\n    this.velocity.y = this._getVelocity('y', duration);\n    this._intervalTime = time;\n    equalizePoints(this._intervalP1, this.p1);\n    this._velocityCalculated = true;\n  }\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\n\n\n  _finishTap(e) {\n    const {\n      mainScroll\n    } = this.pswp; // Do not trigger tap events if main scroll is shifted\n\n    if (mainScroll.isShifted()) {\n      // restore main scroll position\n      // (usually happens if stopped in the middle of animation)\n      mainScroll.moveIndexBy(0, true);\n      return;\n    } // Do not trigger tap for touchcancel or pointercancel\n\n\n    if (e.type.indexOf('cancel') > 0) {\n      return;\n    } // Trigger click instead of tap for mouse events\n\n\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\n      this.tapHandler.click(this.startP1, e);\n      return;\n    } // Disable delay if there is no doubleTapAction\n\n\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0; // If tapTimer is defined - we tapped recently,\n    // check if the current tap is close to the previous one,\n    // if yes - trigger double tap\n\n    if (this._tapTimer) {\n      this._clearTapTimer(); // Check if two taps were more or less on the same place\n\n\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\n        this.tapHandler.doubleTap(this.startP1, e);\n      }\n    } else {\n      equalizePoints(this._lastStartP1, this.startP1);\n      this._tapTimer = setTimeout(() => {\n        this.tapHandler.tap(this.startP1, e);\n\n        this._clearTapTimer();\n      }, tapDelay);\n    }\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _clearTapTimer() {\n    if (this._tapTimer) {\n      clearTimeout(this._tapTimer);\n      this._tapTimer = null;\n    }\n  }\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\n\n\n  _getVelocity(axis, duration) {\n    // displacement is like distance, but can be negative.\n    const displacement = this.p1[axis] - this._intervalP1[axis];\n\n    if (Math.abs(displacement) > 1 && duration > 5) {\n      return displacement / duration;\n    }\n\n    return 0;\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _rafStopLoop() {\n    if (this.raf) {\n      cancelAnimationFrame(this.raf);\n      this.raf = null;\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\n\n\n  _preventPointerEventBehaviour(e, pointerType) {\n    const preventPointerEvent = this.pswp.applyFilters('preventPointerEvent', true, e, pointerType);\n\n    if (preventPointerEvent) {\n      e.preventDefault();\n    }\n  }\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\n\n\n  _updatePoints(e, pointerType) {\n    if (this._pointerEventEnabled) {\n      const pointerEvent =\n      /** @type {PointerEvent} */\n      e; // Try to find the current pointer in ongoing pointers by its ID\n\n      const pointerIndex = this._ongoingPointers.findIndex(ongoingPointer => {\n        return ongoingPointer.id === pointerEvent.pointerId;\n      });\n\n      if (pointerType === 'up' && pointerIndex > -1) {\n        // release the pointer - remove it from ongoing\n        this._ongoingPointers.splice(pointerIndex, 1);\n      } else if (pointerType === 'down' && pointerIndex === -1) {\n        // add new pointer\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, {\n          x: 0,\n          y: 0\n        }));\n      } else if (pointerIndex > -1) {\n        // update existing pointer\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\n      }\n\n      this._numActivePoints = this._ongoingPointers.length; // update points that PhotoSwipe uses\n      // to calculate position and scale\n\n      if (this._numActivePoints > 0) {\n        equalizePoints(this.p1, this._ongoingPointers[0]);\n      }\n\n      if (this._numActivePoints > 1) {\n        equalizePoints(this.p2, this._ongoingPointers[1]);\n      }\n    } else {\n      const touchEvent =\n      /** @type {TouchEvent} */\n      e;\n      this._numActivePoints = 0;\n\n      if (touchEvent.type.indexOf('touch') > -1) {\n        // Touch Event\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\n\n          this._numActivePoints++;\n\n          if (touchEvent.touches.length > 1) {\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\n\n            this._numActivePoints++;\n          }\n        }\n      } else {\n        // Mouse Event\n        this._convertEventPosToPoint(\n        /** @type {PointerEvent} */\n        e, this.p1);\n\n        if (pointerType === 'up') {\n          // clear all points on mouseup\n          this._numActivePoints = 0;\n        } else {\n          this._numActivePoints++;\n        }\n      }\n    }\n  }\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\n\n\n  _updatePrevPoints() {\n    equalizePoints(this.prevP1, this.p1);\n    equalizePoints(this.prevP2, this.p2);\n  }\n  /** update points at the start of gesture\r\n   * @private\r\n   */\n\n\n  _updateStartPoints() {\n    equalizePoints(this.startP1, this.p1);\n    equalizePoints(this.startP2, this.p2);\n\n    this._updatePrevPoints();\n  }\n  /** @private */\n\n\n  _calculateDragDirection() {\n    if (this.pswp.mainScroll.isShifted()) {\n      // if main scroll position is shifted – direction is always horizontal\n      this.dragAxis = 'x';\n    } else {\n      // calculate delta of the last touchmove tick\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\n\n      if (diff !== 0) {\n        // check if pointer was shifted horizontally or vertically\n        const axisToCheck = diff > 0 ? 'x' : 'y';\n\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\n          this.dragAxis = axisToCheck;\n        }\n      }\n    }\n  }\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\n\n\n  _convertEventPosToPoint(e, p) {\n    p.x = e.pageX - this.pswp.offset.x;\n    p.y = e.pageY - this.pswp.offset.y;\n\n    if ('pointerId' in e) {\n      p.id = e.pointerId;\n    } else if (e.identifier !== undefined) {\n      p.id = e.identifier;\n    }\n\n    return p;\n  }\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\n\n\n  _onClick(e) {\n    // Do not allow click event to pass through after drag\n    if (this.pswp.mainScroll.isShifted()) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n}\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./slide/slide.js').default} Slide */\n\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\n\nconst MAIN_SCROLL_END_FRICTION = 0.35; // const MIN_SWIPE_TRANSITION_DURATION = 250;\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\n\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\n\nclass MainScroll {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.x = 0;\n    this.slideWidth = 0;\n    /** @private */\n\n    this._currPositionIndex = 0;\n    /** @private */\n\n    this._prevPositionIndex = 0;\n    /** @private */\n\n    this._containerShiftIndex = -1;\n    /** @type {ItemHolder[]} */\n\n    this.itemHolders = [];\n  }\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\n\n\n  resize(resizeSlides) {\n    const {\n      pswp\n    } = this;\n    const newSlideWidth = Math.round(pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing); // Mobile browsers might trigger a resize event during a gesture.\n    // (due to toolbar appearing or hiding).\n    // Avoid re-adjusting main scroll position if width wasn't changed\n\n    const slideWidthChanged = newSlideWidth !== this.slideWidth;\n\n    if (slideWidthChanged) {\n      this.slideWidth = newSlideWidth;\n      this.moveTo(this.getCurrSlideX());\n    }\n\n    this.itemHolders.forEach((itemHolder, index) => {\n      if (slideWidthChanged) {\n        setTransform(itemHolder.el, (index + this._containerShiftIndex) * this.slideWidth);\n      }\n\n      if (resizeSlides && itemHolder.slide) {\n        itemHolder.slide.resize();\n      }\n    });\n  }\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\n\n\n  resetPosition() {\n    // Position on the main scroller (offset)\n    // it is independent from slide index\n    this._currPositionIndex = 0;\n    this._prevPositionIndex = 0; // This will force recalculation of size on next resize()\n\n    this.slideWidth = 0; // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\n\n    this._containerShiftIndex = -1;\n  }\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\n\n\n  appendHolders() {\n    this.itemHolders = []; // append our three slide holders -\n    // previous, current, and next\n\n    for (let i = 0; i < 3; i++) {\n      const el = createElement('pswp__item', 'div', this.pswp.container);\n      el.setAttribute('role', 'group');\n      el.setAttribute('aria-roledescription', 'slide');\n      el.setAttribute('aria-hidden', 'true'); // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n\n      el.style.display = i === 1 ? 'block' : 'none';\n      this.itemHolders.push({\n        el //index: -1\n\n      });\n    }\n  }\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\n\n\n  canBeSwiped() {\n    return this.pswp.getNumItems() > 1;\n  }\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\n\n\n  moveIndexBy(diff, animate, velocityX) {\n    const {\n      pswp\n    } = this;\n    let newIndex = pswp.potentialIndex + diff;\n    const numSlides = pswp.getNumItems();\n\n    if (pswp.canLoop()) {\n      newIndex = pswp.getLoopedIndex(newIndex);\n      const distance = (diff + numSlides) % numSlides;\n\n      if (distance <= numSlides / 2) {\n        // go forward\n        diff = distance;\n      } else {\n        // go backwards\n        diff = distance - numSlides;\n      }\n    } else {\n      if (newIndex < 0) {\n        newIndex = 0;\n      } else if (newIndex >= numSlides) {\n        newIndex = numSlides - 1;\n      }\n\n      diff = newIndex - pswp.potentialIndex;\n    }\n\n    pswp.potentialIndex = newIndex;\n    this._currPositionIndex -= diff;\n    pswp.animations.stopMainScroll();\n    const destinationX = this.getCurrSlideX();\n\n    if (!animate) {\n      this.moveTo(destinationX);\n      this.updateCurrItem();\n    } else {\n      pswp.animations.startSpring({\n        isMainScroll: true,\n        start: this.x,\n        end: destinationX,\n        velocity: velocityX || 0,\n        naturalFrequency: 30,\n        dampingRatio: 1,\n        //0.7,\n        onUpdate: x => {\n          this.moveTo(x);\n        },\n        onComplete: () => {\n          this.updateCurrItem();\n          pswp.appendHeavy();\n        }\n      });\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\n\n      if (pswp.canLoop()) {\n        const currDistance = (currDiff + numSlides) % numSlides;\n\n        if (currDistance <= numSlides / 2) {\n          // go forward\n          currDiff = currDistance;\n        } else {\n          // go backwards\n          currDiff = currDistance - numSlides;\n        }\n      } // Force-append new slides during transition\n      // if difference between slides is more than 1\n\n\n      if (Math.abs(currDiff) > 1) {\n        this.updateCurrItem();\n      }\n    }\n\n    return Boolean(diff);\n  }\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\n\n\n  getCurrSlideX() {\n    return this.slideWidth * this._currPositionIndex;\n  }\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\n\n\n  isShifted() {\n    return this.x !== this.getCurrSlideX();\n  }\n  /**\r\n   * Update slides X positions and set their content\r\n   */\n\n\n  updateCurrItem() {\n    var _this$itemHolders$;\n\n    const {\n      pswp\n    } = this;\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\n\n    if (!positionDifference) {\n      return;\n    }\n\n    this._prevPositionIndex = this._currPositionIndex;\n    pswp.currIndex = pswp.potentialIndex;\n    let diffAbs = Math.abs(positionDifference);\n    /** @type {ItemHolder | undefined} */\n\n    let tempHolder;\n\n    if (diffAbs >= 3) {\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\n      diffAbs = 3; // If slides are changed by 3 screens or more - clean up previous slides\n\n      this.itemHolders.forEach(itemHolder => {\n        var _itemHolder$slide;\n\n        (_itemHolder$slide = itemHolder.slide) === null || _itemHolder$slide === void 0 || _itemHolder$slide.destroy();\n        itemHolder.slide = undefined;\n      });\n    }\n\n    for (let i = 0; i < diffAbs; i++) {\n      if (positionDifference > 0) {\n        tempHolder = this.itemHolders.shift();\n\n        if (tempHolder) {\n          this.itemHolders[2] = tempHolder; // move first to last\n\n          this._containerShiftIndex++;\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\n          pswp.setContent(tempHolder, pswp.currIndex - diffAbs + i + 2);\n        }\n      } else {\n        tempHolder = this.itemHolders.pop();\n\n        if (tempHolder) {\n          this.itemHolders.unshift(tempHolder); // move last to first\n\n          this._containerShiftIndex--;\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\n          pswp.setContent(tempHolder, pswp.currIndex + diffAbs - i - 2);\n        }\n      }\n    } // Reset transfrom every 50ish navigations in one direction.\n    //\n    // Otherwise transform will keep growing indefinitely,\n    // which might cause issues as browsers have a maximum transform limit.\n    // I wasn't able to reach it, but just to be safe.\n    // This should not cause noticable lag.\n\n\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\n      this.resetPosition();\n      this.resize();\n    } // Pan transition might be running (and consntantly updating pan position)\n\n\n    pswp.animations.stopAllPan();\n    this.itemHolders.forEach((itemHolder, i) => {\n      if (itemHolder.slide) {\n        // Slide in the 2nd holder is always active\n        itemHolder.slide.setIsActive(i === 1);\n      }\n    });\n    pswp.currSlide = (_this$itemHolders$ = this.itemHolders[1]) === null || _this$itemHolders$ === void 0 ? void 0 : _this$itemHolders$.slide;\n    pswp.contentLoader.updateLazy(positionDifference);\n\n    if (pswp.currSlide) {\n      pswp.currSlide.applyCurrentZoomPan();\n    }\n\n    pswp.dispatch('change');\n  }\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\n\n\n  moveTo(x, dragging) {\n    if (!this.pswp.canLoop() && dragging) {\n      // Apply friction\n      let newSlideIndexOffset = (this.slideWidth * this._currPositionIndex - x) / this.slideWidth;\n      newSlideIndexOffset += this.pswp.currIndex;\n      const delta = Math.round(x - this.x);\n\n      if (newSlideIndexOffset < 0 && delta > 0 || newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0) {\n        x = this.x + delta * MAIN_SCROLL_END_FRICTION;\n      }\n    }\n\n    this.x = x;\n\n    if (this.pswp.container) {\n      setTransform(this.pswp.container, x);\n    }\n\n    this.pswp.dispatch('moveMainScroll', {\n      x,\n      dragging: dragging !== null && dragging !== void 0 ? dragging : false\n    });\n  }\n\n}\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\n\nconst KeyboardKeyCodesMap = {\n  Escape: 27,\n  z: 90,\n  ArrowLeft: 37,\n  ArrowUp: 38,\n  ArrowRight: 39,\n  ArrowDown: 40,\n  Tab: 9\n};\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\n\nconst getKeyboardEventKey = (key, isKeySupported) => {\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\n};\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\n\n\nclass Keyboard {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    /** @private */\n\n    this._wasFocused = false;\n    pswp.on('bindEvents', () => {\n      if (pswp.options.trapFocus) {\n        // Dialog was likely opened by keyboard if initial point is not defined\n        if (!pswp.options.initialPointerPos) {\n          // focus causes layout,\n          // which causes lag during the animation,\n          // that's why we delay it until the opener transition ends\n          this._focusRoot();\n        }\n\n        pswp.events.add(document, 'focusin',\n        /** @type EventListener */\n        this._onFocusIn.bind(this));\n      }\n\n      pswp.events.add(document, 'keydown',\n      /** @type EventListener */\n      this._onKeyDown.bind(this));\n    });\n    const lastActiveElement =\n    /** @type {HTMLElement} */\n    document.activeElement;\n    pswp.on('destroy', () => {\n      if (pswp.options.returnFocus && lastActiveElement && this._wasFocused) {\n        lastActiveElement.focus();\n      }\n    });\n  }\n  /** @private */\n\n\n  _focusRoot() {\n    if (!this._wasFocused && this.pswp.element) {\n      this.pswp.element.focus();\n      this._wasFocused = true;\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\n\n\n  _onKeyDown(e) {\n    const {\n      pswp\n    } = this;\n\n    if (pswp.dispatch('keydown', {\n      originalEvent: e\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (specialKeyUsed(e)) {\n      // don't do anything if special key pressed\n      // to prevent from overriding default browser actions\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\n      return;\n    }\n    /** @type {Methods<PhotoSwipe> | undefined} */\n\n\n    let keydownAction;\n    /** @type {'x' | 'y' | undefined} */\n\n    let axis;\n    let isForward = false;\n    const isKeySupported = ('key' in e);\n\n    switch (isKeySupported ? e.key : e.keyCode) {\n      case getKeyboardEventKey('Escape', isKeySupported):\n        if (pswp.options.escKey) {\n          keydownAction = 'close';\n        }\n\n        break;\n\n      case getKeyboardEventKey('z', isKeySupported):\n        keydownAction = 'toggleZoom';\n        break;\n\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\n        axis = 'x';\n        break;\n\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\n        axis = 'y';\n        break;\n\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\n        axis = 'x';\n        isForward = true;\n        break;\n\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\n        isForward = true;\n        axis = 'y';\n        break;\n\n      case getKeyboardEventKey('Tab', isKeySupported):\n        this._focusRoot();\n\n        break;\n    } // if left/right/top/bottom key\n\n\n    if (axis) {\n      // prevent page scroll\n      e.preventDefault();\n      const {\n        currSlide\n      } = pswp;\n\n      if (pswp.options.arrowKeys && axis === 'x' && pswp.getNumItems() > 1) {\n        keydownAction = isForward ? 'next' : 'prev';\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\n        // up/down arrow keys pan the image vertically\n        // left/right arrow keys pan horizontally.\n        // Unless there is only one image,\n        // or arrowKeys option is disabled\n        currSlide.pan[axis] += isForward ? -80 : 80;\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\n      }\n    }\n\n    if (keydownAction) {\n      e.preventDefault(); // @ts-ignore\n\n      pswp[keydownAction]();\n    }\n  }\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\n\n\n  _onFocusIn(e) {\n    const {\n      template\n    } = this.pswp;\n\n    if (template && document !== e.target && template !== e.target && !template.contains(\n    /** @type {Node} */\n    e.target)) {\n      // focus root element\n      template.focus();\n    }\n  }\n\n}\n\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\n\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\n\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\n\n/**\r\n * Runs CSS transition.\r\n */\n\nclass CSSAnimation {\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\n  constructor(props) {\n    var _props$prop;\n\n    this.props = props;\n    const {\n      target,\n      onComplete,\n      transform,\n      onFinish = () => {},\n      duration = 333,\n      easing = DEFAULT_EASING\n    } = props;\n    this.onFinish = onFinish; // support only transform and opacity\n\n    const prop = transform ? 'transform' : 'opacity';\n    const propValue = (_props$prop = props[prop]) !== null && _props$prop !== void 0 ? _props$prop : '';\n    /** @private */\n\n    this._target = target;\n    /** @private */\n\n    this._onComplete = onComplete;\n    /** @private */\n\n    this._finished = false;\n    /** @private */\n\n    this._onTransitionEnd = this._onTransitionEnd.bind(this); // Using timeout hack to make sure that animation\n    // starts even if the animated property was changed recently,\n    // otherwise transitionend might not fire or transition won't start.\n    // https://drafts.csswg.org/css-transitions/#starting\n    //\n    // ¯\\_(ツ)_/¯\n\n    /** @private */\n\n    this._helperTimeout = setTimeout(() => {\n      setTransitionStyle(target, prop, duration, easing);\n      this._helperTimeout = setTimeout(() => {\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false); // Safari occasionally does not emit transitionend event\n        // if element property was modified during the transition,\n        // which may be caused by resize or third party component,\n        // using timeout as a safety fallback\n\n        this._helperTimeout = setTimeout(() => {\n          this._finalizeAnimation();\n        }, duration + 500);\n        target.style[prop] = propValue;\n      }, 30); // Do not reduce this number\n    }, 0);\n  }\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\n\n\n  _onTransitionEnd(e) {\n    if (e.target === this._target) {\n      this._finalizeAnimation();\n    }\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _finalizeAnimation() {\n    if (!this._finished) {\n      this._finished = true;\n      this.onFinish();\n\n      if (this._onComplete) {\n        this._onComplete();\n      }\n    }\n  } // Destroy is called automatically onFinish\n\n\n  destroy() {\n    if (this._helperTimeout) {\n      clearTimeout(this._helperTimeout);\n    }\n\n    removeTransitionStyle(this._target);\n\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\n\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\n\n    if (!this._finished) {\n      this._finalizeAnimation();\n    }\n  }\n\n}\n\nconst DEFAULT_NATURAL_FREQUENCY = 12;\nconst DEFAULT_DAMPING_RATIO = 0.75;\n/**\r\n * Spring easing helper\r\n */\n\nclass SpringEaser {\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\n    // https://en.wikipedia.org/wiki/Damping_ratio\n\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO; // https://en.wikipedia.org/wiki/Natural_frequency\n\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\n    this._dampedFrequency = this._naturalFrequency;\n\n    if (this._dampingRatio < 1) {\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\n    }\n  }\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\n\n\n  easeFrame(deltaPosition, deltaTime) {\n    // Inspired by Apple Webkit and Android spring function implementation\n    // https://en.wikipedia.org/wiki/Oscillation\n    // https://en.wikipedia.org/wiki/Damping_ratio\n    // we ignore mass (assume that it's 1kg)\n    let displacement = 0;\n    let coeff;\n    deltaTime /= 1000;\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\n\n    if (this._dampingRatio === 1) {\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\n      this.velocity = displacement * -this._naturalFrequency + coeff * naturalDumpingPow;\n    } else if (this._dampingRatio < 1) {\n      coeff = 1 / this._dampedFrequency * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\n      displacement = naturalDumpingPow * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\n      this.velocity = displacement * -this._naturalFrequency * this._dampingRatio + naturalDumpingPow * (-this._dampedFrequency * deltaPosition * dumpedFSin + this._dampedFrequency * coeff * dumpedFCos);\n    } // Overdamped (>1) damping ratio is not supported\n\n\n    return displacement;\n  }\n\n}\n\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\n\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\n\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\n\nclass SpringAnimation {\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\n  constructor(props) {\n    this.props = props;\n    this._raf = 0;\n    const {\n      start,\n      end,\n      velocity,\n      onUpdate,\n      onComplete,\n      onFinish = () => {},\n      dampingRatio,\n      naturalFrequency\n    } = props;\n    this.onFinish = onFinish;\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\n    let prevTime = Date.now();\n    let deltaPosition = start - end;\n\n    const animationLoop = () => {\n      if (this._raf) {\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime); // Stop the animation if velocity is low and position is close to end\n\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\n          // Finalize the animation\n          onUpdate(end);\n\n          if (onComplete) {\n            onComplete();\n          }\n\n          this.onFinish();\n        } else {\n          prevTime = Date.now();\n          onUpdate(deltaPosition + end);\n          this._raf = requestAnimationFrame(animationLoop);\n        }\n      }\n    };\n\n    this._raf = requestAnimationFrame(animationLoop);\n  } // Destroy is called automatically onFinish\n\n\n  destroy() {\n    if (this._raf >= 0) {\n      cancelAnimationFrame(this._raf);\n    }\n\n    this._raf = 0;\n  }\n\n}\n\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\n\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\n\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\n\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\n\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\n\n/**\r\n * Manages animations\r\n */\n\nclass Animations {\n  constructor() {\n    /** @type {Animation[]} */\n    this.activeAnimations = [];\n  }\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\n\n\n  startSpring(props) {\n    this._start(props, true);\n  }\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\n\n\n  startTransition(props) {\n    this._start(props);\n  }\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\n\n\n  _start(props, isSpring) {\n    const animation = isSpring ? new SpringAnimation(\n    /** @type SpringAnimationProps */\n    props) : new CSSAnimation(\n    /** @type CssAnimationProps */\n    props);\n    this.activeAnimations.push(animation);\n\n    animation.onFinish = () => this.stop(animation);\n\n    return animation;\n  }\n  /**\r\n   * @param {Animation} animation\r\n   */\n\n\n  stop(animation) {\n    animation.destroy();\n    const index = this.activeAnimations.indexOf(animation);\n\n    if (index > -1) {\n      this.activeAnimations.splice(index, 1);\n    }\n  }\n\n  stopAll() {\n    // _stopAllAnimations\n    this.activeAnimations.forEach(animation => {\n      animation.destroy();\n    });\n    this.activeAnimations = [];\n  }\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\n\n\n  stopAllPan() {\n    this.activeAnimations = this.activeAnimations.filter(animation => {\n      if (animation.props.isPan) {\n        animation.destroy();\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  stopMainScroll() {\n    this.activeAnimations = this.activeAnimations.filter(animation => {\n      if (animation.props.isMainScroll) {\n        animation.destroy();\n        return false;\n      }\n\n      return true;\n    });\n  }\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\n  // isMainScrollRunning() {\n  //   return this.activeAnimations.some((animation) => {\n  //     return animation.props.isMainScroll;\n  //   });\n  // }\n\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\n\n\n  isPanRunning() {\n    return this.activeAnimations.some(animation => {\n      return animation.props.isPan;\n    });\n  }\n\n}\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\nclass ScrollWheel {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    pswp.events.add(pswp.element, 'wheel',\n    /** @type EventListener */\n    this._onWheel.bind(this));\n  }\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\n\n\n  _onWheel(e) {\n    e.preventDefault();\n    const {\n      currSlide\n    } = this.pswp;\n    let {\n      deltaX,\n      deltaY\n    } = e;\n\n    if (!currSlide) {\n      return;\n    }\n\n    if (this.pswp.dispatch('wheel', {\n      originalEvent: e\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\n      // zoom\n      if (currSlide.isZoomable()) {\n        let zoomFactor = -deltaY;\n\n        if (e.deltaMode === 1\n        /* DOM_DELTA_LINE */\n        ) {\n          zoomFactor *= 0.05;\n        } else {\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\n        }\n\n        zoomFactor = 2 ** zoomFactor;\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\n        currSlide.zoomTo(destZoomLevel, {\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    } else {\n      // pan\n      if (currSlide.isPannable()) {\n        if (e.deltaMode === 1\n        /* DOM_DELTA_LINE */\n        ) {\n          // 18 - average line height\n          deltaX *= 18;\n          deltaY *= 18;\n        }\n\n        currSlide.panTo(currSlide.pan.x - deltaX, currSlide.pan.y - deltaY);\n      }\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\n\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\n\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\n\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\n\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\n\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\n\nfunction addElementHTML(htmlData) {\n  if (typeof htmlData === 'string') {\n    // Allow developers to provide full svg,\n    // For example:\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\n    //   <path d=\"...\" />\n    //   <circle ... />\n    // </svg>\n    // Can also be any HTML string.\n    return htmlData;\n  }\n\n  if (!htmlData || !htmlData.isCustomSVG) {\n    return '';\n  }\n\n  const svgData = htmlData;\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">'; // replace all %d with size\n\n  out = out.split('%d').join(\n  /** @type {string} */\n  svgData.size || 32); // Icons may contain outline/shadow,\n  // to make it we \"clone\" base icon shape and add border to it.\n  // Icon itself and border are styled via CSS.\n  //\n  // Property shadowID defines ID of element that should be cloned.\n\n  if (svgData.outlineID) {\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\n  }\n\n  out += svgData.inner;\n  out += '</svg>';\n  return out;\n}\n\nclass UIElement {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\n  constructor(pswp, data) {\n    var _container;\n\n    const name = data.name || data.className;\n    let elementHTML = data.html; // @ts-expect-error lookup only by `data.name` maybe?\n\n    if (pswp.options[name] === false) {\n      // exit if element is disabled from options\n      return;\n    } // Allow to override SVG icons from options\n    // @ts-expect-error lookup only by `data.name` maybe?\n\n\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\n      // arrowPrevSVG\n      // arrowNextSVG\n      // closeSVG\n      // zoomSVG\n      // @ts-expect-error lookup only by `data.name` maybe?\n      elementHTML = pswp.options[name + 'SVG'];\n    }\n\n    pswp.dispatch('uiElementCreate', {\n      data\n    });\n    let className = '';\n\n    if (data.isButton) {\n      className += 'pswp__button ';\n      className += data.className || `pswp__button--${data.name}`;\n    } else {\n      className += data.className || `pswp__${data.name}`;\n    }\n\n    let tagName = data.isButton ? data.tagName || 'button' : data.tagName || 'div';\n    tagName =\n    /** @type {keyof HTMLElementTagNameMap} */\n    tagName.toLowerCase();\n    /** @type {HTMLElement} */\n\n    const element = createElement(className, tagName);\n\n    if (data.isButton) {\n      if (tagName === 'button') {\n        /** @type {HTMLButtonElement} */\n        element.type = 'button';\n      }\n\n      let {\n        title\n      } = data;\n      const {\n        ariaLabel\n      } = data; // @ts-expect-error lookup only by `data.name` maybe?\n\n      if (typeof pswp.options[name + 'Title'] === 'string') {\n        // @ts-expect-error lookup only by `data.name` maybe?\n        title = pswp.options[name + 'Title'];\n      }\n\n      if (title) {\n        element.title = title;\n      }\n\n      const ariaText = ariaLabel || title;\n\n      if (ariaText) {\n        element.setAttribute('aria-label', ariaText);\n      }\n    }\n\n    element.innerHTML = addElementHTML(elementHTML);\n\n    if (data.onInit) {\n      data.onInit(element, pswp);\n    }\n\n    if (data.onClick) {\n      element.onclick = e => {\n        if (typeof data.onClick === 'string') {\n          // @ts-ignore\n          pswp[data.onClick]();\n        } else if (typeof data.onClick === 'function') {\n          data.onClick(e, element, pswp);\n        }\n      };\n    } // Top bar is default position\n\n\n    const appendTo = data.appendTo || 'bar';\n    /** @type {HTMLElement | undefined} root element by default */\n\n    let container = pswp.element;\n\n    if (appendTo === 'bar') {\n      if (!pswp.topBar) {\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\n      }\n\n      container = pswp.topBar;\n    } else {\n      // element outside of top bar gets a secondary class\n      // that makes element fade out on close\n      element.classList.add('pswp__hide-on-close');\n\n      if (appendTo === 'wrapper') {\n        container = pswp.scrollWrap;\n      }\n    }\n\n    (_container = container) === null || _container === void 0 || _container.appendChild(pswp.applyFilters('uiElement', element, data));\n  }\n\n}\n\n/*\r\n  Backward and forward arrow buttons\r\n */\n\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\nfunction initArrowButton(element, pswp, isNextButton) {\n  element.classList.add('pswp__button--arrow'); // TODO: this should point to a unique id for this instance\n\n  element.setAttribute('aria-controls', 'pswp__items');\n  pswp.on('change', () => {\n    if (!pswp.options.loop) {\n      if (isNextButton) {\n        /** @type {HTMLButtonElement} */\n        element.disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\n      } else {\n        /** @type {HTMLButtonElement} */\n        element.disabled = !(pswp.currIndex > 0);\n      }\n    }\n  });\n}\n/** @type {UIElementData} */\n\n\nconst arrowPrev = {\n  name: 'arrowPrev',\n  className: 'pswp__button--arrow--prev',\n  title: 'Previous',\n  order: 10,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'prev',\n  onInit: initArrowButton\n};\n/** @type {UIElementData} */\n\nconst arrowNext = {\n  name: 'arrowNext',\n  className: 'pswp__button--arrow--next',\n  title: 'Next',\n  order: 11,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'next',\n  onInit: (el, pswp) => {\n    initArrowButton(el, pswp, true);\n  }\n};\n\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst closeButton = {\n  name: 'close',\n  title: 'Close',\n  order: 20,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\n    outlineID: 'pswp__icn-close'\n  },\n  onClick: 'close'\n};\n\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst zoomButton = {\n  name: 'zoom',\n  title: 'Zoom',\n  order: 10,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>' + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>' + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\n    outlineID: 'pswp__icn-zoom'\n  },\n  onClick: 'toggleZoom'\n};\n\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst loadingIndicator = {\n  name: 'preloader',\n  appendTo: 'bar',\n  order: 7,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\n    outlineID: 'pswp__icn-loading'\n  },\n  onInit: (indicatorElement, pswp) => {\n    /** @type {boolean | undefined} */\n    let isVisible;\n    /** @type {NodeJS.Timeout | null} */\n\n    let delayTimeout = null;\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\n\n    const toggleIndicatorClass = (className, add) => {\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\n    };\n    /**\r\n     * @param {boolean} visible\r\n     */\n\n\n    const setIndicatorVisibility = visible => {\n      if (isVisible !== visible) {\n        isVisible = visible;\n        toggleIndicatorClass('active', visible);\n      }\n    };\n\n    const updatePreloaderVisibility = () => {\n      var _pswp$currSlide;\n\n      if (!((_pswp$currSlide = pswp.currSlide) !== null && _pswp$currSlide !== void 0 && _pswp$currSlide.content.isLoading())) {\n        setIndicatorVisibility(false);\n\n        if (delayTimeout) {\n          clearTimeout(delayTimeout);\n          delayTimeout = null;\n        }\n\n        return;\n      }\n\n      if (!delayTimeout) {\n        // display loading indicator with delay\n        delayTimeout = setTimeout(() => {\n          var _pswp$currSlide2;\n\n          setIndicatorVisibility(Boolean((_pswp$currSlide2 = pswp.currSlide) === null || _pswp$currSlide2 === void 0 ? void 0 : _pswp$currSlide2.content.isLoading()));\n          delayTimeout = null;\n        }, pswp.options.preloaderDelay);\n      }\n    };\n\n    pswp.on('change', updatePreloaderVisibility);\n    pswp.on('loadComplete', e => {\n      if (pswp.currSlide === e.slide) {\n        updatePreloaderVisibility();\n      }\n    }); // expose the method\n\n    if (pswp.ui) {\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\n    }\n  }\n};\n\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\nconst counterIndicator = {\n  name: 'counter',\n  order: 5,\n  onInit: (counterElement, pswp) => {\n    pswp.on('change', () => {\n      counterElement.innerText = pswp.currIndex + 1 + pswp.options.indexIndicatorSep + pswp.getNumItems();\n    });\n  }\n};\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\n\nfunction setZoomedIn(el, isZoomedIn) {\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\n}\n\nclass UI {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.isRegistered = false;\n    /** @type {UIElementData[]} */\n\n    this.uiElementsData = [];\n    /** @type {(UIElement | UIElementData)[]} */\n\n    this.items = [];\n    /** @type {() => void} */\n\n    this.updatePreloaderVisibility = () => {};\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\n\n\n    this._lastUpdatedZoomLevel = undefined;\n  }\n\n  init() {\n    const {\n      pswp\n    } = this;\n    this.isRegistered = false;\n    this.uiElementsData = [closeButton, arrowPrev, arrowNext, zoomButton, loadingIndicator, counterIndicator];\n    pswp.dispatch('uiRegister'); // sort by order\n\n    this.uiElementsData.sort((a, b) => {\n      // default order is 0\n      return (a.order || 0) - (b.order || 0);\n    });\n    this.items = [];\n    this.isRegistered = true;\n    this.uiElementsData.forEach(uiElementData => {\n      this.registerElement(uiElementData);\n    });\n    pswp.on('change', () => {\n      var _pswp$element;\n\n      (_pswp$element = pswp.element) === null || _pswp$element === void 0 || _pswp$element.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\n    });\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\n  }\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\n\n\n  registerElement(elementData) {\n    if (this.isRegistered) {\n      this.items.push(new UIElement(this.pswp, elementData));\n    } else {\n      this.uiElementsData.push(elementData);\n    }\n  }\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\n\n\n  _onZoomPanUpdate() {\n    const {\n      template,\n      currSlide,\n      options\n    } = this.pswp;\n\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\n      return;\n    }\n\n    let {\n      currZoomLevel\n    } = currSlide; // if not open yet - check against initial zoom level\n\n    if (!this.pswp.opener.isOpen) {\n      currZoomLevel = currSlide.zoomLevels.initial;\n    }\n\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\n      return;\n    }\n\n    this._lastUpdatedZoomLevel = currZoomLevel;\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary; // Initial and secondary zoom levels are almost equal\n\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\n      // disable zoom\n      setZoomedIn(template, false);\n      template.classList.remove('pswp--zoom-allowed');\n      return;\n    }\n\n    template.classList.add('pswp--zoom-allowed');\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\n\n    if (options.imageClickAction === 'zoom' || options.imageClickAction === 'zoom-or-close') {\n      template.classList.add('pswp--click-to-zoom');\n    }\n  }\n\n}\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\n\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\nfunction getBoundsByElement(el) {\n  const thumbAreaRect = el.getBoundingClientRect();\n  return {\n    x: thumbAreaRect.left,\n    y: thumbAreaRect.top,\n    w: thumbAreaRect.width\n  };\n}\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\n\n\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\n  const thumbAreaRect = el.getBoundingClientRect(); // fill image into the area\n  // (do they same as object-fit:cover does to retrieve coordinates)\n\n  const hRatio = thumbAreaRect.width / imageWidth;\n  const vRatio = thumbAreaRect.height / imageHeight;\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\n\n  const bounds = {\n    x: thumbAreaRect.left + offsetX,\n    y: thumbAreaRect.top + offsetY,\n    w: imageWidth * fillZoomLevel\n  }; // Coordinates of inner crop area\n  // relative to the image\n\n  bounds.innerRect = {\n    w: thumbAreaRect.width,\n    h: thumbAreaRect.height,\n    x: offsetX,\n    y: offsetY\n  };\n  return bounds;\n}\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\n\n\nfunction getThumbBounds(index, itemData, instance) {\n  // legacy event, before filters were introduced\n  const event = instance.dispatch('thumbBounds', {\n    index,\n    itemData,\n    instance\n  }); // @ts-expect-error\n\n  if (event.thumbBounds) {\n    // @ts-expect-error\n    return event.thumbBounds;\n  }\n\n  const {\n    element\n  } = itemData;\n  /** @type {Bounds | undefined} */\n\n  let thumbBounds;\n  /** @type {HTMLElement | null | undefined} */\n\n  let thumbnail;\n\n  if (element && instance.options.thumbSelector !== false) {\n    const thumbSelector = instance.options.thumbSelector || 'img';\n    thumbnail = element.matches(thumbSelector) ? element :\n    /** @type {HTMLElement | null} */\n    element.querySelector(thumbSelector);\n  }\n\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\n\n  if (thumbnail) {\n    if (!itemData.thumbCropped) {\n      thumbBounds = getBoundsByElement(thumbnail);\n    } else {\n      thumbBounds = getCroppedBoundsByElement(thumbnail, itemData.width || itemData.w || 0, itemData.height || itemData.h || 0);\n    }\n  }\n\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n\n/** @typedef {import('../slide/slide.js').default} Slide */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\n\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\nclass PhotoSwipeEvent {\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\n  constructor(type, details) {\n    this.type = type;\n    this.defaultPrevented = false;\n\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\n\n\nclass Eventable {\n  constructor() {\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\n    this._listeners = {};\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\n\n    this._filters = {};\n    /** @type {PhotoSwipe | undefined} */\n\n    this.pswp = undefined;\n    /** @type {PhotoSwipeOptions | undefined} */\n\n    this.options = undefined;\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\n\n\n  addFilter(name, fn, priority = 100) {\n    var _this$_filters$name, _this$_filters$name2, _this$pswp;\n\n    if (!this._filters[name]) {\n      this._filters[name] = [];\n    }\n\n    (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.push({\n      fn,\n      priority\n    });\n    (_this$_filters$name2 = this._filters[name]) === null || _this$_filters$name2 === void 0 || _this$_filters$name2.sort((f1, f2) => f1.priority - f2.priority);\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.addFilter(name, fn, priority);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\n\n\n  removeFilter(name, fn) {\n    if (this._filters[name]) {\n      // @ts-expect-error\n      this._filters[name] = this._filters[name].filter(filter => filter.fn !== fn);\n    }\n\n    if (this.pswp) {\n      this.pswp.removeFilter(name, fn);\n    }\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\n\n\n  applyFilters(name, ...args) {\n    var _this$_filters$name3;\n\n    (_this$_filters$name3 = this._filters[name]) === null || _this$_filters$name3 === void 0 || _this$_filters$name3.forEach(filter => {\n      // @ts-expect-error\n      args[0] = filter.fn.apply(this, args);\n    });\n    return args[0];\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  on(name, fn) {\n    var _this$_listeners$name, _this$pswp2;\n\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.push(fn); // When binding events to lightbox,\n    // also bind events to PhotoSwipe Core,\n    // if it's open.\n\n    (_this$pswp2 = this.pswp) === null || _this$pswp2 === void 0 || _this$pswp2.on(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  off(name, fn) {\n    var _this$pswp3;\n\n    if (this._listeners[name]) {\n      // @ts-expect-error\n      this._listeners[name] = this._listeners[name].filter(listener => fn !== listener);\n    }\n\n    (_this$pswp3 = this.pswp) === null || _this$pswp3 === void 0 || _this$pswp3.off(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\n\n\n  dispatch(name, details) {\n    var _this$_listeners$name2;\n\n    if (this.pswp) {\n      return this.pswp.dispatch(name, details);\n    }\n\n    const event =\n    /** @type {AugmentedEvent<T>} */\n    new PhotoSwipeEvent(name, details);\n    (_this$_listeners$name2 = this._listeners[name]) === null || _this$_listeners$name2 === void 0 || _this$_listeners$name2.forEach(listener => {\n      listener.call(this, event);\n    });\n    return event;\n  }\n\n}\n\nclass Placeholder {\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\n  constructor(imageSrc, container) {\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\n    this.element = createElement('pswp__img pswp__img--placeholder', imageSrc ? 'img' : 'div', container);\n\n    if (imageSrc) {\n      const imgEl =\n      /** @type {HTMLImageElement} */\n      this.element;\n      imgEl.decoding = 'async';\n      imgEl.alt = '';\n      imgEl.src = imageSrc;\n      imgEl.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.element.tagName === 'IMG') {\n      // Use transform scale() to modify img placeholder size\n      // (instead of changing width/height directly).\n      // This helps with performance, specifically in iOS15 Safari.\n      setWidthHeight(this.element, 250, 'auto');\n      this.element.style.transformOrigin = '0 0';\n      this.element.style.transform = toTransformString(0, 0, width / 250);\n    } else {\n      setWidthHeight(this.element, width, height);\n    }\n  }\n\n  destroy() {\n    var _this$element;\n\n    if ((_this$element = this.element) !== null && _this$element !== void 0 && _this$element.parentNode) {\n      this.element.remove();\n    }\n\n    this.element = null;\n  }\n\n}\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\nclass Content {\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\n  constructor(itemData, instance, index) {\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\n\n    this.element = undefined;\n    /** @type {Placeholder | undefined} */\n\n    this.placeholder = undefined;\n    /** @type {Slide | undefined} */\n\n    this.slide = undefined;\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n    this.isAttached = false;\n    this.hasSlide = false;\n    this.isDecoding = false;\n    /** @type {LoadState} */\n\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', {\n      content: this\n    });\n  }\n\n  removePlaceholder() {\n    if (this.placeholder && !this.keepPlaceholder()) {\n      // With delay, as image might be loaded, but not rendered\n      setTimeout(() => {\n        if (this.placeholder) {\n          this.placeholder.destroy();\n          this.placeholder = undefined;\n        }\n      }, 1000);\n    }\n  }\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\n\n\n  load(isLazy, reload) {\n    if (this.slide && this.usePlaceholder()) {\n      if (!this.placeholder) {\n        const placeholderSrc = this.instance.applyFilters('placeholderSrc', // use  image-based placeholder only for the first slide,\n        // as rendering (even small stretched thumbnail) is an expensive operation\n        this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n        this.placeholder = new Placeholder(placeholderSrc, this.slide.container);\n      } else {\n        const placeholderEl = this.placeholder.element; // Add placeholder to DOM if it was already created\n\n        if (placeholderEl && !placeholderEl.parentElement) {\n          this.slide.container.prepend(placeholderEl);\n        }\n      }\n    }\n\n    if (this.element && !reload) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentLoad', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.isImageContent()) {\n      this.element = createElement('pswp__img', 'img'); // Start loading only after width is defined, as sizes might depend on it.\n      // Due to Safari feature, we must define sizes before srcset.\n\n      if (this.displayedImageWidth) {\n        this.loadImage(isLazy);\n      }\n    } else {\n      this.element = createElement('pswp__content', 'div');\n      this.element.innerHTML = this.data.html || '';\n    }\n\n    if (reload && this.slide) {\n      this.slide.updateContentSize(true);\n    }\n  }\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\n\n\n  loadImage(isLazy) {\n    var _this$data$src, _this$data$alt;\n\n    if (!this.isImageContent() || !this.element || this.instance.dispatch('contentLoadImage', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    const imageElement =\n    /** @type HTMLImageElement */\n    this.element;\n    this.updateSrcsetSizes();\n\n    if (this.data.srcset) {\n      imageElement.srcset = this.data.srcset;\n    }\n\n    imageElement.src = (_this$data$src = this.data.src) !== null && _this$data$src !== void 0 ? _this$data$src : '';\n    imageElement.alt = (_this$data$alt = this.data.alt) !== null && _this$data$alt !== void 0 ? _this$data$alt : '';\n    this.state = LOAD_STATE.LOADING;\n\n    if (imageElement.complete) {\n      this.onLoaded();\n    } else {\n      imageElement.onload = () => {\n        this.onLoaded();\n      };\n\n      imageElement.onerror = () => {\n        this.onError();\n      };\n    }\n  }\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\n\n\n  setSlide(slide) {\n    this.slide = slide;\n    this.hasSlide = true;\n    this.instance = slide.pswp; // todo: do we need to unset slide?\n  }\n  /**\r\n   * Content load success handler\r\n   */\n\n\n  onLoaded() {\n    this.state = LOAD_STATE.LOADED;\n\n    if (this.slide && this.element) {\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        content: this\n      }); // if content is reloaded\n\n      if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n        this.append();\n        this.slide.updateContentSize(true);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }\n  /**\r\n   * Content load error handler\r\n   */\n\n\n  onError() {\n    this.state = LOAD_STATE.ERROR;\n\n    if (this.slide) {\n      this.displayError();\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        isError: true,\n        content: this\n      });\n      this.instance.dispatch('loadError', {\n        slide: this.slide,\n        content: this\n      });\n    }\n  }\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\n\n\n  isLoading() {\n    return this.instance.applyFilters('isContentLoading', this.state === LOAD_STATE.LOADING, this);\n  }\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\n\n\n  isError() {\n    return this.state === LOAD_STATE.ERROR;\n  }\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\n\n\n  isImageContent() {\n    return this.type === 'image';\n  }\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.placeholder) {\n      this.placeholder.setDisplayedSize(width, height);\n    }\n\n    if (this.instance.dispatch('contentResize', {\n      content: this,\n      width,\n      height\n    }).defaultPrevented) {\n      return;\n    }\n\n    setWidthHeight(this.element, width, height);\n\n    if (this.isImageContent() && !this.isError()) {\n      const isInitialSizeUpdate = !this.displayedImageWidth && width;\n      this.displayedImageWidth = width;\n      this.displayedImageHeight = height;\n\n      if (isInitialSizeUpdate) {\n        this.loadImage(false);\n      } else {\n        this.updateSrcsetSizes();\n      }\n\n      if (this.slide) {\n        this.instance.dispatch('imageSizeChange', {\n          slide: this.slide,\n          width,\n          height,\n          content: this\n        });\n      }\n    }\n  }\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\n\n\n  isZoomable() {\n    return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== LOAD_STATE.ERROR, this);\n  }\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\n\n\n  updateSrcsetSizes() {\n    // Handle srcset sizes attribute.\n    //\n    // Never lower quality, if it was increased previously.\n    // Chrome does this automatically, Firefox and Safari do not,\n    // so we store largest used size in dataset.\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\n      return;\n    }\n\n    const image =\n    /** @type HTMLImageElement */\n    this.element;\n    const sizesWidth = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);\n\n    if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n      image.sizes = sizesWidth + 'px';\n      image.dataset.largestUsedSize = String(sizesWidth);\n    }\n  }\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\n\n\n  usePlaceholder() {\n    return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);\n  }\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\n\n\n  lazyLoad() {\n    if (this.instance.dispatch('contentLazyLoad', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.load(true);\n  }\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\n\n\n  keepPlaceholder() {\n    return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);\n  }\n  /**\r\n   * Destroy the content\r\n   */\n\n\n  destroy() {\n    this.hasSlide = false;\n    this.slide = undefined;\n\n    if (this.instance.dispatch('contentDestroy', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.remove();\n\n    if (this.placeholder) {\n      this.placeholder.destroy();\n      this.placeholder = undefined;\n    }\n\n    if (this.isImageContent() && this.element) {\n      this.element.onload = null;\n      this.element.onerror = null;\n      this.element = undefined;\n    }\n  }\n  /**\r\n   * Display error message\r\n   */\n\n\n  displayError() {\n    if (this.slide) {\n      var _this$instance$option, _this$instance$option2;\n\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\n      errorMsgEl.innerText = (_this$instance$option = (_this$instance$option2 = this.instance.options) === null || _this$instance$option2 === void 0 ? void 0 : _this$instance$option2.errorMsg) !== null && _this$instance$option !== void 0 ? _this$instance$option : '';\n      errorMsgEl =\n      /** @type {HTMLDivElement} */\n      this.instance.applyFilters('contentErrorElement', errorMsgEl, this);\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\n      this.element.appendChild(errorMsgEl);\n      this.slide.container.innerText = '';\n      this.slide.container.appendChild(this.element);\n      this.slide.updateContentSize(true);\n      this.removePlaceholder();\n    }\n  }\n  /**\r\n   * Append the content\r\n   */\n\n\n  append() {\n    if (this.isAttached || !this.element) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.state === LOAD_STATE.ERROR) {\n      this.displayError();\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppend', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    const supportsDecode = ('decode' in this.element);\n\n    if (this.isImageContent()) {\n      // Use decode() on nearby slides\n      //\n      // Nearby slide images are in DOM and not hidden via display:none.\n      // However, they are placed offscreen (to the left and right side).\n      //\n      // Some browsers do not composite the image until it's actually visible,\n      // using decode() helps.\n      //\n      // You might ask \"why dont you just decode() and then append all images\",\n      // that's because I want to show image before it's fully loaded,\n      // as browser can render parts of image while it is loading.\n      // We do not do this in Safari due to partial loading bug.\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n        this.isDecoding = true; // purposefully using finally instead of then,\n        // as if srcset sizes changes dynamically - it may cause decode error\n\n        /** @type {HTMLImageElement} */\n\n        this.element.decode().catch(() => {}).finally(() => {\n          this.isDecoding = false;\n          this.appendImage();\n        });\n      } else {\n        this.appendImage();\n      }\n    } else if (this.slide && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n  }\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\n\n\n  activate() {\n    if (this.instance.dispatch('contentActivate', {\n      content: this\n    }).defaultPrevented || !this.slide) {\n      return;\n    }\n\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\n      // add image to slide when it becomes active,\n      // even if it's not finished decoding\n      this.appendImage();\n    } else if (this.isError()) {\n      this.load(false, true); // try to reload\n    }\n\n    if (this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\n    }\n  }\n  /**\r\n   * Deactivate the content\r\n   */\n\n\n  deactivate() {\n    this.instance.dispatch('contentDeactivate', {\n      content: this\n    });\n\n    if (this.slide && this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\r\n   * Remove the content from DOM\r\n   */\n\n\n  remove() {\n    this.isAttached = false;\n\n    if (this.instance.dispatch('contentRemove', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.remove();\n    }\n\n    if (this.placeholder && this.placeholder.element) {\n      this.placeholder.element.remove();\n    }\n  }\n  /**\r\n   * Append the image content to slide container\r\n   */\n\n\n  appendImage() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppendImage', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    } // ensure that element exists and is not already appended\n\n\n    if (this.slide && this.element && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n      this.removePlaceholder();\n    }\n  }\n\n}\n\n/** @typedef {import('./content.js').default} Content */\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\nconst MIN_SLIDES_TO_CACHE = 5;\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\n\nfunction lazyLoadData(itemData, instance, index) {\n  const content = instance.createContentFromData(itemData, index);\n  /** @type {ZoomLevel | undefined} */\n\n  let zoomLevel;\n  const {\n    options\n  } = instance; // We need to know dimensions of the image to preload it,\n  // as it might use srcset, and we need to define sizes\n\n  if (options) {\n    zoomLevel = new ZoomLevel(options, itemData, -1);\n    let viewportSize;\n\n    if (instance.pswp) {\n      viewportSize = instance.pswp.viewportSize;\n    } else {\n      viewportSize = getViewportSize(options, instance);\n    }\n\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n    zoomLevel.update(content.width, content.height, panAreaSize);\n  }\n\n  content.lazyLoad();\n\n  if (zoomLevel) {\n    content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n  }\n\n  return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\n\nfunction lazyLoadSlide(index, instance) {\n  const itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', {\n    index,\n    itemData\n  }).defaultPrevented) {\n    return;\n  }\n\n  return lazyLoadData(itemData, instance, index);\n}\n\nclass ContentLoader {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp; // Total amount of cached images\n\n    this.limit = Math.max(pswp.options.preload[0] + pswp.options.preload[1] + 1, MIN_SLIDES_TO_CACHE);\n    /** @type {Content[]} */\n\n    this._cachedItems = [];\n  }\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\n\n\n  updateLazy(diff) {\n    const {\n      pswp\n    } = this;\n\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\n      return;\n    }\n\n    const {\n      preload\n    } = pswp.options;\n    const isForward = diff === undefined ? true : diff >= 0;\n    let i; // preload[1] - num items to preload in forward direction\n\n    for (i = 0; i <= preload[1]; i++) {\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : -i));\n    } // preload[0] - num items to preload in backward direction\n\n\n    for (i = 1; i <= preload[0]; i++) {\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? -i : i));\n    }\n  }\n  /**\r\n   * @param {number} initialIndex\r\n   */\n\n\n  loadSlideByIndex(initialIndex) {\n    const index = this.pswp.getLoopedIndex(initialIndex); // try to get cached content\n\n    let content = this.getContentByIndex(index);\n\n    if (!content) {\n      // no cached content, so try to load from scratch:\n      content = lazyLoadSlide(index, this.pswp); // if content can be loaded, add it to cache:\n\n      if (content) {\n        this.addToCache(content);\n      }\n    }\n  }\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\n\n\n  getContentBySlide(slide) {\n    let content = this.getContentByIndex(slide.index);\n\n    if (!content) {\n      // create content if not found in cache\n      content = this.pswp.createContentFromData(slide.data, slide.index);\n      this.addToCache(content);\n    } // assign slide to content\n\n\n    content.setSlide(slide);\n    return content;\n  }\n  /**\r\n   * @param {Content} content\r\n   */\n\n\n  addToCache(content) {\n    // move to the end of array\n    this.removeByIndex(content.index);\n\n    this._cachedItems.push(content);\n\n    if (this._cachedItems.length > this.limit) {\n      // Destroy the first content that's not attached\n      const indexToRemove = this._cachedItems.findIndex(item => {\n        return !item.isAttached && !item.hasSlide;\n      });\n\n      if (indexToRemove !== -1) {\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\n\n        removedItem.destroy();\n      }\n    }\n  }\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\n\n\n  removeByIndex(index) {\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\n\n    if (indexToRemove !== -1) {\n      this._cachedItems.splice(indexToRemove, 1);\n    }\n  }\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\n\n\n  getContentByIndex(index) {\n    return this._cachedItems.find(content => content.index === index);\n  }\n\n  destroy() {\n    this._cachedItems.forEach(content => content.destroy());\n\n    this._cachedItems = [];\n  }\n\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\n\nclass PhotoSwipeBase extends Eventable {\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\n  getNumItems() {\n    var _this$options;\n\n    let numItems = 0;\n    const dataSource = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.dataSource;\n\n    if (dataSource && 'length' in dataSource) {\n      // may be an array or just object with length property\n      numItems = dataSource.length;\n    } else if (dataSource && 'gallery' in dataSource) {\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      if (dataSource.items) {\n        numItems = dataSource.items.length;\n      }\n    } // legacy event, before filters were introduced\n\n\n    const event = this.dispatch('numItems', {\n      dataSource,\n      numItems\n    });\n    return this.applyFilters('numItems', event.numItems, dataSource);\n  }\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\n\n\n  createContentFromData(slideData, index) {\n    return new Content(slideData, this, index);\n  }\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\n\n\n  getItemData(index) {\n    var _this$options2;\n\n    const dataSource = (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.dataSource;\n    /** @type {SlideData | HTMLElement} */\n\n    let dataSourceItem = {};\n\n    if (Array.isArray(dataSource)) {\n      // Datasource is an array of elements\n      dataSourceItem = dataSource[index];\n    } else if (dataSource && 'gallery' in dataSource) {\n      // dataSource has gallery property,\n      // thus it was created by Lightbox, based on\n      // gallery and children options\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      dataSourceItem = dataSource.items[index];\n    }\n\n    let itemData = dataSourceItem;\n\n    if (itemData instanceof Element) {\n      itemData = this._domElementToItemData(itemData);\n    } // Dispatching the itemData event,\n    // it's a legacy verion before filters were introduced\n\n\n    const event = this.dispatch('itemData', {\n      itemData: itemData || {},\n      index\n    });\n    return this.applyFilters('itemData', event.itemData, index);\n  }\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\n\n\n  _getGalleryDOMElements(galleryElement) {\n    var _this$options3, _this$options4;\n\n    if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.children || (_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.childSelector) {\n      return getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n    }\n\n    return [galleryElement];\n  }\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\n\n\n  _domElementToItemData(element) {\n    /** @type {SlideData} */\n    const itemData = {\n      element\n    };\n    const linkEl =\n    /** @type {HTMLAnchorElement} */\n    element.tagName === 'A' ? element : element.querySelector('a');\n\n    if (linkEl) {\n      // src comes from data-pswp-src attribute,\n      // if it's empty link href is used\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n      if (linkEl.dataset.pswpSrcset) {\n        itemData.srcset = linkEl.dataset.pswpSrcset;\n      }\n\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0; // support legacy w & h properties\n\n      itemData.w = itemData.width;\n      itemData.h = itemData.height;\n\n      if (linkEl.dataset.pswpType) {\n        itemData.type = linkEl.dataset.pswpType;\n      }\n\n      const thumbnailEl = element.querySelector('img');\n\n      if (thumbnailEl) {\n        var _thumbnailEl$getAttri;\n\n        // msrc is URL to placeholder image that's displayed before large image is loaded\n        // by default it's displayed only for the first slide\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n        itemData.alt = (_thumbnailEl$getAttri = thumbnailEl.getAttribute('alt')) !== null && _thumbnailEl$getAttri !== void 0 ? _thumbnailEl$getAttri : '';\n      }\n\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n        itemData.thumbCropped = true;\n      }\n    }\n\n    return this.applyFilters('domItemData', itemData, element, linkEl);\n  }\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\n\n\n  lazyLoadData(itemData, index) {\n    return lazyLoadData(itemData, this, index);\n  }\n\n}\n\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\n// some browsers do not paint\n// elements which opacity is set to 0,\n// since we need to pre-render elements for the animation -\n// we set it to the minimum amount\n\nconst MIN_OPACITY = 0.003;\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\n\nclass Opener {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.isClosed = true;\n    this.isOpen = false;\n    this.isClosing = false;\n    this.isOpening = false;\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\n\n    this._duration = undefined;\n    /** @private */\n\n    this._useAnimation = false;\n    /** @private */\n\n    this._croppedZoom = false;\n    /** @private */\n\n    this._animateRootOpacity = false;\n    /** @private */\n\n    this._animateBgOpacity = false;\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\n\n    this._placeholder = undefined;\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\n\n    this._opacityElement = undefined;\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\n\n    this._cropContainer1 = undefined;\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\n\n    this._cropContainer2 = undefined;\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\n\n    this._thumbBounds = undefined;\n    this._prepareOpen = this._prepareOpen.bind(this); // Override initial zoom and pan position\n\n    pswp.on('firstZoomPan', this._prepareOpen);\n  }\n\n  open() {\n    this._prepareOpen();\n\n    this._start();\n  }\n\n  close() {\n    if (this.isClosed || this.isClosing || this.isOpening) {\n      // if we close during opening animation\n      // for now do nothing,\n      // browsers aren't good at changing the direction of the CSS transition\n      return;\n    }\n\n    const slide = this.pswp.currSlide;\n    this.isOpen = false;\n    this.isOpening = false;\n    this.isClosing = true;\n    this._duration = this.pswp.options.hideAnimationDuration;\n\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\n      this._duration = 0;\n    }\n\n    this._applyStartProps();\n\n    setTimeout(() => {\n      this._start();\n    }, this._croppedZoom ? 30 : 0);\n  }\n  /** @private */\n\n\n  _prepareOpen() {\n    this.pswp.off('firstZoomPan', this._prepareOpen);\n\n    if (!this.isOpening) {\n      const slide = this.pswp.currSlide;\n      this.isOpening = true;\n      this.isClosing = false;\n      this._duration = this.pswp.options.showAnimationDuration;\n\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\n        this._duration = 0;\n      }\n\n      this._applyStartProps();\n    }\n  }\n  /** @private */\n\n\n  _applyStartProps() {\n    const {\n      pswp\n    } = this;\n    const slide = this.pswp.currSlide;\n    const {\n      options\n    } = pswp;\n\n    if (options.showHideAnimationType === 'fade') {\n      options.showHideOpacity = true;\n      this._thumbBounds = undefined;\n    } else if (options.showHideAnimationType === 'none') {\n      options.showHideOpacity = false;\n      this._duration = 0;\n      this._thumbBounds = undefined;\n    } else if (this.isOpening && pswp._initialThumbBounds) {\n      // Use initial bounds if defined\n      this._thumbBounds = pswp._initialThumbBounds;\n    } else {\n      this._thumbBounds = this.pswp.getThumbBounds();\n    }\n\n    this._placeholder = slide === null || slide === void 0 ? void 0 : slide.getPlaceholderElement();\n    pswp.animations.stopAll(); // Discard animations when duration is less than 50ms\n\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\n    this._animateZoom = Boolean(this._thumbBounds) && (slide === null || slide === void 0 ? void 0 : slide.content.usePlaceholder()) && (!this.isClosing || !pswp.mainScroll.isShifted());\n\n    if (!this._animateZoom) {\n      this._animateRootOpacity = true;\n\n      if (this.isOpening && slide) {\n        slide.zoomAndPanToInitial();\n        slide.applyCurrentZoomPan();\n      }\n    } else {\n      var _options$showHideOpac;\n\n      this._animateRootOpacity = (_options$showHideOpac = options.showHideOpacity) !== null && _options$showHideOpac !== void 0 ? _options$showHideOpac : false;\n    }\n\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\n\n    if (!this._useAnimation) {\n      this._duration = 0;\n      this._animateZoom = false;\n      this._animateBgOpacity = false;\n      this._animateRootOpacity = true;\n\n      if (this.isOpening) {\n        if (pswp.element) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n        }\n\n        pswp.applyBgOpacity(1);\n      }\n\n      return;\n    }\n\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\n      var _this$pswp$currSlide;\n\n      // Properties are used when animation from cropped thumbnail\n      this._croppedZoom = true;\n      this._cropContainer1 = this.pswp.container;\n      this._cropContainer2 = (_this$pswp$currSlide = this.pswp.currSlide) === null || _this$pswp$currSlide === void 0 ? void 0 : _this$pswp$currSlide.holderElement;\n\n      if (pswp.container) {\n        pswp.container.style.overflow = 'hidden';\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\n      }\n    } else {\n      this._croppedZoom = false;\n    }\n\n    if (this.isOpening) {\n      // Apply styles before opening transition\n      if (this._animateRootOpacity) {\n        if (pswp.element) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n        }\n\n        pswp.applyBgOpacity(1);\n      } else {\n        if (this._animateBgOpacity && pswp.bg) {\n          pswp.bg.style.opacity = String(MIN_OPACITY);\n        }\n\n        if (pswp.element) {\n          pswp.element.style.opacity = '1';\n        }\n      }\n\n      if (this._animateZoom) {\n        this._setClosedStateZoomPan();\n\n        if (this._placeholder) {\n          // tell browser that we plan to animate the placeholder\n          this._placeholder.style.willChange = 'transform'; // hide placeholder to allow hiding of\n          // elements that overlap it (such as icons over the thumbnail)\n\n          this._placeholder.style.opacity = String(MIN_OPACITY);\n        }\n      }\n    } else if (this.isClosing) {\n      // hide nearby slides to make sure that\n      // they are not painted during the transition\n      if (pswp.mainScroll.itemHolders[0]) {\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\n      }\n\n      if (pswp.mainScroll.itemHolders[2]) {\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\n      }\n\n      if (this._croppedZoom) {\n        if (pswp.mainScroll.x !== 0) {\n          // shift the main scroller to zero position\n          pswp.mainScroll.resetPosition();\n          pswp.mainScroll.resize();\n        }\n      }\n    }\n  }\n  /** @private */\n\n\n  _start() {\n    if (this.isOpening && this._useAnimation && this._placeholder && this._placeholder.tagName === 'IMG') {\n      // To ensure smooth animation\n      // we wait till the current slide image placeholder is decoded,\n      // but no longer than 250ms,\n      // and no shorter than 50ms\n      // (just using requestanimationframe is not enough in Firefox,\n      // for some reason)\n      new Promise(resolve => {\n        let decoded = false;\n        let isDelaying = true;\n        decodeImage(\n        /** @type {HTMLImageElement} */\n        this._placeholder).finally(() => {\n          decoded = true;\n\n          if (!isDelaying) {\n            resolve(true);\n          }\n        });\n        setTimeout(() => {\n          isDelaying = false;\n\n          if (decoded) {\n            resolve(true);\n          }\n        }, 50);\n        setTimeout(resolve, 250);\n      }).finally(() => this._initiate());\n    } else {\n      this._initiate();\n    }\n  }\n  /** @private */\n\n\n  _initiate() {\n    var _this$pswp$element, _this$pswp$element2;\n\n    (_this$pswp$element = this.pswp.element) === null || _this$pswp$element === void 0 || _this$pswp$element.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\n    this.pswp.dispatch(this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'); // legacy event\n\n    this.pswp.dispatch(\n    /** @type {'initialZoomIn' | 'initialZoomOut'} */\n    'initialZoom' + (this.isOpening ? 'In' : 'Out'));\n    (_this$pswp$element2 = this.pswp.element) === null || _this$pswp$element2 === void 0 || _this$pswp$element2.classList.toggle('pswp--ui-visible', this.isOpening);\n\n    if (this.isOpening) {\n      if (this._placeholder) {\n        // unhide the placeholder\n        this._placeholder.style.opacity = '1';\n      }\n\n      this._animateToOpenState();\n    } else if (this.isClosing) {\n      this._animateToClosedState();\n    }\n\n    if (!this._useAnimation) {\n      this._onAnimationComplete();\n    }\n  }\n  /** @private */\n\n\n  _onAnimationComplete() {\n    const {\n      pswp\n    } = this;\n    this.isOpen = this.isOpening;\n    this.isClosed = this.isClosing;\n    this.isOpening = false;\n    this.isClosing = false;\n    pswp.dispatch(this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'); // legacy event\n\n    pswp.dispatch(\n    /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\n    'initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'));\n\n    if (this.isClosed) {\n      pswp.destroy();\n    } else if (this.isOpen) {\n      var _pswp$currSlide;\n\n      if (this._animateZoom && pswp.container) {\n        pswp.container.style.overflow = 'visible';\n        pswp.container.style.width = '100%';\n      }\n\n      (_pswp$currSlide = pswp.currSlide) === null || _pswp$currSlide === void 0 || _pswp$currSlide.applyCurrentZoomPan();\n    }\n  }\n  /** @private */\n\n\n  _animateToOpenState() {\n    const {\n      pswp\n    } = this;\n\n    if (this._animateZoom) {\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\n\n        this._animateTo(this._cropContainer2, 'transform', 'none');\n      }\n\n      if (pswp.currSlide) {\n        pswp.currSlide.zoomAndPanToInitial();\n\n        this._animateTo(pswp.currSlide.container, 'transform', pswp.currSlide.getCurrentTransform());\n      }\n    }\n\n    if (this._animateBgOpacity && pswp.bg) {\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\n    }\n\n    if (this._animateRootOpacity && pswp.element) {\n      this._animateTo(pswp.element, 'opacity', '1');\n    }\n  }\n  /** @private */\n\n\n  _animateToClosedState() {\n    const {\n      pswp\n    } = this;\n\n    if (this._animateZoom) {\n      this._setClosedStateZoomPan(true);\n    } // do not animate opacity if it's already at 0\n\n\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\n      this._animateTo(pswp.bg, 'opacity', '0');\n    }\n\n    if (this._animateRootOpacity && pswp.element) {\n      this._animateTo(pswp.element, 'opacity', '0');\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\n\n\n  _setClosedStateZoomPan(animate) {\n    if (!this._thumbBounds) return;\n    const {\n      pswp\n    } = this;\n    const {\n      innerRect\n    } = this._thumbBounds;\n    const {\n      currSlide,\n      viewportSize\n    } = pswp;\n\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\n      const containerTwoPanX = viewportSize.x - innerRect.w;\n      const containerTwoPanY = viewportSize.y - innerRect.h;\n\n      if (animate) {\n        this._animateTo(this._cropContainer1, 'transform', toTransformString(containerOnePanX, containerOnePanY));\n\n        this._animateTo(this._cropContainer2, 'transform', toTransformString(containerTwoPanX, containerTwoPanY));\n      } else {\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\n      }\n    }\n\n    if (currSlide) {\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\n\n      if (animate) {\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\n      } else {\n        currSlide.applyCurrentZoomPan();\n      }\n    }\n  }\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\n\n\n  _animateTo(target, prop, propValue) {\n    if (!this._duration) {\n      target.style[prop] = propValue;\n      return;\n    }\n\n    const {\n      animations\n    } = this.pswp;\n    /** @type {AnimationProps} */\n\n    const animProps = {\n      duration: this._duration,\n      easing: this.pswp.options.easing,\n      onComplete: () => {\n        if (!animations.activeAnimations.length) {\n          this._onAnimationComplete();\n        }\n      },\n      target\n    };\n    animProps[prop] = propValue;\n    animations.startTransition(animProps);\n  }\n\n}\n\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\n\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\n\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\n\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\n\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\n\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\n\n/** @typedef {SlideData[]} DataSourceArray */\n\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\n\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\n\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\n\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\n\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\n\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\n\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\n\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\n\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} trapFocus\r\n * Trap focus within PhotoSwipe element while it's open.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\n\n/** @type {PreparedPhotoSwipeOptions} */\n\nconst defaultOptions = {\n  allowPanToNext: true,\n  spacing: 0.1,\n  loop: true,\n  pinchToClose: true,\n  closeOnVerticalDrag: true,\n  hideAnimationDuration: 333,\n  showAnimationDuration: 333,\n  zoomAnimationDuration: 333,\n  escKey: true,\n  arrowKeys: true,\n  trapFocus: true,\n  returnFocus: true,\n  maxWidthToAnimate: 4000,\n  clickToCloseNonZoomable: true,\n  imageClickAction: 'zoom-or-close',\n  bgClickAction: 'close',\n  tapAction: 'toggle-controls',\n  doubleTapAction: 'zoom',\n  indexIndicatorSep: ' / ',\n  preloaderDelay: 2000,\n  bgOpacity: 0.8,\n  index: 0,\n  errorMsg: 'The image cannot be loaded',\n  preload: [1, 2],\n  easing: 'cubic-bezier(.4,0,.22,1)'\n};\n/**\r\n * PhotoSwipe Core\r\n */\n\nclass PhotoSwipe extends PhotoSwipeBase {\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\n  constructor(options) {\n    super();\n    this.options = this._prepareOptions(options || {});\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\n\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\n\n    this._prevViewportSize = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\n\n    this.viewportSize = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * background (backdrop) opacity\r\n     */\n\n    this.bgOpacity = 1;\n    this.currIndex = 0;\n    this.potentialIndex = 0;\n    this.isOpen = false;\n    this.isDestroying = false;\n    this.hasMouse = false;\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\n\n    this._initialItemData = {};\n    /** @type {Bounds | undefined} */\n\n    this._initialThumbBounds = undefined;\n    /** @type {HTMLDivElement | undefined} */\n\n    this.topBar = undefined;\n    /** @type {HTMLDivElement | undefined} */\n\n    this.element = undefined;\n    /** @type {HTMLDivElement | undefined} */\n\n    this.template = undefined;\n    /** @type {HTMLDivElement | undefined} */\n\n    this.container = undefined;\n    /** @type {HTMLElement | undefined} */\n\n    this.scrollWrap = undefined;\n    /** @type {Slide | undefined} */\n\n    this.currSlide = undefined;\n    this.events = new DOMEvents();\n    this.animations = new Animations();\n    this.mainScroll = new MainScroll(this);\n    this.gestures = new Gestures(this);\n    this.opener = new Opener(this);\n    this.keyboard = new Keyboard(this);\n    this.contentLoader = new ContentLoader(this);\n  }\n  /** @returns {boolean} */\n\n\n  init() {\n    if (this.isOpen || this.isDestroying) {\n      return false;\n    }\n\n    this.isOpen = true;\n    this.dispatch('init'); // legacy\n\n    this.dispatch('beforeOpen');\n\n    this._createMainStructure(); // add classes to the root element of PhotoSwipe\n\n\n    let rootClasses = 'pswp--open';\n\n    if (this.gestures.supportsTouch) {\n      rootClasses += ' pswp--touch';\n    }\n\n    if (this.options.mainClass) {\n      rootClasses += ' ' + this.options.mainClass;\n    }\n\n    if (this.element) {\n      this.element.className += ' ' + rootClasses;\n    }\n\n    this.currIndex = this.options.index || 0;\n    this.potentialIndex = this.currIndex;\n    this.dispatch('firstUpdate'); // starting index can be modified here\n    // initialize scroll wheel handler to block the scroll\n\n    this.scrollWheel = new ScrollWheel(this); // sanitize index\n\n    if (Number.isNaN(this.currIndex) || this.currIndex < 0 || this.currIndex >= this.getNumItems()) {\n      this.currIndex = 0;\n    }\n\n    if (!this.gestures.supportsTouch) {\n      // enable mouse features if no touch support detected\n      this.mouseDetected();\n    } // causes forced synchronous layout\n\n\n    this.updateSize();\n    this.offset.y = window.pageYOffset;\n    this._initialItemData = this.getItemData(this.currIndex);\n    this.dispatch('gettingData', {\n      index: this.currIndex,\n      data: this._initialItemData,\n      slide: undefined\n    }); // *Layout* - calculate size and position of elements here\n\n    this._initialThumbBounds = this.getThumbBounds();\n    this.dispatch('initialLayout');\n    this.on('openingAnimationEnd', () => {\n      const {\n        itemHolders\n      } = this.mainScroll; // Add content to the previous and next slide\n\n      if (itemHolders[0]) {\n        itemHolders[0].el.style.display = 'block';\n        this.setContent(itemHolders[0], this.currIndex - 1);\n      }\n\n      if (itemHolders[2]) {\n        itemHolders[2].el.style.display = 'block';\n        this.setContent(itemHolders[2], this.currIndex + 1);\n      }\n\n      this.appendHeavy();\n      this.contentLoader.updateLazy();\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\n      this.dispatch('bindEvents');\n    }); // set content for center slide (first time)\n\n    if (this.mainScroll.itemHolders[1]) {\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\n    }\n\n    this.dispatch('change');\n    this.opener.open();\n    this.dispatch('afterInit');\n    return true;\n  }\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\n\n\n  getLoopedIndex(index) {\n    const numSlides = this.getNumItems();\n\n    if (this.options.loop) {\n      if (index > numSlides - 1) {\n        index -= numSlides;\n      }\n\n      if (index < 0) {\n        index += numSlides;\n      }\n    }\n\n    return clamp(index, 0, numSlides - 1);\n  }\n\n  appendHeavy() {\n    this.mainScroll.itemHolders.forEach(itemHolder => {\n      var _itemHolder$slide;\n\n      (_itemHolder$slide = itemHolder.slide) === null || _itemHolder$slide === void 0 || _itemHolder$slide.appendHeavy();\n    });\n  }\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\n\n\n  goTo(index) {\n    this.mainScroll.moveIndexBy(this.getLoopedIndex(index) - this.potentialIndex);\n  }\n  /**\r\n   * Go to the next slide.\r\n   */\n\n\n  next() {\n    this.goTo(this.potentialIndex + 1);\n  }\n  /**\r\n   * Go to the previous slide.\r\n   */\n\n\n  prev() {\n    this.goTo(this.potentialIndex - 1);\n  }\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\n\n\n  zoomTo(...args) {\n    var _this$currSlide;\n\n    (_this$currSlide = this.currSlide) === null || _this$currSlide === void 0 || _this$currSlide.zoomTo(...args);\n  }\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\n\n\n  toggleZoom() {\n    var _this$currSlide2;\n\n    (_this$currSlide2 = this.currSlide) === null || _this$currSlide2 === void 0 || _this$currSlide2.toggleZoom();\n  }\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\n\n\n  close() {\n    if (!this.opener.isOpen || this.isDestroying) {\n      return;\n    }\n\n    this.isDestroying = true;\n    this.dispatch('close');\n    this.events.removeAll();\n    this.opener.close();\n  }\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\n\n\n  destroy() {\n    var _this$element;\n\n    if (!this.isDestroying) {\n      this.options.showHideAnimationType = 'none';\n      this.close();\n      return;\n    }\n\n    this.dispatch('destroy');\n    this._listeners = {};\n\n    if (this.scrollWrap) {\n      this.scrollWrap.ontouchmove = null;\n      this.scrollWrap.ontouchend = null;\n    }\n\n    (_this$element = this.element) === null || _this$element === void 0 || _this$element.remove();\n    this.mainScroll.itemHolders.forEach(itemHolder => {\n      var _itemHolder$slide2;\n\n      (_itemHolder$slide2 = itemHolder.slide) === null || _itemHolder$slide2 === void 0 || _itemHolder$slide2.destroy();\n    });\n    this.contentLoader.destroy();\n    this.events.removeAll();\n  }\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\n\n\n  refreshSlideContent(slideIndex) {\n    this.contentLoader.removeByIndex(slideIndex);\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\n      var _this$currSlide$index, _this$currSlide3;\n\n      let potentialHolderIndex = ((_this$currSlide$index = (_this$currSlide3 = this.currSlide) === null || _this$currSlide3 === void 0 ? void 0 : _this$currSlide3.index) !== null && _this$currSlide$index !== void 0 ? _this$currSlide$index : 0) - 1 + i;\n\n      if (this.canLoop()) {\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\n      }\n\n      if (potentialHolderIndex === slideIndex) {\n        // set the new slide content\n        this.setContent(itemHolder, slideIndex, true); // activate the new slide if it's current\n\n        if (i === 1) {\n          var _itemHolder$slide3;\n\n          this.currSlide = itemHolder.slide;\n          (_itemHolder$slide3 = itemHolder.slide) === null || _itemHolder$slide3 === void 0 || _itemHolder$slide3.setIsActive(true);\n        }\n      }\n    });\n    this.dispatch('change');\n  }\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\n\n\n  setContent(holder, index, force) {\n    if (this.canLoop()) {\n      index = this.getLoopedIndex(index);\n    }\n\n    if (holder.slide) {\n      if (holder.slide.index === index && !force) {\n        // exit if holder already contains this slide\n        // this could be common when just three slides are used\n        return;\n      } // destroy previous slide\n\n\n      holder.slide.destroy();\n      holder.slide = undefined;\n    } // exit if no loop and index is out of bounds\n\n\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\n      return;\n    }\n\n    const itemData = this.getItemData(index);\n    holder.slide = new Slide(itemData, index, this); // set current slide\n\n    if (index === this.currIndex) {\n      this.currSlide = holder.slide;\n    }\n\n    holder.slide.append(holder.el);\n  }\n  /** @returns {Point} */\n\n\n  getViewportCenterPoint() {\n    return {\n      x: this.viewportSize.x / 2,\n      y: this.viewportSize.y / 2\n    };\n  }\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\n\n\n  updateSize(force) {\n    // let item;\n    // let itemIndex;\n    if (this.isDestroying) {\n      // exit if PhotoSwipe is closed or closing\n      // (to avoid errors, as resize event might be delayed)\n      return;\n    } //const newWidth = this.scrollWrap.clientWidth;\n    //const newHeight = this.scrollWrap.clientHeight;\n\n\n    const newViewportSize = getViewportSize(this.options, this);\n\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\n      // Exit if dimensions were not changed\n      return;\n    } //this._prevViewportSize.x = newWidth;\n    //this._prevViewportSize.y = newHeight;\n\n\n    equalizePoints(this._prevViewportSize, newViewportSize);\n    this.dispatch('beforeResize');\n    equalizePoints(this.viewportSize, this._prevViewportSize);\n\n    this._updatePageScrollOffset();\n\n    this.dispatch('viewportSize'); // Resize slides only after opener animation is finished\n    // and don't re-calculate size on inital size update\n\n    this.mainScroll.resize(this.opener.isOpen);\n\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\n      this.mouseDetected();\n    }\n\n    this.dispatch('resize');\n  }\n  /**\r\n   * @param {number} opacity\r\n   */\n\n\n  applyBgOpacity(opacity) {\n    this.bgOpacity = Math.max(opacity, 0);\n\n    if (this.bg) {\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\n    }\n  }\n  /**\r\n   * Whether mouse is detected\r\n   */\n\n\n  mouseDetected() {\n    if (!this.hasMouse) {\n      var _this$element2;\n\n      this.hasMouse = true;\n      (_this$element2 = this.element) === null || _this$element2 === void 0 || _this$element2.classList.add('pswp--has_mouse');\n    }\n  }\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\n\n\n  _handlePageResize() {\n    this.updateSize(); // In iOS webview, if element size depends on document size,\n    // it'll be measured incorrectly in resize event\n    //\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\n\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\n      setTimeout(() => {\n        this.updateSize();\n      }, 500);\n    }\n  }\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\n\n\n  _updatePageScrollOffset() {\n    this.setScrollOffset(0, window.pageYOffset);\n  }\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\n\n\n  setScrollOffset(x, y) {\n    this.offset.x = x;\n    this.offset.y = y;\n    this.dispatch('updateScrollOffset');\n  }\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\n\n\n  _createMainStructure() {\n    // root DOM element of PhotoSwipe (.pswp)\n    this.element = createElement('pswp', 'div');\n    this.element.setAttribute('tabindex', '-1');\n    this.element.setAttribute('role', 'dialog'); // template is legacy prop\n\n    this.template = this.element; // Background is added as a separate element,\n    // as animating opacity is faster than animating rgba()\n\n    this.bg = createElement('pswp__bg', 'div', this.element);\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\n    this.container = createElement('pswp__container', 'div', this.scrollWrap); // aria pattern: carousel\n\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\n    this.container.setAttribute('aria-live', 'off');\n    this.container.setAttribute('id', 'pswp__items');\n    this.mainScroll.appendHolders();\n    this.ui = new UI(this);\n    this.ui.init(); // append to DOM\n\n    (this.options.appendToEl || document.body).appendChild(this.element);\n  }\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\n\n\n  getThumbBounds() {\n    return getThumbBounds(this.currIndex, this.currSlide ? this.currSlide.data : this._initialItemData, this);\n  }\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\n\n\n  canLoop() {\n    return this.options.loop && this.getNumItems() > 2;\n  }\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\n\n\n  _prepareOptions(options) {\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\n      options.showHideAnimationType = 'none';\n      options.zoomAnimationDuration = 0;\n    }\n    /** @type {PreparedPhotoSwipeOptions} */\n\n\n    return { ...defaultOptions,\n      ...options\n    };\n  }\n\n}\n\nexport { PhotoSwipe as default };\n//# sourceMappingURL=photoswipe.esm.js.map\n","import type { \n  GlideInstance, \n  GlideOptions, \n  ImageData, \n  CarouselInstanceData, \n  ICarouselManager \n} from '../types';\n\n/**\n * Configuration for PhotoSwipe image carousels\n */\nexport function getImageGlideConfig(imageCount: number): GlideOptions {\n  const isMobile = window.innerWidth < 768;\n  const isTablet = window.innerWidth < 1024;\n  \n  // Determine if we have enough images for carousel mode\n  const requiredImages = isMobile ? 2 : 3;\n  const enableLoop = imageCount >= requiredImages;\n\n  // Base configuration optimized for image viewing\n  const config: GlideOptions = {\n    type: enableLoop ? 'carousel' : 'slider',\n    perView: isMobile ? 1 : isTablet ? 2 : 3,\n    focusAt: 0,\n    startAt: 0,\n    gap: isMobile ? 15 : 20,\n    autoplay: false, // Disabled by default for image viewing\n    hoverpause: true,\n    keyboard: true,\n    bound: !enableLoop,\n    rewind: !enableLoop,\n    rewindDuration: 800,\n    animationDuration: 600,\n\n    breakpoints: {\n      1440: { perView: 3, gap: 25 },\n      1024: { perView: 2, gap: 20 },\n      768: { perView: 2, gap: 15 },\n      640: { perView: 1, gap: 15 },\n      480: { perView: 1, gap: 10 },\n      320: { perView: 1, gap: 10 }\n    }\n  };\n\n  return config;\n}\n\n/**\n * Configuration for single post image galleries\n */\nexport function getPostGalleryConfig(imageCount: number): GlideOptions {\n  const config = getImageGlideConfig(imageCount);\n  \n  // Enable autoplay for post galleries if there are enough images\n  if (imageCount >= 3) {\n    config.autoplay = 8000; // 8 seconds per slide\n    config.hoverpause = true;\n  }\n\n  return config;\n}\n\n/**\n * Extract image data from PhotoSwipe anchors\n */\nexport function extractImagesFromPost(postElement: HTMLElement | null): ImageData[] {\n  const images: ImageData[] = [];\n  \n  if (!postElement) {\n    console.log('[GlideConfig] No post element provided');\n    return images;\n  }\n  \n  const anchors = postElement.querySelectorAll('a[data-pswp]');\n  console.log('[GlideConfig] Found', anchors.length, 'anchors with data-pswp');\n\n  anchors.forEach((anchor, index) => {\n    const img = anchor.querySelector('img');\n    if (img && anchor instanceof HTMLAnchorElement) {\n      const imageData: ImageData = {\n        id: `img-${Date.now()}-${index}`,\n        src: img.src,\n        href: anchor.href,\n        width: parseInt(anchor.getAttribute('data-pswp-width') || '0', 10) || undefined,\n        height: parseInt(anchor.getAttribute('data-pswp-height') || '0', 10) || undefined,\n        alt: img.alt || `Image ${index + 1}`,\n        title: img.title || anchor.title || undefined\n      };\n      images.push(imageData);\n      console.log('[GlideConfig] Extracted image', index + 1, ':', imageData.src);\n    }\n  });\n\n  console.log('[GlideConfig] Total images extracted:', images.length);\n  return images;\n}\n\n/**\n * Find container element using multiple selector strategies\n */\nexport function findContainer(selectors: string[]): HTMLElement | null {\n  for (const selector of selectors) {\n    const element = document.querySelector(selector) as HTMLElement;\n    if (element) {\n      return element;\n    }\n  }\n  return null;\n}\n\n/**\n * Safe Glide destruction with error handling\n */\nexport function destroyGlide(glide: GlideInstance | null, containerSelector?: string): void {\n  if (glide && typeof glide.destroy === 'function') {\n    try {\n      glide.destroy();\n\n      if (containerSelector) {\n        const container = document.querySelector(containerSelector) as any;\n        if (container) {\n          container.glideInstance = null;\n        }\n      }\n    } catch (error) {\n      console.error('Error destroying Glide:', error);\n    }\n  }\n}\n\n/**\n * Initialize Glide with error handling and dynamic import\n */\nexport async function initializeGlide(\n  container: HTMLElement,\n  config: GlideOptions,\n  componentName: string = 'PhotoSwipeGlide'\n): Promise<GlideInstance | null> {\n  try {\n    const { default: Glide } = await import('@glidejs/glide');\n\n    if (!Glide) {\n      throw new Error(`${componentName}: Glide class not found`);\n    }\n\n    const glide = new Glide(container, config);\n\n    glide.on('mount.after', () => {\n      console.log(`${componentName} Glide initialized with ${config.perView} slides per view`);\n    });\n\n    glide.on('destroy', () => {\n      console.log(`${componentName} Glide destroyed`);\n    });\n\n    const instance = glide.mount() as GlideInstance;\n    (container as any).glideInstance = instance;\n\n    return instance;\n  } catch (error) {\n    console.error(`Failed to initialize ${componentName}:`, error);\n    return null;\n  }\n}\n\n/**\n * Generate unique instance ID for carousel management\n */\nexport function generateInstanceId(postId?: string): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substr(2, 9);\n  const prefix = postId ? `post-${postId}` : 'gallery';\n  return `${prefix}-${timestamp}-${random}`;\n}\n\n/**\n * Carousel Manager for handling multiple Glide instances\n */\nclass CarouselManager implements ICarouselManager {\n  private instances: Map<string, CarouselInstanceData> = new Map();\n\n  register(\n    instanceId: string, \n    glideInstance: GlideInstance, \n    config: GlideOptions,\n    postId?: string\n  ): void {\n    this.instances.set(instanceId, {\n      glide: glideInstance,\n      config,\n      type: config.type || 'carousel',\n      postId\n    });\n  }\n\n  unregister(instanceId: string): void {\n    const instance = this.instances.get(instanceId);\n    if (instance) {\n      try {\n        if (instance.glide && typeof instance.glide.destroy === 'function') {\n          instance.glide.destroy();\n        }\n      } catch (error) {\n        console.error('Error destroying Glide instance during unregister:', error);\n      } finally {\n        this.instances.delete(instanceId);\n      }\n    }\n  }\n\n  pauseOthers(activeId: string): void {\n    this.instances.forEach((instance, id) => {\n      if (id !== activeId && instance.config.autoplay) {\n        try {\n          instance.glide.pause();\n        } catch (error) {\n          console.error(`Error pausing Glide instance ${id}:`, error);\n        }\n      }\n    });\n  }\n\n  cleanupAll(): void {\n    this.instances.forEach((instance, id) => {\n      try {\n        instance.glide.destroy();\n      } catch (error) {\n        console.error(`Error cleaning up Glide instance ${id}:`, error);\n      }\n    });\n    this.instances.clear();\n  }\n\n  getInstanceCount(): number {\n    return this.instances.size;\n  }\n\n  getInstancesByPost(postId: string): CarouselInstanceData[] {\n    const postInstances: CarouselInstanceData[] = [];\n    this.instances.forEach((instance) => {\n      if (instance.postId === postId) {\n        postInstances.push(instance);\n      }\n    });\n    return postInstances;\n  }\n}\n\nexport const carouselManager = new CarouselManager();","import Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\nimport type {\n  GlideInstance,\n  ImageData,\n  GlideState,\n  ErrorState\n} from '../types';\nimport {\n  getPostGalleryConfig,\n  extractImagesFromPost,\n  initializeGlide,\n  destroyGlide,\n  generateInstanceId,\n  carouselManager\n} from '../utils/GlideConfig';\n\nexport interface PhotoSwipeGlideAttrs {\n  postElement?: HTMLElement;\n  postId: string;\n  discussionId?: string;\n  enableAutoplay?: boolean;\n}\n\n/**\n * PhotoSwipeGlideComponent - Mithril component for image carousel\n * Integrates Glide.js carousel with existing PhotoSwipe functionality\n */\nexport default class PhotoSwipeGlideComponent extends Component<PhotoSwipeGlideAttrs> {\n  private glideInstance: GlideInstance | null = null;\n  private state: GlideState;\n  private error: ErrorState = { hasError: false };\n  private containerElement: HTMLElement | null = null;\n\n  oninit(vnode: Mithril.Vnode<PhotoSwipeGlideAttrs>) {\n    super.oninit(vnode);\n    \n    console.log('[GlideComponent] oninit called for post:', vnode.attrs.postId);\n\n    this.state = {\n      isInitialized: false,\n      isDestroying: false,\n      instanceId: generateInstanceId(vnode.attrs.postId),\n      images: [],\n      currentIndex: 0\n    };\n\n    // Images will be extracted in oncreate when DOM is available\n  }\n\n  view(_vnode: Mithril.Vnode<PhotoSwipeGlideAttrs>): Mithril.Children {\n    console.log('[GlideComponent] view called, images:', this.state.images?.length, 'error:', this.error.hasError);\n    \n    if (this.error.hasError) {\n      return this.renderError();\n    }\n\n    if (!this.state.images || this.state.images.length === 0) {\n      console.log('[GlideComponent] No images found, not rendering carousel');\n      return null;\n    }\n\n    // Don't show carousel for single image\n    if (this.state.images.length === 1) {\n      console.log('[GlideComponent] Only 1 image, not showing carousel');\n      return null;\n    }\n    \n    console.log('[GlideComponent] Rendering carousel with', this.state.images.length, 'images');\n\n    return (\n      <div className=\"photoswipe-glide-wrapper\">\n        <div className=\"photoswipe-glide-header\">\n          <h4>Gallery ({this.state.images.length} images)</h4>\n          <div className=\"glide-counter\">\n            <span className=\"current\">{this.state.currentIndex + 1}</span> /\n            <span className=\"total\">{this.state.images.length}</span>\n          </div>\n        </div>\n        <div\n          className=\"glide photoswipe-glide\"\n          id={`photoswipe-glide-${this.state.instanceId}`}\n        >\n          <div className=\"glide__track\" data-glide-el=\"track\">\n            <ul className=\"glide__slides\">\n              {this.state.images.map((image, index) => this.renderSlide(image, index))}\n            </ul>\n          </div>\n          <div className=\"glide__arrows\" data-glide-el=\"controls\">\n            <button\n              className=\"glide__arrow glide__arrow--left\"\n              data-glide-dir=\"<\"\n              aria-label=\"Previous image\"\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\n              </svg>\n            </button>\n            <button\n              className=\"glide__arrow glide__arrow--right\"\n              data-glide-dir=\">\"\n              aria-label=\"Next image\"\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\n                <path d=\"M8.59 16.59L10 18l6-6-6-6-1.41 1.41L13.17 12z\"/>\n              </svg>\n            </button>\n          </div>\n          <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\n            {this.state.images.map((_, index) => (\n              <button\n                className={`glide__bullet ${index === this.state.currentIndex ? 'glide__bullet--active' : ''}`}\n                data-glide-dir={`=${index}`}\n                aria-label={`Go to image ${index + 1}`}\n              ></button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode: Mithril.VnodeDOM<PhotoSwipeGlideAttrs>) {\n    super.oncreate(vnode);\n    \n    console.log('[GlideComponent] oncreate called for post:', vnode.attrs.postId);\n\n    // Find the post element and extract images using multiple strategies\n    let postElement = vnode.attrs.postElement;\n    \n    if (!postElement) {\n      // Try different selectors to find the post element\n      const selectors = [\n        `[data-id=\"${vnode.attrs.postId}\"] .Post-body`,\n        `[data-id=\"${vnode.attrs.postId}\"]`,\n        `.PostStream-item[data-id=\"${vnode.attrs.postId}\"] .Post-body`,\n        `.PostStream-item[data-id=\"${vnode.attrs.postId}\"]`\n      ];\n      \n      for (const selector of selectors) {\n        postElement = document.querySelector(selector) as HTMLElement;\n        if (postElement) {\n          console.log('[GlideComponent] Found post element with selector:', selector);\n          break;\n        }\n      }\n    }\n    \n    console.log('[GlideComponent] Found post element:', !!postElement);\n\n    if (postElement) {\n      this.state.images = extractImagesFromPost(postElement as HTMLElement);\n      console.log('[GlideComponent] Extracted images:', this.state.images.length);\n\n      // Only initialize if we have 2+ images\n      if (this.state.images.length >= 2) {\n        console.log('[GlideComponent] Initializing carousel for', this.state.images.length, 'images');\n        \n        // Re-render with images data\n        m.redraw();\n\n        // Initialize Glide after DOM is ready\n        requestAnimationFrame(() => {\n          this.initGlide(vnode.attrs);\n        });\n      } else {\n        console.log('[GlideComponent] Not enough images for carousel:', this.state.images.length);\n      }\n    } else {\n      console.log('[GlideComponent] Post element not found for postId:', vnode.attrs.postId);\n    }\n  }\n\n  onupdate(vnode: Mithril.VnodeDOM<PhotoSwipeGlideAttrs>) {\n    super.onupdate(vnode);\n\n    // Check if images have changed\n    const newImages = extractImagesFromPost(vnode.attrs.postElement);\n    if (this.shouldUpdateGlide(this.state.images, newImages)) {\n      this.state.images = newImages;\n      if (this.glideInstance && this.state.isInitialized) {\n        try {\n          this.glideInstance.update();\n        } catch (error) {\n          console.error('Error updating Glide:', error);\n          this.reinitializeGlide(vnode.attrs);\n        }\n      }\n    }\n  }\n\n  onbeforeremove(vnode: Mithril.VnodeDOM<PhotoSwipeGlideAttrs>) {\n    super.onbeforeremove(vnode);\n    this.state.isDestroying = true;\n    this.destroyGlide();\n  }\n\n  onremove(vnode: Mithril.VnodeDOM<PhotoSwipeGlideAttrs>) {\n    super.onremove(vnode);\n    if (!this.state.isDestroying) {\n      this.destroyGlide();\n    }\n  }\n\n  private renderSlide(image: ImageData, index: number): Mithril.Children {\n    return (\n      <li\n        key={`slide-${image.id}`}\n        className=\"glide__slide photoswipe-glide-slide\"\n        data-slide-index={index}\n      >\n        <div className=\"slide-container\">\n          <a\n            href={image.href}\n            data-pswp=\"\"\n            data-pswp-width={image.width}\n            data-pswp-height={image.height}\n            title={image.title}\n            className=\"slide-link\"\n          >\n            <img\n              src={image.src}\n              alt={image.alt}\n              className=\"slide-image\"\n              loading=\"lazy\"\n            />\n          </a>\n          {image.title && (\n            <div className=\"slide-caption\">{image.title}</div>\n          )}\n        </div>\n      </li>\n    );\n  }\n\n  private renderError(): Mithril.Children {\n    return (\n      <div className=\"photoswipe-glide-error\">\n        <p>Error loading image gallery: {this.error.message}</p>\n        <button onclick={() => this.retryInitialization()}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  private async initGlide(attrs: PhotoSwipeGlideAttrs): Promise<void> {\n    if (this.state.isInitialized || this.state.images.length < 2) {\n      return;\n    }\n\n    try {\n      this.containerElement = document.querySelector(`#photoswipe-glide-${this.state.instanceId}`);\n\n      if (!this.containerElement) {\n        throw new Error('Glide container not found');\n      }\n\n      const config = getPostGalleryConfig(this.state.images.length);\n\n      // Override autoplay if specified\n      if (attrs.enableAutoplay !== undefined) {\n        config.autoplay = attrs.enableAutoplay ? 8000 : false;\n      }\n\n      console.log(`🎢 PhotoSwipe Glide Configuration:`, JSON.stringify(config, null, 2));\n\n      this.glideInstance = await initializeGlide(\n        this.containerElement,\n        config,\n        'PhotoSwipeGlide'\n      );\n\n      if (this.glideInstance) {\n        // Register with carousel manager\n        carouselManager.register(\n          this.state.instanceId,\n          this.glideInstance,\n          config,\n          attrs.postId\n        );\n\n        // Set up event handlers\n        this.setupEventHandlers();\n\n        this.state.isInitialized = true;\n        this.error = { hasError: false };\n      }\n    } catch (error) {\n      console.error('Failed to initialize PhotoSwipe Glide:', error);\n      this.error = {\n        hasError: true,\n        message: error instanceof Error ? error.message : 'Unknown error',\n        component: 'PhotoSwipeGlideComponent'\n      };\n    }\n  }\n\n  private setupEventHandlers(): void {\n    if (!this.glideInstance) return;\n\n    this.glideInstance.on('mount.after', () => {\n      console.log(`PhotoSwipe Glide mounted: ${this.state.images.length} images`);\n    });\n\n    this.glideInstance.on('move.start', () => {\n      carouselManager.pauseOthers(this.state.instanceId);\n    });\n\n    this.glideInstance.on('move.after', () => {\n      // Update current index - Glide doesn't provide direct access to index\n      // We'll need to calculate it from the transform or use a different approach\n      this.updateCurrentIndex();\n    });\n\n    this.glideInstance.on('destroy', () => {\n      carouselManager.unregister(this.state.instanceId);\n      this.state.isInitialized = false;\n    });\n  }\n\n  private updateCurrentIndex(): void {\n    if (!this.containerElement) return;\n\n    try {\n      const activeSlide = this.containerElement.querySelector('.glide__slide--active');\n      if (activeSlide) {\n        const index = parseInt(activeSlide.getAttribute('data-slide-index') || '0', 10);\n        if (index !== this.state.currentIndex) {\n          this.state.currentIndex = index;\n          // Trigger re-render to update the counter\n          m.redraw();\n        }\n      }\n    } catch (error) {\n      console.error('Error updating current index:', error);\n    }\n  }\n\n  private destroyGlide(): void {\n    if (!this.glideInstance || this.state.isDestroying) {\n      return;\n    }\n\n    this.state.isDestroying = true;\n\n    try {\n      destroyGlide(this.glideInstance, `#photoswipe-glide-${this.state.instanceId}`);\n      carouselManager.unregister(this.state.instanceId);\n    } catch (error) {\n      console.error('Error destroying PhotoSwipe Glide:', error);\n    } finally {\n      this.glideInstance = null;\n      this.state.isInitialized = false;\n      this.containerElement = null;\n    }\n  }\n\n  private shouldUpdateGlide(oldImages: ImageData[], newImages: ImageData[]): boolean {\n    if (!oldImages || !newImages) return true;\n    if (oldImages.length !== newImages.length) return true;\n\n    return oldImages.some((oldImage, index) => {\n      const newImage = newImages[index];\n      return oldImage?.src !== newImage?.src ||\n            oldImage?.href !== newImage?.href;\n    });\n  }\n\n  private async reinitializeGlide(attrs: PhotoSwipeGlideAttrs): Promise<void> {\n    this.destroyGlide();\n    this.state.isDestroying = false;\n    this.state.isInitialized = false;\n\n    // Wait a bit before reinitializing\n    setTimeout(() => {\n      this.initGlide(attrs);\n    }, 100);\n  }\n\n  private retryInitialization(): void {\n    this.error = { hasError: false };\n    this.reinitializeGlide(this.attrs);\n  }\n\n  /**\n   * Static method to check if component should be displayed\n   */\n  static shouldDisplay(postElement: HTMLElement): boolean {\n    const images = extractImagesFromPost(postElement);\n    return images.length >= 2; // Only show for 2+ images\n  }\n\n  /**\n   * Static method to check if component should be displayed by post ID\n   */\n  static shouldDisplayByPostId(postId: string): boolean {\n    const postElement = document.querySelector(`[data-id=\"${postId}\"] .Post-body`);\n    if (!postElement) return false;\n    return PhotoSwipeGlideComponent.shouldDisplay(postElement as HTMLElement);\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\nimport pswpModule from 'photoswipe';\nimport PhotoSwipeGlideComponent from './components/PhotoSwipeGlideComponent';\nimport { carouselManager } from './utils/GlideConfig';\nimport m from 'mithril';\n\napp.initializers.add('sycho-photoswipe', () => {\n  console.log('[PhotoSwipe] Extension initializing...');\n  \n  let components: any[] = [CommentPost.prototype];\n\n  if ('ianm-synopsis' in flarum.extensions) {\n    components.push(DiscussionListItem.prototype);\n    console.log('[PhotoSwipe] Found ianm-synopsis extension');\n  }\n\n  const hasGalleryExtension = 'datitisev-post-galleries' in flarum.extensions;\n  console.log('[PhotoSwipe] Gallery extension detected:', hasGalleryExtension);\n\n  components.forEach((prototype) => {\n    extend(prototype, 'oninit', function (this: any) {\n      const dataId = this.attrs.post?.id() || this.attrs.discussion?.id();\n      console.log('[PhotoSwipe] Component oninit, dataId:', dataId);\n      const selectors = [];\n\n      // The browser might not support :has yet.\n      try {\n        // A Photoswiper instance for images per post, per excerpt, and per article.\n        const selector = `[data-id=\"${dataId}\"] .Post-body:not(:has(.swiper)), [data-id=\"${dataId}\"] .item-excerpt:not(:has(.swiper)), .FlarumBlog-Article .Post-body:not(:has(.swiper))`;\n        document.querySelectorAll(selector);\n        selectors.push(selector);\n\n        if (hasGalleryExtension) {\n          const singleImagesOutsideGalleries = ':not(:has(.swiper)):not([class^=\"swiper\"]):has(>a[data-pswp])';\n\n          selectors.push(\n            `[data-id=\"${dataId}\"] .Post-body ${singleImagesOutsideGalleries}, [data-id=\"${dataId}\"] .item-excerpt ${singleImagesOutsideGalleries}, .FlarumBlog-Article .Post-body ${singleImagesOutsideGalleries}`\n          );\n        }\n      } catch {\n        if (!hasGalleryExtension) {\n          selectors.push(\n            // A Photoswiper instance for images per post, per excerpt, and per article.\n            `[data-id=\"${dataId}\"] .Post-body, [data-id=\"${dataId}\"] .item-excerpt, .FlarumBlog-Article .Post-body`\n          );\n        }\n      }\n\n      // A Photoswiper instance for images per gallery (per post, per excerpt, and per article).\n      if (hasGalleryExtension) {\n        selectors.push(\n          `[data-id=\"${dataId}\"] .Post-body .swiper, [data-id=\"${dataId}\"] .item-excerpt .swiper, .FlarumBlog-Article .Post-body .swiper`\n        );\n      }\n\n      const gallerySelector = selectors.join(', ');\n      console.log('[PhotoSwipe] Creating lightbox with gallery selector:', gallerySelector);\n      \n      this.lightbox = new PhotoSwipeLightbox({\n        gallery: gallerySelector,\n        children: 'a[data-pswp]',\n        pswpModule,\n      });\n\n      // Initialize Glide component for posts with multiple images\n      this.glideComponent = null;\n      \n      // Initialize Glide component properties immediately\n      this.initializeGlideComponent();\n    });\n\n    extend(prototype, ['onupdate', 'oncreate'], function () {\n      console.log('[PhotoSwipe] oncreate/onupdate triggered');\n\n      // @ts-ignore\n      const $images = this.$('a[data-pswp] > img');\n      console.log('[PhotoSwipe] Found images:', $images.length);\n      \n      $images.each((index, el: HTMLImageElement) => {\n        const $el = $(el);\n        const $a = $el.parent('a');\n        const setDimensions = () => {\n          $a.attr('data-pswp-width', el.naturalWidth);\n          $a.attr('data-pswp-height', el.naturalHeight);\n        };\n\n        if (el.complete && el.naturalWidth) {\n          setDimensions();\n          console.log('[PhotoSwipe] Image loaded, initializing lightbox for image:', index);\n          this.lightbox.init();\n        } else {\n          el.onload = () => {\n            setDimensions();\n            console.log('[PhotoSwipe] Image onload, initializing lightbox for image:', index);\n            this.lightbox.init();\n\n            if (this.lightbox.pswp) this.lightbox.pswp.refreshSlideContent(index);\n          };\n        }\n      });\n\n      // Timeout to make sure galleries were initialized\n      setTimeout(() => {\n        if (this.galleries) {\n          this.lightbox.on('change', () => {\n            // Match the swiper current slide with the photoswipe current slide.\n            const gallery = this.galleries.find((swiper: any) => this.lightbox.options.dataSource.gallery === swiper.$el[0]);\n            gallery?.slideTo(this.lightbox.pswp.currIndex, 0, false);\n\n            this.galleries\n              .filter((swiper: any) => this.lightbox.options.dataSource.gallery !== swiper.$el[0])\n              .map((swiper: any) => {\n                swiper.tmpCurrIndex = swiper.currIndex;\n                swiper.slideTo(this.lightbox.pswp.currIndex, 0, false);\n                return swiper;\n              })\n              .forEach((swiper: any) => swiper.slideTo(swiper.tmpCurrIndex, 0, false));\n          });\n        }\n      }, 100);\n    });\n\n    extend(prototype, 'onremove', function () {\n      // Clean up Glide component\n      if (this.glideComponent) {\n        this.glideComponent = null;\n      }\n\n      this.lightbox.destroy();\n      this.lightbox = null;\n    });\n\n    // Add helper methods to prototype\n    prototype.initializeGlideComponent = function() {\n      if (!this.attrs?.post) {\n        console.log('[Glide] No post attrs found');\n        return;\n      }\n      \n      const postId = this.attrs.post.id();\n      if (!postId) {\n        console.log('[Glide] No post ID found');\n        return;\n      }\n\n      // Store reference for use in contentItems\n      this.glidePostId = postId.toString();\n      this.glideDiscussionId = this.attrs.post?.discussion?.()?.id?.()?.toString();\n      console.log('[Glide] Component initialized for post:', this.glidePostId);\n    };\n\n    // Extend contentItems to add Glide carousel using Flarum's ItemList pattern\n    extend(prototype, 'contentItems', function (items) {\n      console.log('[Glide] contentItems called, attrs:', this.attrs?.post?.id(), 'glidePostId:', this.glidePostId);\n      \n      // Only add Glide component for CommentPost (posts with actual content)\n      if (this.attrs?.post && this.glidePostId) {\n        const postId = this.glidePostId;\n        \n        console.log('[Glide] Adding Glide component for post:', postId);\n        \n        // Always add the component - it will handle its own visibility logic\n        items.add(\n          'photoswipe-glide',\n          m(PhotoSwipeGlideComponent, {\n            postId: postId,\n            discussionId: this.glideDiscussionId,\n            enableAutoplay: false // Default: no autoplay for better UX\n          }),\n          -10 // Lower priority to render after main content\n        );\n      } else {\n        console.log('[Glide] Not adding component - post attrs or glidePostId missing');\n      }\n    });\n  });\n\n  // Global cleanup handler for navigation\n  extend(app, 'mount', function () {\n    // Clean up all carousel instances on navigation\n    carouselManager.cleanupAll();\n  });\n});\n","/*!\n * Glide.js v3.7.1\n * (c) 2013-2024 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n    var properties = ['direction', 'type', 'slide', 'arrow', 'nav'];\n    properties.forEach(function (property) {\n      if (settings.classes.hasOwnProperty(property)) {\n        options.classes[property] = _objectSpread2(_objectSpread2({}, defaults.classes[property]), settings.classes[property]);\n      }\n    });\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout, context, args, result;\n  var previous = 0;\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (r !== null) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      Html._t = t;\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length > 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (disabled) {\n        return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      item.classList.add(settings.classes.nav.active);\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.nav.active);\n      });\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n      item === null || item === void 0 ? void 0 : item.classList.remove(Glide.settings.classes.nav.active);\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n      var arrowSymbols = {\n        ArrowRight: '>',\n        ArrowLeft: '<'\n      };\n\n      if (['ArrowRight', 'ArrowLeft'].includes(event.code)) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe).concat(arrowSymbols[event.code])));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n"],"names":["createElement","className","tagName","appendToEl","el","toTransformString","x","y","scale","propValue","setWidthHeight","w","h","LOAD_STATE","specialKeyUsed","e","getElementsFromOption","option","legacySelector","parent","elements","selector","isPswpClass","fn","isSafari","PhotoSwipeEvent$1","type","details","Eventable$1","name","priority","_this$_filters$name","_this$_filters$name2","_this$pswp","f1","f2","filter","args","_this$_filters$name3","_this$_listeners$name","_this$pswp2","_this$pswp3","listener","_this$_listeners$name2","event","PhotoSwipeEvent","Placeholder$1","imageSrc","container","imgEl","width","height","_this$element","Content$1","itemData","instance","index","isLazy","reload","placeholderEl","placeholderSrc","Placeholder","_this$data$src","_this$data$alt","imageElement","slide","isInitialSizeUpdate","image","sizesWidth","_this$instance$option","_this$instance$option2","errorMsgEl","supportsDecode","getViewportSize","options","pswp","newViewportSize","parsePaddingOption","prop","viewportSize","paddingValue","legacyPropName","getPanAreaSize","MAX_IMAGE_WIDTH","ZoomLevel$1","maxWidth","maxHeight","panAreaSize","elementSize","hRatio","vRatio","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","content","zoomLevel","ZoomLevel","lazyLoadSlide","Eventable","_this$options","numItems","dataSource","slideData","Content","_this$options2","dataSourceItem","galleryElement","_this$options3","_this$options4","element","linkEl","thumbnailEl","_thumbnailEl$getAttri","PhotoSwipeLightbox","PhotoSwipeBase","initialPoint","clickedIndex","clickedTarget","clickedChildIndex","child","galleryElements","promiseArray","pswpModuleType","uid","iterableModules","mainModule","module","equalizePoints","p1","p2","roundPoint","p","getDistanceBetween","pointsEqual","clamp","val","min","max","setTransform","defaultCSSEasing","setTransitionStyle","duration","ease","removeTransitionStyle","decodeImage","img","resolve","reject","supportsPassive","DOMEvents","target","passive","poolItem","unbind","skipPool","methodName","eType","eventOptions","PanBounds","axis","elSize","padding","panOffset","Slide","data","isActive","holderElement","force","scaleMultiplier","_this$content$placeho","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","prevZoomLevel","finishTransition","point","zoomFactor","panX","panY","zoom","newResolution","PAN_END_FRICTION","VERTICAL_DRAG_FRICTION","MIN_RATIO_TO_CLOSE","MIN_NEXT_SLIDE_SPEED","project","initialVelocity","decelerationRate","DragHandler","gestures","prevP1","dragAxis","currSlide","bgOpacity","velocity","mainScroll","indexDiff","currentSlideVisibilityRatio","pan","bounds","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","pos","animationProgressRatio","isMultitouch","delta","newMainScrollX","newPan","currSlideMainScrollX","mainScrollShiftDiff","isLeftToRight","isRightToLeft","_this$pswp$currSlide$","_this$pswp$currSlide","potentialPan","customFriction","UPPER_ZOOM_FRICTION","LOWER_ZOOM_FRICTION","getZoomPointsCenter","ZoomHandler","startP1","startP2","minZoomLevel","maxZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","now","newZoomLevel","didTapOnMainContent","TapHandler","originalEvent","targetClassList","isImageClick","isBackgroundClick","actionName","_this$gestures$pswp$e","actionFullName","AXIS_SWIPE_HYSTERISIS","DOUBLE_TAP_DELAY","MIN_TAP_DISTANCE","Gestures","pref","down","up","cancel","events","cancelEvent","isMousePointer","time","tapDelay","displacement","pointerType","pointerEvent","pointerIndex","ongoingPointer","touchEvent","diff","axisToCheck","MAIN_SCROLL_END_FRICTION","MainScroll","resizeSlides","newSlideWidth","slideWidthChanged","itemHolder","i","animate","velocityX","newIndex","numSlides","distance","destinationX","currDiff","currDistance","_this$itemHolders$","positionDifference","diffAbs","tempHolder","_itemHolder$slide","dragging","newSlideIndexOffset","KeyboardKeyCodesMap","getKeyboardEventKey","key","isKeySupported","Keyboard$1","lastActiveElement","keydownAction","isForward","template","DEFAULT_EASING","CSSAnimation","props","_props$prop","onComplete","transform","onFinish","easing","DEFAULT_NATURAL_FREQUENCY","DEFAULT_DAMPING_RATIO","SpringEaser","naturalFrequency","deltaPosition","deltaTime","coeff","naturalDumpingPow","dumpedFCos","dumpedFSin","SpringAnimation","start","end","onUpdate","easer","prevTime","animationLoop","Animations","isSpring","animation","ScrollWheel","deltaX","deltaY","addElementHTML","htmlData","svgData","out","UIElement","_container","elementHTML","title","ariaLabel","ariaText","appendTo","initArrowButton","isNextButton","arrowPrev","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","toggleIndicatorClass","add","setIndicatorVisibility","visible","updatePreloaderVisibility","_pswp$currSlide","_pswp$currSlide2","counterIndicator","counterElement","setZoomedIn","isZoomedIn","UI","a","b","uiElementData","_pswp$element","elementData","currZoomLevelDiff","potentialZoomLevel","getBoundsByElement","thumbAreaRect","getCroppedBoundsByElement","imageWidth","imageHeight","fillZoomLevel","offsetX","offsetY","getThumbBounds","thumbBounds","thumbnail","thumbSelector","MIN_SLIDES_TO_CACHE","ContentLoader","preload","initialIndex","indexToRemove","item","MIN_OPACITY","Opener","_options$showHideOpac","decoded","isDelaying","_this$pswp$element","_this$pswp$element2","innerRect","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animations","animProps","defaultOptions","PhotoSwipe","Keyboard","rootClasses","itemHolders","_this$currSlide","_this$currSlide2","_itemHolder$slide2","slideIndex","_this$currSlide$index","_this$currSlide3","potentialHolderIndex","_itemHolder$slide3","holder","opacity","_this$element2","getImageGlideConfig","imageCount","isMobile","isTablet","enableLoop","getPostGalleryConfig","config","extractImagesFromPost","postElement","images","anchors","anchor","imageData","destroyGlide","glide","containerSelector","error","initializeGlide","componentName","Glide","__vitePreload","glide_esm","generateInstanceId","postId","timestamp","random","CarouselManager","instanceId","glideInstance","activeId","id","postInstances","carouselManager","PhotoSwipeGlideComponent","Component","vnode","_vnode","_","selectors","newImages","attrs","activeSlide","oldImages","oldImage","newImage","app","components","CommentPost","DiscussionListItem","hasGalleryExtension","prototype","extend","dataId","singleImagesOutsideGalleries","gallerySelector","pswpModule","$images","$a","setDimensions","swiper","items","m","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","source","_defineProperty","_typeof","obj","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","value","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","_isNativeReflectConstruct","_assertThisInitialized","self","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","_superPropBase","property","_get","receiver","base","desc","defaults","warn","msg","toInt","toFloat","isString","isObject","isFunction","isUndefined","isArray","mount","extensions","_name","define","definition","sortKeys","r","k","mergeOptions","settings","properties","EventsBus","handler","context","Glide$1","transformers","pattern","interval","status","Run","Components","Events","move","_this","length","steps","direction","viewSize","calculateForwardIndex","normalizeForwardIndex","_index","calculateBackwardIndex","normalizeBackwardIndex","view","step","throttle","func","wait","timeout","previous","later","throttled","at","remaining","MARGIN_TYPE","Gaps","slides","len","style","perView","siblings","node","n","matched","toArray","nodeList","TRACK_SELECTOR","Html","t","Peek","Move","offset","translate","Sizes","Build","classes","sibling","_Glide$settings$class","Clones","_Glide$settings","cloningRatio","peekIncrementer","cloneCount","append","prepend","clone","_i","_clone","_Components$Html","wrapper","half","_i2","_i3","EventsBinder","listeners","closure","capture","Resize","Binder","VALID_DIRECTIONS","FLIPED_MOVEMENTS","Direction","token","Rtl","Gap","multiplier","Grow","Peeking","peek","Focusing","gap","focusAt","slideWidth","mutator","TRANSFORMERS","transformer","Translate","translate3d","travelDistance","startWidth","Transition","disabled","callback","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","swipe","touchAngle","touchRatio","subExSx","subEySy","powEX","powEY","swipeHypotenuse","swipeCathetus","_Glide$settings2","perSwipe","threshold","swipeDistance","swipeDeg","_Glide$settings3","swipeThreshold","dragThreshold","_this2","_this3","Images","Anchors","detached","prevented","NAV_SELECTOR","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","Controls","controls","next","_len","lists","_key","list","_len2","_key2","arrowSymbols","Autoplay","autoplay","sortBreakpoints","points","Breakpoints","COMPONENTS","_Core","_super"],"mappings":"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","x_google_ignoreList":[0,1,5]}