{"version":3,"file":"forum.js","sources":["../src/forum/services/ImageExtractor.ts","../src/forum/services/CarouselManager.ts","../src/forum/utils/CarouselConfigurationProvider.ts","../src/forum/components/ImageCarousel.tsx","../src/forum/index.ts","../node_modules/.pnpm/@glidejs+glide@3.7.1/node_modules/@glidejs/glide/dist/glide.esm.js"],"sourcesContent":["/**\r\n * ImageExtractor Service\r\n * \r\n * Handles extraction of images from forum posts with proper timing coordination\r\n * between PhotoSwipe processing and carousel initialization.\r\n */\r\n\r\nimport type { ImageData } from '../types';\r\n\r\nexport interface ImageExtractionOptions {\r\n  requirePhotoSwipeProcessing?: boolean;\r\n  minImageCount?: number;\r\n  maxRetries?: number;\r\n  retryDelay?: number;\r\n}\r\n\r\nexport class ImageExtractor {\r\n  private static readonly DEFAULT_OPTIONS: Required<ImageExtractionOptions> = {\r\n    requirePhotoSwipeProcessing: true,\r\n    minImageCount: 2,\r\n    maxRetries: 10,\r\n    retryDelay: 100\r\n  };\r\n\r\n  /**\r\n   * Extract raw images from a post element immediately (Glide-first approach)\r\n   * Does not wait for PhotoSwipe processing - extracts original img tags\r\n   */\r\n  public static extractRawImagesFromPost(postElement: HTMLElement | null): ImageData[] {\r\n    const images: ImageData[] = [];\r\n    \r\n    if (!postElement) {\r\n      console.log('[ImageExtractor] No post element provided for raw extraction');\r\n      return [];\r\n    }\r\n\r\n    console.log('[ImageExtractor] Starting raw image extraction (Glide-first)');\r\n\r\n    // Find all img elements directly, regardless of PhotoSwipe processing\r\n    const imageElements = postElement.querySelectorAll('img');\r\n    console.log('[ImageExtractor] Found', imageElements.length, 'raw image elements');\r\n\r\n    imageElements.forEach((img, index) => {\r\n      // Skip if image is too small (likely UI elements)\r\n      if (img.naturalWidth && img.naturalHeight && (img.naturalWidth < 100 || img.naturalHeight < 100)) {\r\n        console.log(`[ImageExtractor] Skipping small image ${index + 1}: ${img.naturalWidth}x${img.naturalHeight}`);\r\n        return;\r\n      }\r\n\r\n      // Skip if image source contains common UI indicators\r\n      if (this.isUIImage(img.src)) {\r\n        console.log(`[ImageExtractor] Skipping UI image ${index + 1}: ${img.src}`);\r\n        return;\r\n      }\r\n\r\n      const imageData: ImageData = {\r\n        id: `raw-img-${index}-${Date.now()}`,\r\n        src: img.src,\r\n        href: img.src, // Use src as href for raw images\r\n        alt: img.alt || `Image ${index + 1}`,\r\n        title: img.title || img.alt || `Image ${index + 1}`,\r\n        width: img.naturalWidth || parseInt(img.getAttribute('width') || '800', 10),\r\n        height: img.naturalHeight || parseInt(img.getAttribute('height') || '600', 10)\r\n      };\r\n\r\n      images.push(imageData);\r\n      console.log(`[ImageExtractor] Extracted raw image ${index + 1}: ${imageData.src}`);\r\n    });\r\n\r\n    console.log(`[ImageExtractor] Raw extraction completed: ${images.length} images`);\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * Check if an image is likely a UI element (avatar, icon, etc.)\r\n   */\r\n  private static isUIImage(src: string): boolean {\r\n    const uiIndicators = [\r\n      'avatar', 'icon', 'emoji', 'badge', 'logo', 'button',\r\n      'ui/', '/ui', 'assets/avatars', 'gravatar', 'favicon'\r\n    ];\r\n    \r\n    return uiIndicators.some(indicator => \r\n      src.toLowerCase().includes(indicator.toLowerCase())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Extract images from a post element with timing awareness\r\n   * Waits for PhotoSwipe to process images if required\r\n   */\r\n  public static async extractImagesFromPost(\r\n    postElement: HTMLElement | null,\r\n    options: ImageExtractionOptions = {}\r\n  ): Promise<ImageData[]> {\r\n    const config = { ...this.DEFAULT_OPTIONS, ...options };\r\n    \r\n    if (!postElement) {\r\n      console.log('[ImageExtractor] No post element provided');\r\n      return [];\r\n    }\r\n\r\n    console.log('[ImageExtractor] Starting extraction from post element');\r\n\r\n    // If PhotoSwipe processing is required, wait for it\r\n    if (config.requirePhotoSwipeProcessing) {\r\n      return this.waitForPhotoSwipeProcessing(postElement, config);\r\n    }\r\n\r\n    // Otherwise extract immediately\r\n    return this.extractImagesImmediately(postElement);\r\n  }\r\n\r\n  /**\r\n   * Wait for PhotoSwipe to process images, then extract\r\n   */\r\n  private static async waitForPhotoSwipeProcessing(\r\n    postElement: HTMLElement,\r\n    config: Required<ImageExtractionOptions>\r\n  ): Promise<ImageData[]> {\r\n    let attempts = 0;\r\n\r\n    return new Promise((resolve) => {\r\n      const attemptExtraction = () => {\r\n        attempts++;\r\n        console.log(`[ImageExtractor] Attempt ${attempts}/${config.maxRetries} - checking for PhotoSwipe processed images`);\r\n\r\n        const images = this.extractImagesImmediately(postElement);\r\n        \r\n        if (images.length >= config.minImageCount) {\r\n          console.log(`[ImageExtractor] Successfully extracted ${images.length} images after ${attempts} attempts`);\r\n          resolve(images);\r\n          return;\r\n        }\r\n\r\n        if (attempts >= config.maxRetries) {\r\n          console.warn(`[ImageExtractor] Max retries reached (${config.maxRetries}), returning ${images.length} images`);\r\n          resolve(images);\r\n          return;\r\n        }\r\n\r\n        // Retry after delay\r\n        setTimeout(attemptExtraction, config.retryDelay);\r\n      };\r\n\r\n      attemptExtraction();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Extract images immediately from the current DOM state\r\n   */\r\n  private static extractImagesImmediately(postElement: HTMLElement): ImageData[] {\r\n    const images: ImageData[] = [];\r\n    \r\n    // Look for PhotoSwipe processed images (wrapped in anchors)\r\n    const photoSwipeAnchors = postElement.querySelectorAll('a[data-pswp]');\r\n    console.log('[ImageExtractor] Found', photoSwipeAnchors.length, 'PhotoSwipe processed anchors');\r\n\r\n    photoSwipeAnchors.forEach((anchor, index) => {\r\n      const anchorElement = anchor as HTMLAnchorElement;\r\n      const img = anchorElement.querySelector('img');\r\n      \r\n      if (!img || !anchorElement.href) {\r\n        console.warn('[ImageExtractor] Skipping anchor without valid image or href');\r\n        return;\r\n      }\r\n\r\n      const imageData: ImageData = {\r\n        id: `img-${index}-${Date.now()}`,\r\n        src: img.src,\r\n        href: anchorElement.href,\r\n        alt: img.alt || '',\r\n        title: img.title || img.alt || '',\r\n        width: parseInt(anchorElement.dataset.pswpWidth || '0', 10) || img.naturalWidth || 800,\r\n        height: parseInt(anchorElement.dataset.pswpHeight || '0', 10) || img.naturalHeight || 600\r\n      };\r\n\r\n      images.push(imageData);\r\n      console.log(`[ImageExtractor] Extracted image ${index + 1}: ${imageData.href}`);\r\n    });\r\n\r\n    console.log(`[ImageExtractor] Total images extracted: ${images.length}`);\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * Find post elements using various fallback strategies\r\n   */\r\n  public static findPostElement(postId: string): HTMLElement | null {\r\n    console.log(`[ImageExtractor] Searching for post element with ID: ${postId}`);\r\n\r\n    const selectors = [\r\n      `[data-id=\"${postId}\"] .Post-body`,\r\n      `[data-id=\"${postId}\"]`,\r\n      `.PostStream-item[data-id=\"${postId}\"] .Post-body`,\r\n      `.PostStream-item[data-id=\"${postId}\"]`,\r\n      `#post-${postId} .Post-body`,\r\n      `#post-${postId}`\r\n    ];\r\n\r\n    for (const selector of selectors) {\r\n      const element = document.querySelector(selector) as HTMLElement;\r\n      if (element) {\r\n        console.log(`[ImageExtractor] Found post element with selector: ${selector}`);\r\n        return element;\r\n      }\r\n    }\r\n\r\n    console.warn(`[ImageExtractor] Post element not found for postId: ${postId}`);\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Check if a post has enough images for carousel display\r\n   */\r\n  public static async hasEnoughImagesForCarousel(\r\n    postId: string,\r\n    minImageCount: number = 2\r\n  ): Promise<boolean> {\r\n    const postElement = this.findPostElement(postId);\r\n    if (!postElement) return false;\r\n\r\n    const images = await this.extractImagesFromPost(postElement, {\r\n      requirePhotoSwipeProcessing: true,\r\n      minImageCount\r\n    });\r\n\r\n    return images.length >= minImageCount;\r\n  }\r\n}","/**\r\n * CarouselManager Service\r\n * \r\n * Centralized management of carousel instances to prevent conflicts\r\n * and ensure proper lifecycle management.\r\n */\r\n\r\nimport type { GlideInstance, CarouselConfig } from '../types';\r\n\r\ninterface CarouselRegistration {\r\n  instanceId: string;\r\n  glideInstance: GlideInstance;\r\n  config: CarouselConfig;\r\n  postId: string;\r\n  createdAt: number;\r\n}\r\n\r\nexport class CarouselManager {\r\n  private static registrations = new Map<string, CarouselRegistration>();\r\n\r\n  /**\r\n   * Register a new carousel instance\r\n   */\r\n  public static register(\r\n    instanceId: string,\r\n    glideInstance: GlideInstance,\r\n    config: CarouselConfig,\r\n    postId: string\r\n  ): void {\r\n    console.log(`[CarouselManager] Registering carousel: ${instanceId} for post: ${postId}`);\r\n\r\n    // Clean up any existing registration with the same instanceId\r\n    this.unregister(instanceId);\r\n\r\n    const registration: CarouselRegistration = {\r\n      instanceId,\r\n      glideInstance,\r\n      config,\r\n      postId,\r\n      createdAt: Date.now()\r\n    };\r\n\r\n    this.registrations.set(instanceId, registration);\r\n    console.log(`[CarouselManager] Total registered carousels: ${this.registrations.size}`);\r\n  }\r\n\r\n  /**\r\n   * Unregister a carousel instance\r\n   */\r\n  public static unregister(instanceId: string): void {\r\n    const registration = this.registrations.get(instanceId);\r\n    if (!registration) {\r\n      console.log(`[CarouselManager] No registration found for: ${instanceId}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`[CarouselManager] Unregistering carousel: ${instanceId}`);\r\n\r\n    try {\r\n      // Safely destroy the Glide instance\r\n      if (registration.glideInstance && typeof registration.glideInstance.destroy === 'function') {\r\n        registration.glideInstance.destroy();\r\n      }\r\n    } catch (error) {\r\n      console.error(`[CarouselManager] Error destroying carousel ${instanceId}:`, error);\r\n    }\r\n\r\n    this.registrations.delete(instanceId);\r\n    console.log(`[CarouselManager] Total registered carousels: ${this.registrations.size}`);\r\n  }\r\n\r\n  /**\r\n   * Pause all other carousels except the specified one\r\n   */\r\n  public static pauseOthers(excludeInstanceId: string): void {\r\n    console.log(`[CarouselManager] Pausing all carousels except: ${excludeInstanceId}`);\r\n\r\n    for (const [instanceId, registration] of this.registrations) {\r\n      if (instanceId === excludeInstanceId) continue;\r\n\r\n      try {\r\n        if (registration.glideInstance && typeof registration.glideInstance.pause === 'function') {\r\n          registration.glideInstance.pause();\r\n        }\r\n      } catch (error) {\r\n        console.error(`[CarouselManager] Error pausing carousel ${instanceId}:`, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get carousel instance by ID\r\n   */\r\n  public static getInstance(instanceId: string): GlideInstance | null {\r\n    const registration = this.registrations.get(instanceId);\r\n    return registration?.glideInstance || null;\r\n  }\r\n\r\n  /**\r\n   * Get all registered carousel IDs for a specific post\r\n   */\r\n  public static getInstancesForPost(postId: string): string[] {\r\n    const instances: string[] = [];\r\n\r\n    for (const [instanceId, registration] of this.registrations) {\r\n      if (registration.postId === postId) {\r\n        instances.push(instanceId);\r\n      }\r\n    }\r\n\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * Check if a carousel is registered and active\r\n   */\r\n  public static isRegistered(instanceId: string): boolean {\r\n    return this.registrations.has(instanceId);\r\n  }\r\n\r\n  /**\r\n   * Clean up old or orphaned carousel instances\r\n   */\r\n  public static cleanup(maxAge: number = 300000): void { // 5 minutes default\r\n    const now = Date.now();\r\n    const toRemove: string[] = [];\r\n\r\n    console.log(`[CarouselManager] Starting cleanup of carousels older than ${maxAge}ms`);\r\n\r\n    for (const [instanceId, registration] of this.registrations) {\r\n      const age = now - registration.createdAt;\r\n      \r\n      // Check if the carousel is too old\r\n      if (age > maxAge) {\r\n        console.log(`[CarouselManager] Marking for removal: ${instanceId} (age: ${age}ms)`);\r\n        toRemove.push(instanceId);\r\n        continue;\r\n      }\r\n\r\n      // Check if the DOM element still exists\r\n      const containerSelector = `#photoswipe-glide-${instanceId}`;\r\n      const containerElement = document.querySelector(containerSelector);\r\n      \r\n      if (!containerElement) {\r\n        console.log(`[CarouselManager] Marking for removal: ${instanceId} (DOM element not found)`);\r\n        toRemove.push(instanceId);\r\n      }\r\n    }\r\n\r\n    // Remove the marked instances\r\n    for (const instanceId of toRemove) {\r\n      this.unregister(instanceId);\r\n    }\r\n\r\n    console.log(`[CarouselManager] Cleanup completed. Removed ${toRemove.length} instances`);\r\n  }\r\n\r\n  /**\r\n   * Get statistics about registered carousels\r\n   */\r\n  public static getStats(): {\r\n    totalCount: number;\r\n    postCounts: Record<string, number>;\r\n    oldestAge: number;\r\n    newestAge: number;\r\n  } {\r\n    const now = Date.now();\r\n    const postCounts: Record<string, number> = {};\r\n    let oldestAge = 0;\r\n    let newestAge = 0;\r\n\r\n    for (const registration of this.registrations.values()) {\r\n      const age = now - registration.createdAt;\r\n      \r\n      // Track post counts\r\n      postCounts[registration.postId] = (postCounts[registration.postId] || 0) + 1;\r\n      \r\n      // Track age statistics\r\n      if (oldestAge === 0 || age > oldestAge) oldestAge = age;\r\n      if (newestAge === 0 || age < newestAge) newestAge = age;\r\n    }\r\n\r\n    return {\r\n      totalCount: this.registrations.size,\r\n      postCounts,\r\n      oldestAge,\r\n      newestAge\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize cleanup interval\r\n   */\r\n  public static startCleanupInterval(interval: number = 60000): void { // 1 minute default\r\n    console.log(`[CarouselManager] Starting cleanup interval every ${interval}ms`);\r\n\r\n    setInterval(() => {\r\n      this.cleanup();\r\n    }, interval);\r\n  }\r\n}\r\n\r\n// Initialize cleanup interval when the service is loaded\r\nCarouselManager.startCleanupInterval();","/**\r\n * Carousel Configuration Provider\r\n * Semantic configuration management for image carousels with responsive design\r\n */\r\n\r\nimport type { \r\n  GlideInstance, \r\n  CarouselConfig\r\n} from '../types';\r\n\r\n/**\r\n * Provides responsive carousel configurations based on content and device\r\n */\r\nexport class CarouselConfigurationProvider {\r\n  /**\r\n   * Get configuration for image galleries with responsive breakpoints\r\n   */\r\n  public static getImageGalleryConfiguration(imageCount: number): CarouselConfig {\r\n    const deviceInfo = this.getDeviceInformation();\r\n    const enableLooping = imageCount >= this.getMinimumImagesForLooping(deviceInfo);\r\n\r\n    const baseConfig: CarouselConfig = {\r\n      type: enableLooping ? 'carousel' : 'slider',\r\n      perView: this.getOptimalPerView(deviceInfo),\r\n      focusAt: 0,\r\n      startAt: 0,\r\n      gap: this.getOptimalGap(deviceInfo),\r\n      autoplay: false, // Disabled by default for image viewing\r\n      hoverpause: true,\r\n      keyboard: true,\r\n      bound: !enableLooping,\r\n      rewind: !enableLooping,\r\n      rewindDuration: 800,\r\n      animationDuration: 600,\r\n      breakpoints: this.getResponsiveBreakpoints()\r\n    };\r\n\r\n    console.log(`[CarouselConfig] Generated configuration for ${imageCount} images:`, baseConfig);\r\n    return baseConfig;\r\n  }\r\n\r\n  /**\r\n   * Get configuration specifically for post galleries with autoplay\r\n   */\r\n  public static getPostGalleryConfiguration(imageCount: number): CarouselConfig {\r\n    const config = this.getImageGalleryConfiguration(imageCount);\r\n    \r\n    // Enable autoplay for post galleries with sufficient content\r\n    if (imageCount >= 3) {\r\n      config.autoplay = 8000; // 8 seconds per slide\r\n      config.hoverpause = true;\r\n      console.log(`[CarouselConfig] Enabled autoplay for ${imageCount} images`);\r\n    }\r\n\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Get device information for responsive configuration\r\n   */\r\n  private static getDeviceInformation(): {\r\n    isMobile: boolean;\r\n    isTablet: boolean;\r\n    isDesktop: boolean;\r\n    screenWidth: number;\r\n  } {\r\n    const screenWidth = window.innerWidth;\r\n    return {\r\n      isMobile: screenWidth < 768,\r\n      isTablet: screenWidth >= 768 && screenWidth < 1024,\r\n      isDesktop: screenWidth >= 1024,\r\n      screenWidth\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determine minimum images needed for looping based on device\r\n   */\r\n  private static getMinimumImagesForLooping(deviceInfo: ReturnType<typeof CarouselConfigurationProvider.getDeviceInformation>): number {\r\n    if (deviceInfo.isMobile) return 2;\r\n    if (deviceInfo.isTablet) return 3;\r\n    return 4; // Desktop\r\n  }\r\n\r\n  /**\r\n   * Get optimal images per view based on device\r\n   */\r\n  private static getOptimalPerView(deviceInfo: ReturnType<typeof CarouselConfigurationProvider.getDeviceInformation>): number {\r\n    if (deviceInfo.isMobile) return 1;\r\n    if (deviceInfo.isTablet) return 2;\r\n    return 3; // Desktop\r\n  }\r\n\r\n  /**\r\n   * Get optimal gap between slides based on device\r\n   */\r\n  private static getOptimalGap(deviceInfo: ReturnType<typeof CarouselConfigurationProvider.getDeviceInformation>): number {\r\n    if (deviceInfo.isMobile) return 15;\r\n    if (deviceInfo.isTablet) return 20;\r\n    return 25; // Desktop\r\n  }\r\n\r\n  /**\r\n   * Get responsive breakpoint configuration\r\n   */\r\n  private static getResponsiveBreakpoints(): Record<string, Partial<CarouselConfig>> {\r\n    return {\r\n      1440: { perView: 3, gap: 25 },\r\n      1024: { perView: 2, gap: 20 },\r\n      768: { perView: 2, gap: 15 },\r\n      640: { perView: 1, gap: 15 },\r\n      480: { perView: 1, gap: 10 },\r\n      320: { perView: 1, gap: 10 }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Carousel Engine Factory\r\n * Creates and manages Glide carousel instances with proper error handling\r\n */\r\nexport class CarouselEngineFactory {\r\n  /**\r\n   * Initialize a new carousel engine instance\r\n   */\r\n  public static async initializeCarouselEngine(\r\n    containerElement: HTMLElement,\r\n    configuration: CarouselConfig,\r\n    componentName: string = 'ImageCarousel'\r\n  ): Promise<GlideInstance | null> {\r\n    try {\r\n      console.log(`[CarouselEngine] Initializing ${componentName} with configuration:`, configuration);\r\n\r\n      const { default: Glide } = await import('@glidejs/glide');\r\n\r\n      if (!Glide) {\r\n        throw new Error(`${componentName}: Glide class not available`);\r\n      }\r\n\r\n      const glideInstance = new Glide(containerElement, configuration);\r\n\r\n      // Set up event handlers for debugging and monitoring\r\n      this.setupEngineEventHandlers(glideInstance, componentName);\r\n\r\n      // Mount and return the instance\r\n      const mountedInstance = glideInstance.mount() as GlideInstance;\r\n      \r\n      // Store reference on container for debugging\r\n      (containerElement as any).glideInstance = mountedInstance;\r\n\r\n      console.log(`[CarouselEngine] ${componentName} successfully initialized`);\r\n      return mountedInstance;\r\n\r\n    } catch (error) {\r\n      console.error(`[CarouselEngine] Failed to initialize ${componentName}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers for carousel engine monitoring\r\n   */\r\n  private static setupEngineEventHandlers(glideInstance: GlideInstance, componentName: string): void {\r\n    glideInstance.on('mount.after', () => {\r\n      console.log(`[CarouselEngine] ${componentName} mounted successfully`);\r\n    });\r\n\r\n    glideInstance.on('move.start', () => {\r\n      console.log(`[CarouselEngine] ${componentName} slide transition started`);\r\n    });\r\n\r\n    glideInstance.on('move.after', () => {\r\n      console.log(`[CarouselEngine] ${componentName} slide transition completed`);\r\n    });\r\n\r\n    glideInstance.on('destroy', () => {\r\n      console.log(`[CarouselEngine] ${componentName} destroyed`);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Safely destroy a carousel engine instance\r\n   */\r\n  public static destroyCarouselEngine(\r\n    engineInstance: GlideInstance | null, \r\n    containerSelector?: string,\r\n    componentName: string = 'ImageCarousel'\r\n  ): void {\r\n    if (!engineInstance || typeof engineInstance.destroy !== 'function') {\r\n      console.log(`[CarouselEngine] No valid ${componentName} instance to destroy`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(`[CarouselEngine] Destroying ${componentName} instance`);\r\n      engineInstance.destroy();\r\n\r\n      // Clean up container reference\r\n      if (containerSelector) {\r\n        const container = document.querySelector(containerSelector) as any;\r\n        if (container) {\r\n          container.glideInstance = null;\r\n        }\r\n      }\r\n\r\n      console.log(`[CarouselEngine] ${componentName} destroyed successfully`);\r\n    } catch (error) {\r\n      console.error(`[CarouselEngine] Error destroying ${componentName}:`, error);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Instance ID Generator\r\n * Creates unique identifiers for carousel instances\r\n */\r\nexport class CarouselInstanceIdGenerator {\r\n  /**\r\n   * Generate unique instance ID with semantic naming\r\n   */\r\n  public static generateUniqueId(postId?: string, prefix: string = 'carousel'): string {\r\n    const timestamp = Date.now();\r\n    const randomSuffix = Math.random().toString(36).substr(2, 9);\r\n    \r\n    if (postId) {\r\n      return `${prefix}-post-${postId}-${timestamp}-${randomSuffix}`;\r\n    }\r\n    \r\n    return `${prefix}-${timestamp}-${randomSuffix}`;\r\n  }\r\n\r\n  /**\r\n   * Generate container ID for DOM element\r\n   */\r\n  public static generateContainerId(instanceId: string): string {\r\n    return `image-carousel-${instanceId}`;\r\n  }\r\n\r\n  /**\r\n   * Extract post ID from instance ID (if available)\r\n   */\r\n  public static extractPostId(instanceId: string): string | null {\r\n    const match = instanceId.match(/post-(\\d+)/);\r\n    return match ? match[1] : null;\r\n  }\r\n}","/**\r\n * ImageCarousel Component\r\n * \r\n * Semantic image carousel component that properly coordinates with PhotoSwipe processing.\r\n * Follows a service-oriented architecture with clear separation of concerns.\r\n */\r\n\r\nimport Component from 'flarum/common/Component';\r\nimport type Mithril from 'mithril';\r\nimport type {\r\n  CarouselState,\r\n  ErrorState,\r\n  ImageCarouselAttrs,\r\n  GlideInstance,\r\n  ImageData\r\n} from '../types';\r\n\r\nimport { ImageExtractor } from '../services/ImageExtractor';\r\nimport { CarouselManager } from '../services/CarouselManager';\r\nimport { \r\n  CarouselConfigurationProvider,\r\n  CarouselEngineFactory,\r\n  CarouselInstanceIdGenerator \r\n} from '../utils/CarouselConfigurationProvider';\r\n\r\n/**\r\n * Main image carousel component with proper lifecycle management\r\n */\r\nexport default class ImageCarousel extends Component<ImageCarouselAttrs> {\r\n  private carouselState: CarouselState;\r\n  private errorState: ErrorState = { hasError: false };\r\n  private carouselEngine: GlideInstance | null = null;\r\n  private containerElement: HTMLElement | null = null;\r\n\r\n  oninit(vnode: Mithril.Vnode<ImageCarouselAttrs>) {\r\n    super.oninit(vnode);\r\n    \r\n    console.log('[ImageCarousel] Initializing component for post:', vnode.attrs.postId);\r\n\r\n    // Initialize component state\r\n    this.carouselState = {\r\n      isInitialized: false,\r\n      isDestroying: false,\r\n      isExtracting: false,\r\n      instanceId: CarouselInstanceIdGenerator.generateUniqueId(vnode.attrs.postId),\r\n      postId: vnode.attrs.postId,\r\n      images: [],\r\n      currentIndex: 0,\r\n      lastUpdate: Date.now()\r\n    };\r\n\r\n    console.log('[ImageCarousel] Component initialized with instance ID:', this.carouselState.instanceId);\r\n    \r\n    // Start image extraction process immediately\r\n    this.initiateImageExtraction(vnode.attrs);\r\n  }\r\n\r\n  /**\r\n   * Initiate the image extraction process using Glide-first approach\r\n   */\r\n  private initiateImageExtraction(attrs: ImageCarouselAttrs): void {\r\n    if (this.carouselState.isExtracting) {\r\n      console.log('[ImageCarousel] Extraction already in progress, skipping');\r\n      return;\r\n    }\r\n\r\n    this.carouselState.isExtracting = true;\r\n    console.log('[ImageCarousel] Starting Glide-first image extraction for post:', attrs.postId);\r\n\r\n    try {\r\n      // Find post element using multiple strategies\r\n      const postElement = this.findPostElement(attrs);\r\n      \r\n      if (!postElement) {\r\n        throw new Error(`Post element not found for post ID: ${attrs.postId}`);\r\n      }\r\n\r\n      // Extract raw images immediately (Glide-first approach)\r\n      const extractedImages = ImageExtractor.extractRawImagesFromPost(postElement);\r\n      \r\n      console.log('[ImageCarousel] Glide-first extraction completed:', extractedImages.length, 'images found');\r\n      \r\n      // Update component state with extracted images\r\n      this.updateComponentState(extractedImages);\r\n      \r\n    } catch (error) {\r\n      console.error('[ImageCarousel] Glide-first extraction failed:', error);\r\n      this.handleExtractionError(error);\r\n    } finally {\r\n      this.carouselState.isExtracting = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find post element using various fallback strategies\r\n   */\r\n  private findPostElement(attrs: ImageCarouselAttrs): HTMLElement | null {\r\n    // Use provided element first\r\n    if (attrs.postElement) {\r\n      console.log('[ImageCarousel] Using provided post element');\r\n      return attrs.postElement;\r\n    }\r\n\r\n    // Fall back to finding by post ID\r\n    return ImageExtractor.findPostElement(attrs.postId);\r\n  }\r\n\r\n  /**\r\n   * Update component state with extracted images\r\n   */\r\n  private updateComponentState(images: ImageData[]): void {\r\n    this.carouselState.images = images;\r\n    this.carouselState.lastUpdate = Date.now();\r\n    \r\n    console.log('[ImageCarousel] Component state updated with', images.length, 'images');\r\n    \r\n    // Trigger re-render to show carousel if we have enough images\r\n    if (images.length >= 2) {\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle image extraction errors\r\n   */\r\n  private handleExtractionError(error: any): void {\r\n    this.errorState = {\r\n      hasError: true,\r\n      message: error instanceof Error ? error.message : 'Image extraction failed',\r\n      component: 'ImageCarousel',\r\n      timestamp: Date.now()\r\n    };\r\n    \r\n    console.error('[ImageCarousel] Extraction error handled:', this.errorState);\r\n  }\r\n\r\n  view(_vnode: Mithril.Vnode<ImageCarouselAttrs>): Mithril.Children {\r\n    console.log('[ImageCarousel] Rendering view - images:', this.carouselState.images.length, 'error:', this.errorState.hasError);\r\n    \r\n    // Show error state if there's an error\r\n    if (this.errorState.hasError) {\r\n      return this.renderErrorState();\r\n    }\r\n\r\n    // Don't render if we don't have enough images\r\n    if (this.carouselState.images.length < 2) {\r\n      console.log('[ImageCarousel] Not enough images for carousel, not rendering');\r\n      return null;\r\n    }\r\n\r\n    // Show loading state while extracting\r\n    if (this.carouselState.isExtracting) {\r\n      return this.renderLoadingState();\r\n    }\r\n    \r\n    console.log('[ImageCarousel] Rendering carousel with', this.carouselState.images.length, 'images');\r\n    return this.renderCarouselContainer();\r\n  }\r\n\r\n  /**\r\n   * Render the carousel container structure\r\n   */\r\n  private renderCarouselContainer(): Mithril.Children {\r\n    const containerId = CarouselInstanceIdGenerator.generateContainerId(this.carouselState.instanceId);\r\n    \r\n    console.log('[ImageCarousel] Rendering container with ID:', containerId);\r\n\r\n    return (\r\n      <div className=\"image-carousel-wrapper\">\r\n        <div className=\"image-carousel-header\">\r\n          <h4>Image Gallery ({this.carouselState.images.length} images)</h4>\r\n          <div className=\"carousel-counter\">\r\n            <span className=\"current\">{this.carouselState.currentIndex + 1}</span> /\r\n            <span className=\"total\">{this.carouselState.images.length}</span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"glide image-carousel\"\r\n          id={containerId}\r\n        >\r\n          <div className=\"glide__track\" data-glide-el=\"track\">\r\n            <ul className=\"glide__slides\">\r\n              {this.carouselState.images.map((image, index) => this.renderCarouselSlide(image, index))}\r\n            </ul>\r\n          </div>\r\n          \r\n          {this.renderNavigationArrows()}\r\n          {this.renderNavigationBullets()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render individual carousel slide\r\n   */\r\n  private renderCarouselSlide(image: ImageData, index: number): Mithril.Children {\r\n    return (\r\n      <li\r\n        key={`slide-${image.id}`}\r\n        className=\"glide__slide carousel-slide\"\r\n        data-slide-index={index}\r\n      >\r\n        <div className=\"slide-container\">\r\n          <div className=\"slide-image-wrapper\">\r\n            <img\r\n              src={image.src}\r\n              alt={image.alt}\r\n              title={image.title}\r\n              className=\"slide-image\"\r\n              loading=\"lazy\"\r\n            />\r\n          </div>\r\n          {image.title && (\r\n            <div className=\"slide-caption\">{image.title}</div>\r\n          )}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Render navigation arrows\r\n   */\r\n  private renderNavigationArrows(): Mithril.Children {\r\n    return (\r\n      <div className=\"glide__arrows\" data-glide-el=\"controls\">\r\n        <button\r\n          className=\"glide__arrow glide__arrow--left\"\r\n          data-glide-dir=\"<\"\r\n          aria-label=\"Previous image\"\r\n        >\r\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\r\n          </svg>\r\n        </button>\r\n        <button\r\n          className=\"glide__arrow glide__arrow--right\"\r\n          data-glide-dir=\">\"\r\n          aria-label=\"Next image\"\r\n        >\r\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M8.59 16.59L10 18l6-6-6-6-1.41 1.41L13.17 12z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render navigation bullets\r\n   */\r\n  private renderNavigationBullets(): Mithril.Children {\r\n    return (\r\n      <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\r\n        {this.carouselState.images.map((_, index) => (\r\n          <button\r\n            className={`glide__bullet ${index === this.carouselState.currentIndex ? 'glide__bullet--active' : ''}`}\r\n            data-glide-dir={`=${index}`}\r\n            aria-label={`Go to image ${index + 1}`}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render loading state\r\n   */\r\n  private renderLoadingState(): Mithril.Children {\r\n    return (\r\n      <div className=\"image-carousel-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading image gallery...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render error state\r\n   */\r\n  private renderErrorState(): Mithril.Children {\r\n    return (\r\n      <div className=\"image-carousel-error\">\r\n        <p>Error loading image gallery: {this.errorState.message}</p>\r\n        <button onclick={() => this.retryCarouselInitialization()}>\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async oncreate(vnode: Mithril.VnodeDOM<ImageCarouselAttrs>) {\r\n    super.oncreate(vnode);\r\n    \r\n    console.log('[ImageCarousel] Component created, checking for carousel initialization');\r\n    console.log('[ImageCarousel] Current state - images:', this.carouselState.images.length, 'initialized:', this.carouselState.isInitialized);\r\n\r\n    // If we have images and haven't initialized yet, do it now\r\n    if (this.carouselState.images.length >= 2 && !this.carouselState.isInitialized) {\r\n      await this.initializeCarouselEngine(vnode.attrs);\r\n    }\r\n  }\r\n\r\n  async onupdate(vnode: Mithril.VnodeDOM<ImageCarouselAttrs>) {\r\n    super.onupdate(vnode);\r\n    \r\n    console.log('[ImageCarousel] Component updated, checking state');\r\n    \r\n    // Initialize carousel if we now have enough images but haven't initialized\r\n    if (this.carouselState.images.length >= 2 && !this.carouselState.isInitialized && !this.carouselState.isDestroying) {\r\n      const containerId = CarouselInstanceIdGenerator.generateContainerId(this.carouselState.instanceId);\r\n      const containerElement = document.querySelector(`#${containerId}`);\r\n      \r\n      if (containerElement) {\r\n        console.log('[ImageCarousel] Container found in onupdate, initializing carousel');\r\n        await this.initializeCarouselEngine(vnode.attrs);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the carousel engine with proper configuration\r\n   */\r\n  private async initializeCarouselEngine(attrs: ImageCarouselAttrs): Promise<void> {\r\n    if (this.carouselState.isInitialized || this.carouselState.images.length < 2) {\r\n      console.log('[ImageCarousel] Skipping initialization - already initialized or not enough images');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Find container element\r\n      const containerId = CarouselInstanceIdGenerator.generateContainerId(this.carouselState.instanceId);\r\n      this.containerElement = document.querySelector(`#${containerId}`);\r\n\r\n      if (!this.containerElement) {\r\n        throw new Error(`Carousel container not found: ${containerId}`);\r\n      }\r\n\r\n      // Get configuration\r\n      const config = CarouselConfigurationProvider.getPostGalleryConfiguration(this.carouselState.images.length);\r\n\r\n      // Override autoplay if specified\r\n      if (attrs.enableAutoplay !== undefined) {\r\n        config.autoplay = attrs.enableAutoplay ? 8000 : false;\r\n      }\r\n\r\n      console.log('[ImageCarousel] Initializing carousel engine with config:', config);\r\n\r\n      // Initialize the carousel engine\r\n      this.carouselEngine = await CarouselEngineFactory.initializeCarouselEngine(\r\n        this.containerElement,\r\n        config,\r\n        'ImageCarousel'\r\n      );\r\n\r\n      if (this.carouselEngine) {\r\n        // Register with carousel manager\r\n        CarouselManager.register(\r\n          this.carouselState.instanceId,\r\n          this.carouselEngine,\r\n          config,\r\n          this.carouselState.postId\r\n        );\r\n\r\n        // Set up event handlers\r\n        this.setupCarouselEventHandlers();\r\n\r\n        // Mark as initialized\r\n        this.carouselState.isInitialized = true;\r\n        this.errorState = { hasError: false };\r\n        \r\n        console.log('[ImageCarousel] Carousel engine successfully initialized');\r\n      }\r\n    } catch (error) {\r\n      console.error('[ImageCarousel] Failed to initialize carousel engine:', error);\r\n      this.handleInitializationError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up carousel event handlers for state management\r\n   */\r\n  private setupCarouselEventHandlers(): void {\r\n    if (!this.carouselEngine) return;\r\n\r\n    this.carouselEngine.on('mount.after', () => {\r\n      console.log('[ImageCarousel] Carousel mounted with', this.carouselState.images.length, 'images');\r\n    });\r\n\r\n    this.carouselEngine.on('move.start', () => {\r\n      CarouselManager.pauseOthers(this.carouselState.instanceId);\r\n    });\r\n\r\n    this.carouselEngine.on('move.after', () => {\r\n      this.updateCurrentSlideIndex();\r\n    });\r\n\r\n    this.carouselEngine.on('destroy', () => {\r\n      CarouselManager.unregister(this.carouselState.instanceId);\r\n      this.carouselState.isInitialized = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update current slide index for UI counter\r\n   */\r\n  private updateCurrentSlideIndex(): void {\r\n    if (!this.containerElement) return;\r\n\r\n    try {\r\n      const activeSlide = this.containerElement.querySelector('.glide__slide--active');\r\n      if (activeSlide) {\r\n        const index = parseInt(activeSlide.getAttribute('data-slide-index') || '0', 10);\r\n        if (index !== this.carouselState.currentIndex) {\r\n          this.carouselState.currentIndex = index;\r\n          m.redraw();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('[ImageCarousel] Error updating slide index:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle carousel initialization errors\r\n   */\r\n  private handleInitializationError(error: any): void {\r\n    this.errorState = {\r\n      hasError: true,\r\n      message: error instanceof Error ? error.message : 'Carousel initialization failed',\r\n      component: 'ImageCarousel',\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Retry carousel initialization\r\n   */\r\n  private async retryCarouselInitialization(): Promise<void> {\r\n    console.log('[ImageCarousel] Retrying carousel initialization');\r\n    \r\n    this.errorState = { hasError: false };\r\n    this.carouselState.isInitialized = false;\r\n    \r\n    // Re-extract images and reinitialize\r\n    await this.initiateImageExtraction(this.attrs);\r\n    \r\n    if (this.carouselState.images.length >= 2) {\r\n      await this.initializeCarouselEngine(this.attrs);\r\n    }\r\n    \r\n    m.redraw();\r\n  }\r\n\r\n  onbeforeremove(vnode: Mithril.VnodeDOM<ImageCarouselAttrs>) {\r\n    super.onbeforeremove(vnode);\r\n    console.log('[ImageCarousel] Component being removed, cleaning up');\r\n    \r\n    this.carouselState.isDestroying = true;\r\n    this.destroyCarouselEngine();\r\n  }\r\n\r\n  onremove(vnode: Mithril.VnodeDOM<ImageCarouselAttrs>) {\r\n    super.onremove(vnode);\r\n    \r\n    if (!this.carouselState.isDestroying) {\r\n      this.destroyCarouselEngine();\r\n    }\r\n    \r\n    console.log('[ImageCarousel] Component removed');\r\n  }\r\n\r\n  /**\r\n   * Clean up carousel engine and resources\r\n   */\r\n  private destroyCarouselEngine(): void {\r\n    if (!this.carouselEngine || this.carouselState.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    console.log('[ImageCarousel] Destroying carousel engine');\r\n    this.carouselState.isDestroying = true;\r\n\r\n    try {\r\n      const containerId = CarouselInstanceIdGenerator.generateContainerId(this.carouselState.instanceId);\r\n      \r\n      CarouselEngineFactory.destroyCarouselEngine(\r\n        this.carouselEngine,\r\n        `#${containerId}`,\r\n        'ImageCarousel'\r\n      );\r\n      \r\n      CarouselManager.unregister(this.carouselState.instanceId);\r\n    } catch (error) {\r\n      console.error('[ImageCarousel] Error during cleanup:', error);\r\n    } finally {\r\n      this.carouselEngine = null;\r\n      this.carouselState.isInitialized = false;\r\n      this.containerElement = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Static method to check if component should be displayed\r\n   */\r\n  static async shouldDisplayCarousel(postElement: HTMLElement): Promise<boolean> {\r\n    const images = await ImageExtractor.extractImagesFromPost(postElement, {\r\n      requirePhotoSwipeProcessing: false, // Quick check without waiting\r\n      minImageCount: 2\r\n    });\r\n    return images.length >= 2;\r\n  }\r\n\r\n  /**\r\n   * Static method to check if component should be displayed by post ID\r\n   */\r\n  static async shouldDisplayCarouselByPostId(postId: string): Promise<boolean> {\r\n    return ImageExtractor.hasEnoughImagesForCarousel(postId, 2);\r\n  }\r\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport ImageCarousel from './components/ImageCarousel';\nimport { CarouselManager } from './services/CarouselManager';\nimport m from 'mithril';\n\napp.initializers.add('wusong8899-image-carousel', () => {\n  console.log('[ImageCarousel] Extension initializing...');\n  \n  let components: any[] = [CommentPost.prototype];\n\n  // Add support for synopsis extension\n  if ('ianm-synopsis' in flarum.extensions) {\n    components.push(DiscussionListItem.prototype);\n    console.log('[ImageCarousel] Found ianm-synopsis extension');\n  }\n\n  components.forEach((prototype) => {\n    // Add helper methods to prototype\n    prototype.initializeCarouselComponent = function() {\n      if (!this.attrs?.post) {\n        console.log('[ImageCarousel] No post attrs found');\n        return;\n      }\n      \n      const postId = this.attrs.post.id();\n      if (!postId) {\n        console.log('[ImageCarousel] No post ID found');\n        return;\n      }\n\n      // Store reference for use in contentItems\n      this.carouselPostId = postId.toString();\n      this.carouselDiscussionId = this.attrs.post?.discussion?.()?.id?.()?.toString();\n      console.log('[ImageCarousel] Component initialized for post:', this.carouselPostId);\n    };\n\n    extend(prototype, 'oninit', function (this: any) {\n      // Initialize carousel component properties\n      this.initializeCarouselComponent();\n    });\n\n    // Extend contentItems to add image carousel using Flarum's ItemList pattern\n    extend(prototype, 'contentItems', function (items) {\n      console.log('[ImageCarousel] contentItems called, attrs:', this.attrs?.post?.id(), 'postId:', this.carouselPostId);\n      \n      // Only add carousel component for CommentPost (posts with actual content)\n      if (this.attrs?.post && this.carouselPostId) {\n        const postId = this.carouselPostId;\n        \n        console.log('[ImageCarousel] Adding carousel component for post:', postId);\n        \n        // Add the component - it will handle its own visibility logic\n        items.add(\n          'image-carousel',\n          m(ImageCarousel, {\n            postId: postId,\n            discussionId: this.carouselDiscussionId,\n            enableAutoplay: false, // Default: no autoplay for better UX\n            minImageCount: 2\n          }),\n          100 // High priority to render before main content (at the top)\n        );\n      } else {\n        console.log('[ImageCarousel] Not adding component - post attrs or postId missing');\n      }\n    });\n  });\n\n  // Global cleanup handler for navigation\n  extend(app, 'mount', function () {\n    // Clean up all carousel instances on navigation\n    CarouselManager.cleanup();\n  });\n});\n","/*!\n * Glide.js v3.7.1\n * (c) 2013-2024 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n    var properties = ['direction', 'type', 'slide', 'arrow', 'nav'];\n    properties.forEach(function (property) {\n      if (settings.classes.hasOwnProperty(property)) {\n        options.classes[property] = _objectSpread2(_objectSpread2({}, defaults.classes[property]), settings.classes[property]);\n      }\n    });\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout, context, args, result;\n  var previous = 0;\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (r !== null) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      Html._t = t;\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length > 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (disabled) {\n        return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      item.classList.add(settings.classes.nav.active);\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.nav.active);\n      });\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n      item === null || item === void 0 ? void 0 : item.classList.remove(Glide.settings.classes.nav.active);\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n      var arrowSymbols = {\n        ArrowRight: '>',\n        ArrowLeft: '<'\n      };\n\n      if (['ArrowRight', 'ArrowLeft'].includes(event.code)) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe).concat(arrowSymbols[event.code])));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n"],"names":["_ImageExtractor","postElement","images","imageElements","img","index","imageData","src","indicator","options","config","attempts","resolve","attemptExtraction","photoSwipeAnchors","anchor","anchorElement","postId","selectors","selector","element","minImageCount","ImageExtractor","_CarouselManager","instanceId","glideInstance","registration","error","excludeInstanceId","instances","maxAge","now","toRemove","age","containerSelector","postCounts","oldestAge","newestAge","interval","CarouselManager","CarouselConfigurationProvider","imageCount","deviceInfo","enableLooping","baseConfig","screenWidth","CarouselEngineFactory","containerElement","configuration","componentName","Glide","__vitePreload","glide_esm","mountedInstance","engineInstance","container","CarouselInstanceIdGenerator","prefix","timestamp","randomSuffix","match","ImageCarousel","Component","vnode","attrs","extractedImages","_vnode","containerId","image","_","activeSlide","app","components","CommentPost","DiscussionListItem","prototype","extend","items","m","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","target","i","source","key","_defineProperty","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","value","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","p","_isNativeReflectConstruct","_assertThisInitialized","self","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","_superPropBase","property","_get","receiver","base","desc","defaults","warn","msg","toInt","toFloat","isString","isObject","type","isFunction","isUndefined","isArray","mount","glide","extensions","events","name","_name","define","prop","definition","sortKeys","r","k","mergeOptions","settings","properties","EventsBus","event","handler","context","item","Glide$1","transformers","pattern","distance","status","Run","Components","Events","move","_this","length","steps","direction","viewSize","calculateForwardIndex","normalizeForwardIndex","_index","calculateBackwardIndex","normalizeBackwardIndex","view","step","throttle","func","wait","timeout","args","previous","later","throttled","at","remaining","MARGIN_TYPE","Gaps","slides","len","style","perView","siblings","node","n","matched","toArray","nodeList","TRACK_SELECTOR","Html","slide","t","Peek","Move","offset","translate","Sizes","width","Build","classes","sibling","_Glide$settings$class","Clones","_Glide$settings","cloningRatio","peekIncrementer","cloneCount","append","prepend","clone","_i","_clone","_Components$Html","wrapper","half","_i2","_i3","EventsBinder","listeners","el","closure","capture","Resize","Binder","VALID_DIRECTIONS","FLIPED_MOVEMENTS","Direction","token","Rtl","Gap","multiplier","Grow","Peeking","peek","Focusing","gap","focusAt","slideWidth","mutator","TRANSFORMERS","transformer","Translate","transform","translate3d","travelDistance","startWidth","Transition","disabled","callback","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","swipe","touchAngle","touchRatio","subExSx","subEySy","powEX","powEY","swipeHypotenuse","swipeCathetus","_Glide$settings2","perSwipe","threshold","swipeDistance","swipeDeg","_Glide$settings3","swipeThreshold","dragThreshold","_this2","_this3","Images","Anchors","detached","prevented","NAV_SELECTOR","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","Controls","controls","next","_len","lists","_key","list","_len2","_key2","elements","Keyboard","arrowSymbols","Autoplay","autoplay","sortBreakpoints","points","Breakpoints","point","COMPONENTS","_Core","_super"],"mappings":"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","x_google_ignoreList":[5]}